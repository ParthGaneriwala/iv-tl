{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/stores.js","../src/utils/cnn.js","../src/detail-view/DetailviewUtils.js","../src/detail-view/Dataview.svelte","../src/detail-view/KernelMathView.svelte","../src/detail-view/ConvolutionAnimator.svelte","../src/detail-view/Convolutionview.svelte","../src/detail-view/ActivationAnimator.svelte","../src/detail-view/Activationview.svelte","../src/detail-view/PoolAnimator.svelte","../src/detail-view/Poolview.svelte","../src/detail-view/Softmaxview.svelte","../src/overview/Modal.svelte","../src/article/Youtube.svelte","../src/utils/cnn-tf.js","../src/config.js","../src/overview/draw-utils.js","../src/overview/overview-draw.js","../src/overview/intermediate-utils.js","../src/overview/intermediate-draw.js","../src/overview/flatten-draw.js","../src/overview/Overview.svelte","../src/Explainer.svelte","../src/Header.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","import { writable } from 'svelte/store';\r\n\r\nexport const cnnStore = writable([]);\r\nexport const svgStore = writable(undefined);\r\n\r\nexport const vSpaceAroundGapStore = writable(undefined);\r\nexport const hSpaceAroundGapStore = writable(undefined);\r\n\r\nexport const nodeCoordinateStore = writable([]);\r\nexport const selectedScaleLevelStore = writable(undefined);\r\n\r\nexport const cnnLayerRangesStore = writable({});\r\nexport const cnnLayerMinMaxStore = writable([]);\r\n\r\nexport const needRedrawStore = writable([undefined, undefined]);\r\n\r\nexport const detailedModeStore = writable(true);\r\n\r\nexport const shouldIntermediateAnimateStore = writable(false);\r\n\r\nexport const isInSoftmaxStore = writable(false);\r\nexport const softmaxDetailViewStore = writable({});\r\nexport const allowsSoftmaxAnimationStore = writable(false);\r\n\r\nexport const hoverInfoStore = writable({});\r\n\r\nexport const modalStore = writable({});\r\n\r\nexport const intermediateLayerPositionStore = writable({});","// Enum of node types\r\nconst nodeType = {\r\n  INPUT: 'input',\r\n  CONV: 'conv',\r\n  POOL: 'pool',\r\n  RELU: 'relu',\r\n  FC: 'fc',\r\n  FLATTEN: 'flatten'\r\n}\r\n\r\nclass Node {\r\n  /**\r\n   * Class structure for each neuron node.\r\n   * \r\n   * @param {string} layerName Name of the node's layer.\r\n   * @param {int} index Index of this node in its layer.\r\n   * @param {string} type Node type {input, conv, pool, relu, fc}. \r\n   * @param {number} bias The bias assocated to this node.\r\n   * @param {[[number]]} output Output of this node.\r\n   */\r\n  constructor(layerName, index, type, bias, output) {\r\n    this.layerName = layerName;\r\n    this.index = index;\r\n    this.type = type;\r\n    this.bias = bias;\r\n    this.output = output;\r\n\r\n    // Weights are stored in the links\r\n    this.inputLinks = [];\r\n    this.outputLinks = [];\r\n  }\r\n}\r\n\r\nclass Link {\r\n  constructor(source, dest, weight) {\r\n    this.source = source;\r\n    this.dest = dest;\r\n    this.weight = weight;\r\n  }\r\n}\r\n\r\nconst constructNNFromJSON = (nnJSON, inputImageArray) => {\r\n  console.log(nnJSON);\r\n  console.log(inputImageArray);\r\n  let nn = [];\r\n\r\n  // Add the first layer (input layer)\r\n  let inputLayer = [];\r\n  let inputShape = nnJSON[0].input_shape;\r\n\r\n  // First layer's three nodes' outputs are the channels of inputImageArray\r\n  for (let i = 0; i < inputShape[2]; i++) {\r\n    let node = new Node('input', i, nodeType.INPUT, 0, inputImageArray[i]);\r\n    inputLayer.push(node);\r\n  }\r\n                                                                                                                   \r\n  nn.push(inputLayer);\r\n  let curLayerIndex = 1;\r\n\r\n  nnJSON.forEach(layer => {\r\n    let curLayerNodes = [];\r\n    let curLayerType;\r\n\r\n    if (layer.name.includes('conv')) {\r\n      curLayerType = nodeType.CONV;\r\n    } else if (layer.name.includes('pool')) {\r\n      curLayerType = nodeType.POOL;\r\n    } else if (layer.name.includes('relu')) {\r\n      curLayerType = nodeType.RELU;\r\n    } else if (layer.name.includes('output')) {\r\n      curLayerType = nodeType.FC;\r\n    } else if (layer.name.includes('flatten')) {\r\n      curLayerType = nodeType.FLATTEN;\r\n    } else {\r\n      console.log('Find unknown type');\r\n    }\r\n\r\n    let shape = layer.output_shape.slice(0, 2);\r\n    let bias = 0;\r\n    let output;\r\n    if (curLayerType === nodeType.FLATTEN || curLayerType === nodeType.FC) {\r\n      output = 0;\r\n    } else {\r\n      output = init2DArray(shape[0], shape[1], 0);\r\n    }\r\n\r\n    // Add neurons into this layer\r\n    for (let i = 0; i < layer.num_neurons; i++) {\r\n      if (curLayerType === nodeType.CONV || curLayerType === nodeType.FC) {\r\n        bias = layer.weights[i].bias;\r\n      }\r\n      let node = new Node(layer.name, i, curLayerType, bias, output)\r\n\r\n      // Connect this node to all previous nodes (create links)\r\n      if (curLayerType === nodeType.CONV || curLayerType === nodeType.FC) {\r\n        // CONV and FC layers have weights in links. Links are one-to-multiple\r\n        for (let j = 0; j < nn[curLayerIndex - 1].length; j++) {\r\n          let preNode = nn[curLayerIndex - 1][j];\r\n          let curLink = new Link(preNode, node, layer.weights[i].weights[j]);\r\n          preNode.outputLinks.push(curLink);\r\n          node.inputLinks.push(curLink);\r\n        }\r\n      } else if (curLayerType === nodeType.RELU || curLayerType === nodeType.POOL) {\r\n        // RELU and POOL layers have no weights. Links are one-to-one\r\n        let preNode = nn[curLayerIndex - 1][i];\r\n        let link = new Link(preNode, node, null);\r\n        preNode.outputLinks.push(link);\r\n        node.inputLinks.push(link);\r\n      } else if (curLayerType === nodeType.FLATTEN) {\r\n        // Flatten layer has no weights. Links are multiple-to-one.\r\n        // Use dummy weights to store the corresponding entry in the previsou\r\n        // node as (row, column)\r\n        // The flatten() in tf2.keras has order: channel -> row -> column\r\n        let preNodeWidth = nn[curLayerIndex - 1][0].output.length,\r\n          preNodeNum = nn[curLayerIndex - 1].length,\r\n          preNodeIndex = i % preNodeNum,\r\n          preNodeRow = Math.floor(Math.floor(i / preNodeNum) / preNodeWidth),\r\n          preNodeCol = Math.floor(i / preNodeNum) % preNodeWidth,\r\n          link = new Link(nn[curLayerIndex - 1][preNodeIndex],\r\n            node, [preNodeRow, preNodeCol]);\r\n\r\n        nn[curLayerIndex - 1][preNodeIndex].outputLinks.push(link);\r\n        node.inputLinks.push(link);\r\n      }\r\n      curLayerNodes.push(node);\r\n    }\r\n\r\n    // Add current layer to the NN\r\n    nn.push(curLayerNodes);\r\n    curLayerIndex++;\r\n  });\r\n\r\n  return nn;\r\n}\r\n\r\nexport const constructNN = (inputImageFile) => {\r\n  // Load the saved model file\r\n  return new Promise((resolve, reject) => {\r\n    fetch('PUBLIC_URL/assets/data/nn_10.json')\r\n      .then(response => {\r\n        response.json().then(nnJSON => {\r\n          getInputImageArray(inputImageFile)\r\n            .then(inputImageArray => {\r\n              let nn = constructNNFromJSON(nnJSON, inputImageArray);\r\n              resolve(nn);\r\n            })\r\n        });\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\n// Helper functions\r\n\r\n/**\r\n * Create a 2D array (matrix) with given size and default value.\r\n * \r\n * @param {int} height Height (number of rows) for the matrix\r\n * @param {int} width Width (number of columns) for the matrix\r\n * @param {int} fill Default value to fill this matrix\r\n */\r\nexport const init2DArray = (height, width, fill) => {\r\n  let array = [];\r\n  // Itereate through rows\r\n  for (let r = 0; r < height; r++) {\r\n    let row = new Array(width).fill(fill);\r\n    array.push(row);\r\n  }\r\n  return array;\r\n}\r\n\r\n/**\r\n * Dot product of two matrices.\r\n * @param {[[number]]} mat1 Matrix 1\r\n * @param {[[number]]} mat2 Matrix 2\r\n */\r\nconst matrixDot = (mat1, mat2) => {\r\n  console.assert(mat1.length === mat2.length, 'Dimension not matching');\r\n  console.assert(mat1[0].length === mat2[0].length, 'Dimension not matching');\r\n\r\n  let result = 0;\r\n  for (let i = 0; i < mat1.length; i++){\r\n    for (let j = 0; j < mat1[0].length; j++){\r\n      result += mat1[i][j] * mat2[i][j];\r\n    }\r\n  }\r\n  \r\n  return result;\r\n}\r\n\r\n/**\r\n * Matrix elementwise addition.\r\n * @param {[[number]]} mat1 Matrix 1\r\n * @param {[[number]]} mat2 Matrix 2\r\n */\r\nexport const matrixAdd = (mat1, mat2) => {\r\n  console.assert(mat1.length === mat2.length, 'Dimension not matching');\r\n  console.assert(mat1[0].length === mat2[0].length, 'Dimension not matching');\r\n\r\n  let result = init2DArray(mat1.length, mat1.length, 0);\r\n\r\n  for (let i = 0; i < mat1.length; i++) {\r\n    for (let j = 0; j < mat1.length; j++) {\r\n      result[i][j] = mat1[i][j] + mat2[i][j];\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * 2D slice on a matrix.\r\n * @param {[[number]]} mat Matrix\r\n * @param {int} xs First dimension (row) starting index\r\n * @param {int} xe First dimension (row) ending index\r\n * @param {int} ys Second dimension (column) starting index\r\n * @param {int} ye Second dimension (column) ending index\r\n */\r\nexport const matrixSlice = (mat, xs, xe, ys, ye) => {\r\n  return mat.slice(xs, xe).map(s => s.slice(ys, ye));\r\n}\r\n\r\n/**\r\n * Compute the maximum of a matrix.\r\n * @param {[[number]]} mat Matrix\r\n */\r\nconst matrixMax = (mat) => {\r\n  let curMax = -Infinity;\r\n  for (let i = 0; i < mat.length; i++) {\r\n    for (let j = 0; j < mat[0].length; j++) {\r\n      if (mat[i][j] > curMax) {\r\n        curMax = mat[i][j];\r\n      }\r\n    }\r\n  }\r\n  return curMax;\r\n}\r\n\r\n/**\r\n * Convert canvas image data into a 3D array with dimension [height, width, 3].\r\n * Each pixel is in 0-255 scale.\r\n * @param {[int8]} imageData Canvas image data\r\n */\r\nconst imageDataTo3DArray = (imageData) => {\r\n  // Get image dimension (assume square image)\r\n  let width = Math.sqrt(imageData.length / 4);\r\n\r\n  // Create array placeholder for each channel\r\n  let imageArray = [init2DArray(width, width, 0), init2DArray(width, width, 0),\r\n    init2DArray(width, width, 0)];\r\n  \r\n  // Iterate through the data to fill out channel arrays above\r\n  for (let i = 0; i < imageData.length; i++) {\r\n    let pixelIndex = Math.floor(i / 4),\r\n      channelIndex = i % 4,\r\n      row = Math.floor(pixelIndex / width),\r\n      column = pixelIndex % width;\r\n    \r\n    if (channelIndex < 3) {\r\n      imageArray[channelIndex][row][column] = imageData[i];\r\n    }\r\n  }\r\n\r\n  return imageArray;\r\n}\r\n\r\n/**\r\n * Get the 3D pixel value array of the given image file.\r\n * @param {string} imgFile File path to the image file\r\n * @returns A promise with the corresponding 3D array\r\n */\r\nconst getInputImageArray = (imgFile) => {\r\n  let canvas = document.createElement('canvas');\r\n  canvas.style.cssText = 'display:none;';\r\n  document.getElementsByTagName('body')[0].appendChild(canvas);\r\n  let context = canvas.getContext('2d');\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let inputImage = new Image();\r\n    inputImage.src = imgFile;\r\n    inputImage.onload = () => {\r\n      context.drawImage(inputImage, 0, 0,);\r\n      // Get image data and convert it to a 3D array\r\n      let imageData = context.getImageData(0, 0, inputImage.width,\r\n        inputImage.height).data;\r\n\r\n      // Remove this newly created canvas element\r\n      canvas.parentNode.removeChild(canvas);\r\n\r\n      console.log(imageDataTo3DArray(imageData));\r\n      resolve(imageDataTo3DArray(imageData));\r\n    }\r\n    inputImage.onerror = reject;\r\n  })\r\n}\r\n\r\n/**\r\n * Compute convolutions of one kernel on one matrix (one slice of a tensor).\r\n * @param {[[number]]} input Input, square matrix\r\n * @param {[[number]]} kernel Kernel weights, square matrix\r\n * @param {int} stride Stride size\r\n * @param {int} padding Padding size\r\n */\r\nexport const singleConv = (input, kernel, stride=1, padding=0) => {\r\n  // TODO: implement padding\r\n\r\n  // Only support square input and kernel\r\n  console.assert(input.length === input[0].length,\r\n     'Conv input is not square');\r\n  console.assert(kernel.length === kernel[0].length,\r\n    'Conv kernel is not square');\r\n\r\n  let stepSize = (input.length - kernel.length) / stride + 1;\r\n\r\n  let result = init2DArray(stepSize, stepSize, 0);\r\n\r\n  // Window sliding\r\n  for (let r = 0; r < stepSize; r++) {\r\n    for (let c = 0; c < stepSize; c++) {\r\n      let curWindow = matrixSlice(input, r * stride, r * stride + kernel.length,\r\n        c * stride, c * stride + kernel.length);\r\n      let dot = matrixDot(curWindow, kernel);\r\n      result[r][c] = dot;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Convolution operation. This function update the outputs property of all nodes\r\n * in the given layer. Previous layer is accessed by the reference in nodes'\r\n * links.\r\n * @param {[Node]} curLayer Conv layer.\r\n */\r\nconst convolute = (curLayer) => {\r\n  console.assert(curLayer[0].type === 'conv', 'Wrong layer type');\r\n\r\n  // Itereate through all nodes in curLayer to update their outputs\r\n  curLayer.forEach(node => {\r\n    /*\r\n     * Accumulate the single conv result matrices from previous channels.\r\n     * Previous channels (node) are accessed by the reference in Link objects.\r\n     */\r\n    let newOutput = init2DArray(node.output.length, node.output.length, 0);\r\n\r\n    for (let i = 0; i < node.inputLinks.length; i++) {\r\n      let curLink = node.inputLinks[i];\r\n      let curConvResult = singleConv(curLink.source.output, curLink.weight);\r\n      newOutput = matrixAdd(newOutput, curConvResult);\r\n    }\r\n\r\n    // Add bias to all element in the output\r\n    let biasMatrix = init2DArray(newOutput.length, newOutput.length, node.bias);\r\n    newOutput = matrixAdd(newOutput, biasMatrix);\r\n\r\n    node.output = newOutput;\r\n  })\r\n}\r\n\r\n/**\r\n * Activate matrix mat using ReLU (max(0, x)).\r\n * @param {[[number]]} mat Matrix\r\n */\r\nconst singleRelu = (mat) => {\r\n  // Only support square matrix\r\n  console.assert(mat.length === mat[0].length, 'Activating non-square matrix!');\r\n\r\n  let width = mat.length;\r\n  let result = init2DArray(width, width, 0);\r\n\r\n  for (let i = 0; i < width; i++) {\r\n    for (let j = 0; j < width; j++) {\r\n      result[i][j] = Math.max(0, mat[i][j]);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Update outputs of all nodes in the current ReLU layer. Values of previous\r\n * layer nodes are accessed by the links stored in the current layer.\r\n * @param {[Node]} curLayer ReLU layer\r\n */\r\nconst relu = (curLayer) => {\r\n  console.assert(curLayer[0].type === 'relu', 'Wrong layer type');\r\n\r\n  // Itereate through all nodes in curLayer to update their outputs\r\n  for (let i = 0; i < curLayer.length; i++) {\r\n    let curNode = curLayer[i];\r\n    let preNode = curNode.inputLinks[0].source;\r\n    curNode.output = singleRelu(preNode.output);\r\n  }\r\n}\r\n\r\n/**\r\n * Max pool one matrix.\r\n * @param {[[number]]} mat Matrix\r\n * @param {int} kernelWidth Pooling kernel length (only supports 2)\r\n * @param {int} stride Pooling sliding stride (only supports 2)\r\n * @param {string} padding Pading method when encountering odd number mat,\r\n * currently this function only supports 'VALID'\r\n */\r\nexport const singleMaxPooling = (mat, kernelWidth=2, stride=2, padding='VALID') => {\r\n  console.assert(kernelWidth === 2, 'Only supports kernen = [2,2]');\r\n  console.assert(stride === 2, 'Only supports stride = 2');\r\n  console.assert(padding === 'VALID', 'Only support valid padding');\r\n\r\n  // Handle odd length mat\r\n  // 'VALID': ignore edge rows and columns\r\n  // 'SAME': add zero padding to make the mat have even length\r\n  if (mat.length % 2 === 1 && padding === 'VALID') {\r\n    mat = matrixSlice(mat, 0, mat.length - 1, 0, mat.length - 1);\r\n  }\r\n\r\n  let stepSize = (mat.length - kernelWidth) / stride + 1;\r\n  let result = init2DArray(stepSize, stepSize, 0);\r\n\r\n  for (let r = 0; r < stepSize; r++) {\r\n    for (let c = 0; c < stepSize; c++) {\r\n      let curWindow = matrixSlice(mat, r * stride, r * stride + kernelWidth,\r\n        c * stride, c * stride + kernelWidth);\r\n      result[r][c] = matrixMax(curWindow);\r\n    }\r\n }\r\n return result;\r\n}\r\n\r\n/**\r\n * Max pooling one layer.\r\n * @param {[Node]} curLayer MaxPool layer\r\n */\r\nconst maxPooling = (curLayer) => {\r\n  console.assert(curLayer[0].type === 'pool', 'Wrong layer type');\r\n\r\n  // Itereate through all nodes in curLayer to update their outputs\r\n  for (let i = 0; i < curLayer.length; i++) {\r\n    let curNode = curLayer[i];\r\n    let preNode = curNode.inputLinks[0].source;\r\n    curNode.output = singleMaxPooling(preNode.output);\r\n  }\r\n}\r\n\r\n/**\r\n * Flatten a previous 2D layer (conv2d or maxpool2d). The flatten order matches\r\n * tf2.keras' implementation: channel -> row -> column.\r\n * @param {[Node]} curLayer Flatten layer\r\n */\r\nconst flatten = (curLayer) => {\r\n  console.assert(curLayer[0].type === 'flatten', 'Wrong layer type');\r\n\r\n  // Itereate through all nodes in curLayer to update their outputs\r\n  for (let i = 0; i < curLayer.length; i++) {\r\n    let curNode = curLayer[i];\r\n    let preNode = curNode.inputLinks[0].source;\r\n    let coordinate = curNode.inputLinks[0].weight;\r\n    // Take advantage of the dummy weights\r\n    curNode.output = preNode.output[coordinate[0]][coordinate[1]];\r\n  }\r\n}\r\n\r\nconst fullyConnect = (curLayer) => {\r\n  console.assert(curLayer[0].type === 'fc', 'Wrong layer type');\r\n  // TODO\r\n}\r\n\r\nexport const tempMain = async () => {\r\n  let nn = await constructNN('PUBLIC_URL/assets/img/koala.jpeg');\r\n  convolute(nn[1]);\r\n  relu(nn[2])\r\n  convolute(nn[3]);\r\n  relu(nn[4]);\r\n  maxPooling(nn[5]);\r\n  convolute(nn[6]);\r\n  relu(nn[7])\r\n  convolute(nn[8]);\r\n  relu(nn[9]);\r\n  maxPooling(nn[10]);\r\n  convolute(nn[11]);\r\n  relu(nn[12])\r\n  convolute(nn[13]);\r\n  relu(nn[14]);\r\n  maxPooling(nn[15]);\r\n  flatten(nn[16]);\r\n  console.log(nn[16].map(d => d.output));\r\n}","import { matrixSlice } from '../utils/cnn.js';\r\n\r\nexport function array1d(length, f) {\r\n  return Array.from({length: length}, f ? ((v, i) => f(i)) : undefined);\r\n}\r\n\r\nfunction array2d(height, width, f) {\r\n  return Array.from({length: height}, (v, i) => Array.from({length: width}, f ? ((w, j) => f(i, j)) : undefined));\r\n}\r\n\r\nexport function generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation) {\r\n  const outputMapping = array2d(output.length, output.length, (i, j) => array2d(kernelLength, kernelLength));\r\n  for (let h_out = 0; h_out < output.length; h_out++) {\r\n    for (let w_out = 0; w_out < output.length; w_out++) {\r\n      for (let h_kern = 0; h_kern < kernelLength; h_kern++) {\r\n        for (let w_kern = 0; w_kern < kernelLength; w_kern++) {\r\n          const h_im = h_out * stride + h_kern * dilation;\r\n          const w_im = w_out * stride + w_kern * dilation;\r\n          outputMapping[h_out][w_out][h_kern][w_kern] = h_im * padded_input_size + w_im;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return outputMapping;\r\n}\r\n\r\nexport function compute_input_multiplies_with_weight(hoverH, hoverW, \r\n                                              padded_input_size, weight_dims, outputMappings, kernelLength) {\r\n  \r\n  const [h_weight, w_weight] = weight_dims;\r\n  const input_multiplies_with_weight = array1d(padded_input_size * padded_input_size);\r\n  for (let h_weight = 0; h_weight < kernelLength; h_weight++) {\r\n    for (let w_weight = 0; w_weight < kernelLength; w_weight++) {\r\n      const flat_input = outputMappings[hoverH][hoverW][h_weight][w_weight];\r\n      if (typeof flat_input === \"undefined\") continue;\r\n      input_multiplies_with_weight[flat_input] = [h_weight, w_weight];\r\n    }\r\n  }\r\n  return input_multiplies_with_weight;\r\n}\r\n\r\nexport function getMatrixSliceFromInputHighlights(matrix, highlights, kernelLength) {\r\n  var indices = highlights.reduce((total, value, index) => {\r\n  if (value != undefined) total.push(index);\r\n    return total;\r\n  }, []);\r\n  return matrixSlice(matrix, Math.floor(indices[0] / matrix.length), Math.floor(indices[0] / matrix.length) + kernelLength, indices[0] % matrix.length, indices[0] % matrix.length + kernelLength);\r\n}\r\n\r\nexport function getMatrixSliceFromOutputHighlights(matrix, highlights) {\r\n  var indices = highlights.reduce((total, value, index) => {\r\n  if (value != false) total.push(index);\r\n    return total;\r\n  }, []);\r\n  return matrixSlice(matrix, Math.floor(indices[0] / matrix.length), Math.floor(indices[0] / matrix.length) + 1, indices[0] % matrix.length, indices[0] % matrix.length + 1);\r\n}\r\n\r\n// Edit these values to change size of low-level conv visualization.\r\nexport function getVisualizationSizeConstraint(imageLength) {\r\n  let sizeOfGrid = 150;\r\n  let maxSizeOfGridCell = 20;\r\n  return sizeOfGrid / imageLength > maxSizeOfGridCell ? maxSizeOfGridCell : sizeOfGrid / imageLength;\r\n}\r\n\r\nexport function getDataRange(image) {\r\n  let maxRow = image.map(function(row){ return Math.max.apply(Math, row); });\r\n  let max = Math.max.apply(null, maxRow);\r\n  let minRow = image.map(function(row){ return Math.min.apply(Math, row); });\r\n  let min = Math.min.apply(null, minRow);\r\n  let range = {\r\n    range: 2 * Math.max(Math.abs(min), Math.abs(max)),\r\n    min: min,\r\n    max: max\r\n  };\r\n  return range;\r\n}\r\n\r\nexport function gridData(image, constraint=getVisualizationSizeConstraint(image.length)) {\r\n  // Constrain grids based on input image size.\r\n  var data = new Array();\r\n  var xpos = 1;\r\n  var ypos = 1;\r\n  var width = constraint;\r\n  var height = constraint;\r\n  for (var row = 0; row < image.length; row++) {\r\n    data.push( new Array() );\r\n    for (var column = 0; column < image[0].length; column++) {\r\n      data[row].push({\r\n        text: Math.round(image[row][column] * 100) / 100,\r\n        row: row,\r\n        col: column,\r\n        x: xpos,\r\n        y: ypos,\r\n        width: width,\r\n        height: height\r\n      })\r\n      xpos += width;\r\n    }\r\n    xpos = 1;\r\n    ypos += height; \r\n  }\r\n  return data;\r\n}","<script>\r\n  export let data;\r\n  export let highlights;\r\n  export let isKernelMath;\r\n  export let constraint;\r\n  export let dataRange;\r\n  export let outputLength = undefined;\r\n  export let stride = undefined;\r\n  export let colorScale = d3.interpolateRdBu;\r\n  export let isInputLayer = false;\r\n\r\n  import { onMount } from 'svelte';\r\n  import { onDestroy } from 'svelte';\r\n  import { beforeUpdate, afterUpdate } from 'svelte';\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  let grid_final;\r\n  const textConstraintDivisor = 2.6;\r\n  const standardCellColor = \"ddd\";\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let oldHighlight = highlights;\r\n  let oldData = data;\r\n\r\n  const redraw = () => {\r\n    d3.select(grid_final).selectAll(\"#grid > *\").remove();\r\n    const constrainedSvgSize = data.length * constraint + 2;\r\n    var grid = d3.select(grid_final).select(\"#grid\")\r\n      .attr(\"width\", constrainedSvgSize + \"px\")\r\n      .attr(\"height\", constrainedSvgSize + \"px\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", constrainedSvgSize + \"px\")\r\n      .attr(\"height\", constrainedSvgSize + \"px\")\r\n    var row = grid.selectAll(\".row\")\r\n      .data(data)\r\n      .enter().append(\"g\")\r\n      .attr(\"class\", \"row\");\r\n    var column = row.selectAll(\".square\")\r\n      .data(function(d) { return d; })\r\n      .enter().append(\"rect\")\r\n      .attr(\"class\",\"square\")\r\n      .attr(\"x\", function(d) { return d.x; })\r\n      .attr(\"y\", function(d) { return d.y; })\r\n      .attr(\"width\", function(d) { return d.width; })\r\n      .attr(\"height\", function(d) { return d.height; })\r\n      .style(\"opacity\", 0.8)\r\n      .style(\"fill\", function(d) {\r\n        let normalizedValue = d.text;\r\n        if (isInputLayer){\r\n          normalizedValue = 1 - d.text;\r\n        } else {\r\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\r\n        }\r\n        return colorScale(normalizedValue);\r\n      })\r\n      .on('mouseover', function(d) {\r\n        if (data.length != outputLength) {\r\n          dispatch('message', {\r\n            hoverH: Math.min(Math.floor(d.row / stride), outputLength - 1),\r\n            hoverW: Math.min(Math.floor(d.col / stride), outputLength - 1)\r\n          });\r\n        } else {\r\n          dispatch('message', {\r\n            hoverH: Math.min(Math.floor(d.row / 1), outputLength - 1),\r\n            hoverW: Math.min(Math.floor(d.col / 1), outputLength - 1)\r\n          });\r\n        }\r\n      });\r\n    if (isKernelMath) {\r\n      var text = row.selectAll(\".text\")\r\n        .data(function(d) { return d; })\r\n        .enter().append(\"text\")\r\n        .attr(\"class\",\"text\")\r\n        .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\r\n        .attr(\"x\", function(d) { return d.x + d.width / 2; })\r\n        .attr(\"y\", function(d) { return d.y + d.height / 2; })\r\n        .style(\"fill\", function(d) {\r\n        let normalizedValue = d.text;\r\n          if (isInputLayer){\r\n            normalizedValue = 1 - d.text;\r\n          } else {\r\n            normalizedValue = (d.text + dataRange / 2) / dataRange;\r\n          }\r\n          if (normalizedValue < 0.2 || normalizedValue > 0.8) {\r\n            return 'white';\r\n          } else {\r\n            return 'black';\r\n          }\r\n        })\r\n        .style(\"text-anchor\", \"middle\")\r\n        .style(\"dominant-baseline\", \"middle\")\r\n        .text(function(d) {\r\n          return d.text.toString().replace('-', '－');\r\n        })\r\n    }\r\n  }\r\n\r\n  afterUpdate(() => {\r\n    if (data != oldData) {\r\n      redraw();\r\n      oldData = data;\r\n    }\r\n\r\n    if (highlights != oldHighlight) {\r\n      var grid = d3.select(grid_final).select('#grid').select(\"svg\")\r\n      grid.selectAll(\".square\")\r\n        .style(\"stroke\", (d) => isKernelMath || (highlights.length && highlights[d.row * data.length + d.col]) ? \"black\" : null )\r\n      oldHighlight = highlights;\r\n    }\r\n\r\n  });\r\n\r\n  onMount(() => {\r\n    redraw();\r\n  });\r\n\r\n</script>\r\n\r\n<div style=\"display: inline-block; vertical-align: middle;\" class=\"grid\"\r\n  bind:this={grid_final}>\r\n  <svg id=\"grid\" width=100% height=100%></svg>\r\n</div>","<script>\r\n  export let data;\r\n  export let kernel;\r\n  export let constraint;\r\n  export let dataRange;\r\n  export let kernelRange;\r\n  export let colorScale = d3.interpolateRdBu;\r\n  export let kernelColorScale = d3.interpolateBrBG;\r\n  export let isInputLayer = false;\r\n\r\n  import { onMount } from 'svelte';\r\n  import { afterUpdate } from 'svelte';\r\n\r\n  let gridFinal;\r\n  let legendFinal;\r\n  const textConstraintDivisor = 2.6;\r\n  const multiplicationSymbolPadding = Math.floor(constraint / 3);\r\n\r\n  let oldData = data;\r\n  let oldKernel = kernel;\r\n\r\n  // Legend drawn similarly to legends in overview/intermediate-view.\r\n  const addOverlayGradient = (gradientID, stops, group) => {\r\n    if (group === undefined) {\r\n      group = svg;\r\n    }\r\n\r\n    // Create a gradient\r\n    let defs = group.append(\"defs\")\r\n      .attr('class', 'overlay-gradient');\r\n\r\n    let gradient = defs.append(\"linearGradient\")\r\n      .attr(\"id\", gradientID)\r\n      .attr(\"x1\", \"0%\")\r\n      .attr(\"x2\", \"100%\")\r\n      .attr(\"y1\", \"100%\")\r\n      .attr(\"y2\", \"100%\");\r\n    \r\n    stops.forEach(s => {\r\n      gradient.append('stop')\r\n        .attr('offset', s.offset)\r\n        .attr('stop-color', s.color)\r\n        .attr('stop-opacity', s.opacity);\r\n    })\r\n  }\r\n\r\n  // Draw the legend for intermediate layer\r\n  const redrawDetailedConvViewLegend = (arg) => {\r\n    let legendHeight = arg.legendHeight,\r\n      range = arg.range,\r\n      minMax = arg.minMax,\r\n      width = arg.width,\r\n      colorScale = arg.colorScale,\r\n      gradientGap = arg.gradientGap;\r\n\r\n    d3.select(legendFinal).selectAll(\"#legend > *\").remove();\r\n    let legend = d3.select(legendFinal).select(\"#legend\")\r\n      .attr(\"width\", 150 + \"px\")\r\n      .attr(\"height\", 25 + \"px\")\r\n      .attr(\"align\",\"center\")\r\n      .style(\"dominant-baseline\", \"middle\");\r\n    let detailedViewKernel = legend.append('g')\r\n      .attr('transform', `translate(10, 0)`);\r\n    \r\n    if (colorScale === undefined) { colorScale = layerColorScales.conv; }\r\n    if (gradientGap === undefined) { gradientGap = 0; }\r\n    \r\n    // Add a legend color gradient\r\n    let gradientName = `url(#detailed-kernel-gradient)`;\r\n    let normalizedColor = v => colorScale(v * (1 - 2 * gradientGap) + gradientGap);\r\n\r\n    let leftValue = (minMax.min + range / 2) / range,\r\n      zeroValue = (0 + range / 2) / range,\r\n      rightValue = (minMax.max + range / 2) / range,\r\n      totalRange = minMax.max - minMax.min,\r\n      zeroLocation = (0 - minMax.min) / totalRange,\r\n      leftMidValue = leftValue + (zeroValue - leftValue)/2,\r\n      rightMidValue = zeroValue + (rightValue - zeroValue)/2;\r\n\r\n    let stops = [\r\n      {offset: 0, color: normalizedColor(leftValue), opacity: 1},\r\n      {offset: zeroLocation / 2,\r\n        color: normalizedColor(leftMidValue),\r\n        opacity: 1},\r\n      {offset: zeroLocation,\r\n        color: normalizedColor(zeroValue),\r\n        opacity: 1},\r\n      {offset: zeroLocation + (1 - zeroValue) / 2,\r\n        color: normalizedColor(rightMidValue),\r\n        opacity: 1},\r\n      {offset: 1, color: normalizedColor(rightValue), opacity: 1}\r\n    ];\r\n\r\n    addOverlayGradient(`detailed-kernel-gradient`, stops, detailedViewKernel);\r\n\r\n    let legendScale = d3.scaleLinear()\r\n      .range([0, width - 1.2])\r\n      .domain([minMax.min, minMax.max]);\r\n\r\n    let legendAxis = d3.axisBottom()\r\n      .scale(legendScale)\r\n      .tickFormat(d3.format('.2f'))\r\n      .tickValues([minMax.min, 0, minMax.max]);\r\n    \r\n    let detailedLegend = detailedViewKernel.append('g')\r\n      .attr('id', `detailed-legend-0`)\r\n    \r\n    let legendGroup = detailedLegend.append('g')\r\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\r\n      .call(legendAxis);\r\n    \r\n    legendGroup.selectAll('text')\r\n      .style('font-size', '9px')\r\n      .style('fill', \"black\");\r\n    \r\n    legendGroup.selectAll('path, line')\r\n      .style('stroke', \"black\");\r\n\r\n    detailedLegend.append('rect')\r\n      .attr('width', width)\r\n      .attr('height', legendHeight)\r\n      .style('fill', gradientName);\r\n  }\r\n\r\n  // Draw the elementwise dot-product math.\r\n  const redraw = () => {\r\n    d3.select(gridFinal).selectAll(\"#grid > *\").remove();\r\n    const constrainedSvgSize = kernel ? 2 * (data.length * constraint) + 2 : data.length * constraint + 2;\r\n    var grid = d3.select(gridFinal).select(\"#grid\")\r\n      .attr(\"width\", constrainedSvgSize + \"px\")\r\n      .attr(\"height\", constrainedSvgSize + \"px\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", constrainedSvgSize + \"px\")\r\n      .attr(\"height\", constrainedSvgSize + \"px\")\r\n    var row = grid.selectAll(\".row\")\r\n      .data(data)\r\n      .enter().append(\"g\")\r\n      .attr(\"class\", \"row\");\r\n    \r\n    var columns = row.selectAll(\".square\")\r\n      .data(function(d) { return d; })\r\n      .enter();\r\n    // Draw cells for slice from input matrix.\r\n    columns.append(\"rect\")\r\n      .attr(\"class\",\"square\")\r\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding : d.x * 2 + multiplicationSymbolPadding})\r\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y : d.y * 2 })\r\n      .attr(\"width\", function(d) { return d.width; })\r\n      .attr(\"height\", function(d) { return d.height; })\r\n      .style(\"opacity\", 0.5)\r\n      .style(\"fill\", function(d) { \r\n        let normalizedValue = d.text;\r\n        if (isInputLayer){\r\n          normalizedValue = 1 - d.text;\r\n        } else {\r\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\r\n        }\r\n        return colorScale(normalizedValue); \r\n      })\r\n      .style(\"stroke\", \"black\");\r\n    // Draw cells for the kernel.\r\n    columns.append(\"rect\")\r\n      .attr(\"class\",\"square\")\r\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding: d.x * 2 + multiplicationSymbolPadding})\r\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height : d.y * 2 + d.height })\r\n      .attr(\"width\", function(d) { return d.width; })\r\n      .attr(\"height\", function(d) { return d.height / 2; })\r\n      .style(\"opacity\", 0.5)\r\n      // Same colorscale as is used for the flatten layers.\r\n      .style(\"fill\", function(d) { \r\n        let normalizedValue = (kernel[d.row][d.col].text + kernelRange.range / 2) / kernelRange.range;\r\n        const gap = 0.2;\r\n        let normalizedValueWithGap = normalizedValue * (1 - 2 * gap) + gap;\r\n        return kernelColorScale(normalizedValueWithGap); \r\n      })\r\n\r\n    var texts = row.selectAll(\".text\")\r\n      .data(function(d) { return d; })\r\n      .enter();\r\n    // Draw numbers from input matrix slice.\r\n    texts.append(\"text\")\r\n      .attr(\"class\",\"text\")\r\n      .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\r\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width / 2 + multiplicationSymbolPadding})\r\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height / 2 : d.y * 2 + d.height / 2 })\r\n      .style(\"fill\", function(d) { \r\n        let normalizedValue = d.text;\r\n        if (isInputLayer){\r\n          normalizedValue = 1 - d.text;\r\n        } else {\r\n          normalizedValue = (d.text + dataRange / 2) / dataRange;\r\n        }\r\n        if (normalizedValue < 0.2 || normalizedValue > 0.8) {\r\n          if (isInputLayer && normalizedValue < 0.2) {\r\n            return 'black';\r\n          } \r\n          return 'white';\r\n        } else {\r\n          return 'black';\r\n        }\r\n      })\r\n      .style(\"text-anchor\", \"middle\")\r\n      .style(\"dominant-baseline\", \"middle\")\r\n      .text(function(d) { return d.text; })\r\n    // Attempted to use FontAwesome icons for the 'x', '+', and '=', but none of these strategies work: https://github.com/FortAwesome/Font-Awesome/issues/12268\r\n    // Draw 'x' to signify multiplication.\r\n    texts.append(\"text\")\r\n      .attr(\"class\",\"text\")\r\n      .style(\"font-size\", Math.floor(constraint / (textConstraintDivisor)) + \"px\")\r\n      .attr('font-weight', 600)\r\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + multiplicationSymbolPadding / 2: d.x * 2 + multiplicationSymbolPadding / 2})\r\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height + (d.height / 4) : d.y * 2 + d.height + (d.height / 4) })\r\n      .style(\"fill\", \"black\")\r\n      .style(\"text-anchor\", \"middle\")\r\n      .style(\"dominant-baseline\", \"middle\")\r\n      .text(function(d) { return '×' })\r\n    // Draw kernel values.\r\n    texts.append(\"text\")\r\n      .attr(\"class\",\"text\")\r\n      .style(\"font-size\", Math.floor(constraint / textConstraintDivisor) + \"px\")\r\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width / 2 + multiplicationSymbolPadding})\r\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height + (d.height / 4) : d.y * 2 + d.height + (d.height / 4) })\r\n      .style(\"fill\", function(d) { \r\n        let normalizedValue = (kernel[d.row][d.col].text + kernelRange.range / 2) / kernelRange.range;\r\n        const gap = 0.2;\r\n        let normalizedValueWithGap = normalizedValue * (1 - 2 * gap) + gap;\r\n        if (normalizedValueWithGap < 0.2 || normalizedValueWithGap > 0.8) {\r\n          return 'white';\r\n        } else {\r\n          return 'black';\r\n        }\r\n      })\r\n      .style(\"text-anchor\", \"middle\")\r\n      .style(\"dominant-baseline\", \"middle\")\r\n      .text(function(d) { return kernel[d.row][d.col].text; })\r\n    // Draw '+' to signify the summing of products except for the last kernel cell where '=' is drawn.\r\n    texts.append(\"text\")\r\n      .attr(\"class\",\"text\")\r\n      .style(\"font-size\", Math.floor(constraint / (textConstraintDivisor - 1)) + \"px\")\r\n      .attr(\"x\", function(d) { return d.x === 1 ? d.x + d.width + d.width / 2 + multiplicationSymbolPadding: d.x * 2 + d.width + d.width / 2 + multiplicationSymbolPadding})\r\n      .attr(\"y\", function(d) { return d.y === 1 ? d.y + d.height / 2 : d.y * 2 + d.height / 2 })\r\n      .style(\"text-anchor\", \"middle\")\r\n      .style(\"dominant-baseline\", \"middle\")\r\n      .text(function(d) { return d.row == kernel.length - 1 && d.col == kernel.length - 1 ? '=' : '+'; })\r\n    }\r\n\r\n  afterUpdate(() => {\r\n    if (data != oldData) {\r\n      redraw();\r\n      oldData = data;\r\n    }\r\n    if (kernel != oldKernel) {\r\n      /*\r\n      redrawDetailedConvViewLegend({\r\n          legendHeight: 5,\r\n          range: kernelRange.range,\r\n          minMax: {min: kernelRange.min, max: kernelRange.max},\r\n          width: 130,\r\n          colorScale: kernelColorScale,\r\n          gradientGap: 0.35,\r\n      });\r\n      */\r\n      oldKernel = kernel;\r\n    }\r\n  });\r\n\r\n  onMount(() => {\r\n    redraw();\r\n    /*\r\n    redrawDetailedConvViewLegend({\r\n          legendHeight: 5,\r\n          range: kernelRange.range,\r\n          minMax: {min: kernelRange.min, max: kernelRange.max},\r\n          width: 130,\r\n          colorScale: kernelColorScale,\r\n          gradientGap: 0.35,\r\n    });\r\n    */\r\n  });\r\n\r\n</script>\r\n\r\n<div class=\"legend\"\r\n  bind:this={legendFinal}>\r\n  <!-- <svg id=\"legend\" width=100% height=100%></svg> -->\r\n</div>\r\n\r\n<div class=\"grid\"\r\n  bind:this={gridFinal}>\r\n  <svg id=\"grid\" width=100% height=100%></svg>\r\n</div>","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n  import { array1d, getMatrixSliceFromOutputHighlights,\r\n    compute_input_multiplies_with_weight, getDataRange,\r\n    getVisualizationSizeConstraint, generateOutputMappings,\r\n    getMatrixSliceFromInputHighlights, gridData\r\n  } from './DetailviewUtils.js';\r\n  import Dataview from './Dataview.svelte';\r\n  import KernelMathView from './KernelMathView.svelte';\r\n  // image: nxn array -- prepadded.\r\n  // kernel: mxm array.\r\n  // stride: int\r\n  export let stride;\r\n  export let dilation\r\n  export let kernel;\r\n  export let image;\r\n  export let output;\r\n  export let isPaused;\r\n  export let dataRange;\r\n  export let colorScale;\r\n  export let isInputInputLayer = false;\r\n\r\n  const dispatch = createEventDispatcher();\r\n  const padding = 0;\r\n  let padded_input_size = image.length + padding * 2;\r\n  $: padded_input_size = image.length + padding * 2;\r\n\r\n  // Dummy data for original state of component.\r\n  let testInputMatrixSlice = [];\r\n  for (let i = 0; i < kernel.length; i++) {\r\n    testInputMatrixSlice.push([]);\r\n    for (let j = 0; j < kernel.length; j++) {\r\n      testInputMatrixSlice[i].push(0)\r\n    }\r\n  }\r\n  testInputMatrixSlice = gridData(testInputMatrixSlice)\r\n  let testOutputMatrixSlice = gridData([0]);\r\n\r\n  let inputHighlights = [];\r\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\r\n  let interval;\r\n  $ : {\r\n    let inputHighlights = [];\r\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\r\n    let interval;\r\n  }\r\n\r\n  let counter;\r\n  // lots of replication between mouseover and start-conv. TODO: fix this.\r\n  function startConvolution(stride) {\r\n    counter = 0;\r\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, padded_input_size, dilation);\r\n    if (stride <= 0) return;\r\n    if (interval) clearInterval(interval);\r\n    interval = setInterval(() => {\r\n      if (isPaused) return;\r\n      const flat_animated = counter % (output.length * output.length);\r\n      outputHighlights = array1d(output.length * output.length, (i) => false);\r\n      const animatedH = Math.floor(flat_animated / output.length);\r\n      const animatedW = flat_animated % output.length;\r\n      outputHighlights[animatedH * output.length + animatedW] = true;\r\n      inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernel.length, outputMappings, kernel.length)\r\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernel.length);\r\n      testInputMatrixSlice = gridData(inputMatrixSlice);\r\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\r\n      testOutputMatrixSlice = gridData(outputMatrixSlice);\r\n      counter++;\r\n    }, 250)\r\n  }\r\n\r\n  function handleMouseover(event) {\r\n    let outputMappings = generateOutputMappings(stride, output, kernel.length, padded_input_size, dilation);\r\n    outputHighlights = array1d(output.length * output.length, (i) => false);\r\n    const animatedH = event.detail.hoverH;\r\n    const animatedW = event.detail.hoverW;\r\n    outputHighlights[animatedH * output.length + animatedW] = true;\r\n    inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernel.length, outputMappings, kernel.length)\r\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernel.length);\r\n    testInputMatrixSlice = gridData(inputMatrixSlice);\r\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\r\n    testOutputMatrixSlice = gridData(outputMatrixSlice);\r\n    isPaused = true;\r\n    dispatch('message', {\r\n      text: isPaused\r\n    });\r\n  }\r\n\r\n  startConvolution(stride);\r\n  let testImage = gridData(image)\r\n  let testOutput = gridData(output)\r\n  let testKernel = gridData(kernel)\r\n  $ : {\r\n    startConvolution(stride);\r\n    testImage = gridData(image)\r\n    testOutput = gridData(output)\r\n    testKernel = gridData(kernel)\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .column {\r\n    padding: 5px;\r\n  }\r\n</style>\r\n\r\n<div class=\"column has-text-centered\">\r\n  <div class=\"header-text\">\r\n    Input ({image.length}, {image[0].length})\r\n  </div>\r\n  <Dataview on:message={handleMouseover} data={testImage} highlights={inputHighlights} outputLength={output.length}\r\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)}\r\n      dataRange={dataRange} stride={stride} colorScale={colorScale}\r\n      isInputLayer={isInputInputLayer}/>\r\n</div>\r\n<div class=\"column has-text-centered\">\r\n  <KernelMathView data={testInputMatrixSlice} kernel={testKernel} constraint={getVisualizationSizeConstraint(kernel.length)}\r\n                  dataRange={dataRange} kernelRange={getDataRange(kernel)} colorScale={colorScale}\r\n                  isInputLayer={isInputInputLayer}/>\r\n  <Dataview data={testOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \r\n      constraint={getVisualizationSizeConstraint(kernel.length)} dataRange={dataRange}/>\r\n</div>\r\n<div class=\"column has-text-centered\">\r\n  <div class=\"header-text\">\r\n    Output ({output.length}, {output[0].length})\r\n  </div>\r\n  <Dataview on:message={handleMouseover} data={testOutput} highlights={outputHighlights} isKernelMath={false}\r\n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={stride}/>\r\n</div>","<script>\r\n\timport ConvolutionAnimator from './ConvolutionAnimator.svelte';\r\n  import { singleConv } from '../utils/cnn.js';\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  export let input;\r\n  export let kernel;\r\n  export let dataRange;\r\n  export let colorScale = d3.interpolateRdBu;\r\n  export let isInputInputLayer = false;\r\n  export let isExited = false;\r\n  // export let output;\r\n  \r\n  const dispatch = createEventDispatcher();\r\n\tlet stride = 1;\r\n  const dilation = 1;\r\n  var isPaused = false;\r\n  var outputFinal = singleConv(input, kernel, stride);\r\n  $: if (stride > 0) {\r\n    try { \r\n      outputFinal = singleConv(input, kernel, stride);\r\n    } catch {\r\n      console.log(\"Cannot handle stride of \" + stride);\r\n    }\r\n  }\r\n  \r\n  function handleClickPause() {\r\n    isPaused = !isPaused;\r\n  }\r\n\r\n  function handleScroll() {\r\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\r\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\r\n    let anchor = document.querySelector(`#article-convolution`);\r\n    scroll.animateScroll(anchor);\r\n  }\r\n\r\n  function handlePauseFromInteraction(event) {\r\n    isPaused = event.detail.text;\r\n  }\r\n\r\n  function handleClickX() {\r\n    isExited = true;\r\n    dispatch('message', {\r\n      text: isExited\r\n    });\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .control-pannel {\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .buttons {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n  }\r\n\r\n  .control-button {\r\n    color: gray;\r\n    font-size: 15px;\r\n    opacity: 0.4;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .control-button:not(:first-child) {\r\n    margin-left: 5px;\r\n  }\r\n\r\n  .annotation {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-left : 10px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .annotation > img {\r\n    width: 17px;\r\n    margin-right: 5px;\r\n  }\r\n\r\n  .control-button:hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .box {\r\n    padding: 5px 15px 10px 15px;\r\n  }\r\n\r\n  .container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n  }\r\n\r\n  .title-text {\r\n    font-size: 1.2em;\r\n    font-weight: 500;\r\n    color: #4a4a4a;\r\n  }\r\n</style>\r\n\r\n{#if !isExited}\r\n  <div class=\"container\" id=\"detailview-container\">\r\n\r\n    <!-- old stride input -->\r\n    <!-- <div class=\"columns is-mobile\">\r\n      <div class=\"column is-half is-offset-one-quarter\">\r\n        <div class=\"field is-grouped\">\r\n          <p class=\"control is-expanded\">\r\n            <input class=\"input\" type=\"text\" placeholder=\"Stride\" bind:value={stride} />\r\n          </p>\r\n          <p class=\"control\">\r\n            <button class=\"button is-success\" on:click={handleClickPause}>\r\n              Toggle Movement\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n\r\n    <div class=\"box\">\r\n\r\n      <div class=\"control-pannel\">\r\n\r\n        <div class=\"title-text\">\r\n          Convolution\r\n        </div>\r\n\r\n        <div class=\"buttons\">\r\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\r\n            <i class=\"fas fa-info-circle\"></i>\r\n          </div>\r\n\r\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\r\n            {@html isPaused ?\r\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\r\n              '<i class=\"fas fa-pause-circle\"></i>'}\r\n          </div>\r\n\r\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\r\n            <i class=\"fas control-icon fa-times-circle\"></i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"container is-centered\">\r\n        <ConvolutionAnimator on:message={handlePauseFromInteraction} \r\n          kernel={kernel} image={input} output={outputFinal} \r\n          stride={stride} dilation={dilation} isPaused={isPaused}\r\n          dataRange={dataRange} colorScale={colorScale}\r\n          isInputInputLayer={isInputInputLayer} />\r\n      </div>\r\n\r\n      <div class=\"annotation\">\r\n        <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\r\n        <div class=\"annotation-text\">\r\n          <span style=\"font-weight:600\">Hover over</span> the matrices to change kernel position.\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n{/if}","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n  import { array1d, getMatrixSliceFromOutputHighlights,\r\n    getVisualizationSizeConstraint, getMatrixSliceFromInputHighlights, gridData\r\n  } from './DetailviewUtils.js';\r\n  import Dataview from './Dataview.svelte';\r\n\r\n  export let image;\r\n  export let output;\r\n  export let isPaused;\r\n  export let dataRange;\r\n\r\n  const dispatch = createEventDispatcher();\r\n  const padding = 0;\r\n  let padded_input_size = image.length + padding * 2;\r\n  $: padded_input_size = image.length + padding * 2;\r\n\r\n  let gridInputMatrixSlice = gridData([[0]]);\r\n  let gridOutputMatrixSlice = gridData([[0]]);\r\n  let inputHighlights = array1d(image.length * image.length, (i) => true);\r\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\r\n  let interval;\r\n  $ : {\r\n    let inputHighlights = array1d(image.length * image.length, (i) => true);\r\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\r\n    let interval;\r\n  }\r\n\r\n  let counter;\r\n\r\n  // lots of replication between mouseover and start-relu. TODO: fix this.\r\n  function startRelu() {\r\n    counter = 0;\r\n    if (interval) clearInterval(interval);\r\n    interval = setInterval(() => {\r\n      if (isPaused) return;\r\n      const flat_animated = counter % (output.length * output.length);\r\n      outputHighlights = array1d(output.length * output.length, (i) => false);\r\n      inputHighlights = array1d(image.length * image.length, (i) => undefined);\r\n      const animatedH = Math.floor(flat_animated / output.length);\r\n      const animatedW = flat_animated % output.length;\r\n      outputHighlights[animatedH * output.length + animatedW] = true;\r\n      inputHighlights[animatedH * output.length + animatedW] = true;\r\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, 1);\r\n      gridInputMatrixSlice = gridData(inputMatrixSlice);\r\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\r\n      gridOutputMatrixSlice = gridData(outputMatrixSlice);\r\n      counter++;\r\n    }, 250)\r\n  }\r\n\r\n  function handleMouseover(event) {\r\n    outputHighlights = array1d(output.length * output.length, (i) => false);\r\n    const animatedH = event.detail.hoverH;\r\n    const animatedW = event.detail.hoverW;\r\n    outputHighlights[animatedH * output.length + animatedW] = true;\r\n    inputHighlights = array1d(image.length * image.length, (i) => undefined);\r\n    inputHighlights[animatedH * output.length + animatedW] = true;\r\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, 1);\r\n    gridInputMatrixSlice = gridData(inputMatrixSlice);\r\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\r\n    gridOutputMatrixSlice = gridData(outputMatrixSlice);\r\n    isPaused = true;\r\n    dispatch('message', {\r\n      text: isPaused\r\n    });\r\n  }\r\n\r\n  startRelu();\r\n  let gridImage = gridData(image)\r\n  let gridOutput = gridData(output)\r\n  $ : {\r\n    startRelu();\r\n    gridImage = gridData(image)\r\n    gridOutput = gridData(output)\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .column {\r\n    padding: 5px;\r\n  }\r\n</style>\r\n\r\n<div class=\"column has-text-centered\">\r\n  <div class=\"header-text\">\r\n    Input ({image.length}, {image[0].length})\r\n  </div>\r\n  <Dataview on:message={handleMouseover} data={gridImage} highlights={inputHighlights} outputLength={output.length}\r\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)} dataRange={dataRange} stride={1}/>  \r\n</div>\r\n<div class=\"column has-text-centered\">\r\n  <span>\r\n    max(\r\n    <Dataview data={gridData([[0]])} highlights={outputHighlights} isKernelMath={true} \r\n    constraint={20} dataRange={dataRange}/>\r\n    ,\r\n    <Dataview data={gridInputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \r\n    constraint={20} dataRange={dataRange}/>\r\n    )\r\n    =\r\n    <Dataview data={gridOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \r\n      constraint={20} dataRange={dataRange}/>\r\n  </span> \r\n</div>\r\n<div class=\"column has-text-centered\">\r\n  <div class=\"header-text\">\r\n    Output ({output.length}, {output[0].length})\r\n  </div>\r\n  <Dataview on:message={handleMouseover} data={gridOutput} highlights={outputHighlights} isKernelMath={false} \r\n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={1}/>\r\n</div>","<script>\r\n\timport ActivationAnimator from './ActivationAnimator.svelte';\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  export let input;\r\n  export let output;\r\n  export let dataRange;\r\n  export let isExited;\r\n\r\n  const dispatch = createEventDispatcher();\r\n  let isPaused = false;\r\n  \r\n  function handleClickPause() {\r\n    isPaused = !isPaused;\r\n  }\r\n\r\n  function handlePauseFromInteraction(event) {\r\n    isPaused = event.detail.text;\r\n  }\r\n\r\n  function handleClickX() {\r\n    dispatch('message', {\r\n      text: true\r\n    });\r\n  }\r\n\r\n  function handleScroll() {\r\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\r\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\r\n    let anchor = document.querySelector(`#article-relu`);\r\n    scroll.animateScroll(anchor);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .control-pannel {\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .buttons {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n  }\r\n\r\n  .control-button {\r\n    color: gray;\r\n    font-size: 15px;\r\n    opacity: 0.4;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .control-button:not(:first-child) {\r\n    margin-left: 5px;\r\n  }\r\n\r\n  .annotation {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-left : 10px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .annotation > img {\r\n    width: 17px;\r\n    margin-right: 5px;\r\n  }\r\n\r\n  .control-button:hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .box {\r\n    padding: 5px 15px 10px 15px;\r\n  }\r\n\r\n  .container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .title-text {\r\n    font-size: 1.2em;\r\n    font-weight: 500;\r\n    color: #4a4a4a;\r\n  }\r\n</style>\r\n\r\n{#if !isExited}\r\n  <div class=\"container\">\r\n    <div class=\"box\">\r\n\r\n      <div class=\"control-pannel\">\r\n\r\n        <div class=\"title-text\">\r\n          ReLU Activation\r\n        </div>\r\n\r\n        <div class=\"buttons\">\r\n\r\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\r\n            <i class=\"fas fa-info-circle\"></i>\r\n          </div>\r\n\r\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\r\n            {@html isPaused ?\r\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\r\n              '<i class=\"fas fa-pause-circle\"></i>'}\r\n          </div>\r\n\r\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\r\n              <i class=\"fas control-icon fa-times-circle\"></i>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"container is-centered is-vcentered\">\r\n        <ActivationAnimator on:message={handlePauseFromInteraction} \r\n          image={input} output={output} isPaused={isPaused}\r\n          dataRange={dataRange}/>\r\n      </div>\r\n\r\n      <div class=\"annotation\">\r\n        <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\r\n        <div class=\"annotation-text\">\r\n          <span style=\"font-weight:600\">Hover over</span> the matrices to change pixel.\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n{/if}","<script>\r\n  import { createEventDispatcher } from 'svelte';\r\n  import { array1d, getMatrixSliceFromOutputHighlights,\r\n    compute_input_multiplies_with_weight, getVisualizationSizeConstraint,\r\n    generateOutputMappings, getMatrixSliceFromInputHighlights, gridData\r\n  } from './DetailviewUtils.js';\r\n  import Dataview from './Dataview.svelte';\r\n\r\n  export let stride;\r\n  export let dilation\r\n  export let kernelLength;\r\n  export let image;\r\n  export let output;\r\n  export let isPaused;\r\n  export let dataRange;\r\n\r\n  const dispatch = createEventDispatcher();\r\n  const padding = 0;\r\n  let padded_input_size = image.length + padding * 2;\r\n  $: padded_input_size = image.length + padding * 2;\r\n\r\n  // Dummy data for original state of component.\r\n  let testInputMatrixSlice = [];\r\n  for (let i = 0; i < kernelLength; i++) {\r\n    testInputMatrixSlice.push([]);\r\n    for (let j = 0; j < kernelLength; j++) {\r\n      testInputMatrixSlice[i].push(0)\r\n    }\r\n  }\r\n  testInputMatrixSlice = gridData(testInputMatrixSlice)\r\n  let testOutputMatrixSlice = gridData([[0]]);\r\n\r\n  let inputHighlights = [];\r\n  let outputHighlights = array1d(output.length * output.length, (i) => true);\r\n  let interval;\r\n  $ : {\r\n    let inputHighlights = [];\r\n    let outputHighlights = array1d(output.length * output.length, (i) => true);\r\n    let interval;\r\n  }\r\n  \r\n  let counter;\r\n\r\n  // lots of replication between mouseover and start-pool. TODO: fix this.\r\n  function startMaxPool(stride) {\r\n    counter = 0;\r\n    let outputMappings = generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation);\r\n    if (stride <= 0) return;\r\n    if (interval) clearInterval(interval);\r\n    interval = setInterval(() => {\r\n      if (isPaused) return;\r\n      const flat_animated = counter % (output.length * output.length);\r\n      outputHighlights = array1d(output.length * output.length, (i) => false);\r\n      const animatedH = Math.floor(flat_animated / output.length);\r\n      const animatedW = flat_animated % output.length;\r\n      outputHighlights[animatedH * output.length + animatedW] = true;\r\n      inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernelLength, outputMappings, kernelLength)\r\n      const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernelLength);\r\n      testInputMatrixSlice = gridData(inputMatrixSlice);\r\n      const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\r\n      testOutputMatrixSlice = gridData(outputMatrixSlice);\r\n      counter++;\r\n    }, 250)\r\n  }\r\n\r\n  function handleMouseover(event) {\r\n    let outputMappings = generateOutputMappings(stride, output, kernelLength, padded_input_size, dilation);\r\n    outputHighlights = array1d(output.length * output.length, (i) => false);\r\n    const animatedH = event.detail.hoverH;\r\n    const animatedW = event.detail.hoverW;\r\n    outputHighlights[animatedH * output.length + animatedW] = true;\r\n    inputHighlights = compute_input_multiplies_with_weight(animatedH, animatedW, padded_input_size, kernelLength, outputMappings, kernelLength)\r\n    const inputMatrixSlice = getMatrixSliceFromInputHighlights(image, inputHighlights, kernelLength);\r\n    testInputMatrixSlice = gridData(inputMatrixSlice);\r\n    const outputMatrixSlice = getMatrixSliceFromOutputHighlights(output, outputHighlights);\r\n    testOutputMatrixSlice = gridData(outputMatrixSlice);\r\n    isPaused = true;\r\n    dispatch('message', {\r\n      text: isPaused\r\n    });\r\n  }\r\n\r\n  startMaxPool(stride);\r\n  let testImage = gridData(image)\r\n  let testOutput = gridData(output)\r\n  $ : {\r\n    startMaxPool(stride);\r\n    testImage = gridData(image)\r\n    testOutput = gridData(output)\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .column {\r\n    padding: 5px;\r\n  }\r\n</style>\r\n\r\n<div class=\"column has-text-centered\">\r\n  <div class=\"header-text\">\r\n    Input ({testImage.length}, {testImage[0].length})\r\n  </div>\r\n\r\n  <Dataview on:message={handleMouseover} data={testImage} highlights={inputHighlights} outputLength={output.length}\r\n      isKernelMath={false} constraint={getVisualizationSizeConstraint(image.length)} dataRange={dataRange} stride={stride}/>  \r\n</div>\r\n<div class=\"column has-text-centered\">\r\n  <span>\r\n    max(\r\n    <Dataview data={testInputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \r\n      constraint={getVisualizationSizeConstraint(kernelLength)} dataRange={dataRange}/>\r\n    )\r\n    =\r\n    <Dataview data={testOutputMatrixSlice} highlights={outputHighlights} isKernelMath={true} \r\n      constraint={getVisualizationSizeConstraint(kernelLength)} dataRange={dataRange}/>\r\n  </span> \r\n</div>\r\n<div class=\"column has-text-centered\">\r\n  <div class=\"header-text\">\r\n    Output ({testOutput.length}, {testOutput[0].length})\r\n  </div>\r\n  <Dataview on:message={handleMouseover} data={testOutput} highlights={outputHighlights} isKernelMath={false} \r\n      outputLength={output.length} constraint={getVisualizationSizeConstraint(output.length)} dataRange={dataRange} stride={stride}/>\r\n</div>","<script>\r\n\timport PoolAnimator from './PoolAnimator.svelte';\r\n  import { singleMaxPooling } from '../utils/cnn.js';\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  export let input;\r\n  export let kernelLength;\r\n  export let dataRange;\r\n  export let isExited;\r\n  \r\n  const dispatch = createEventDispatcher();\r\n  // let isExited = false;\r\n\tlet stride = 2;\r\n  const dilation = 1;\r\n  var isPaused = false;\r\n  var outputFinal = singleMaxPooling(input);\r\n  // let dragging = false;\r\n  // let dragInfo = {x1: 0, x2: 0, y1: 0, y2: 0};\r\n  // let detailView = d3.select('#detailview').node();\r\n  $: if (stride > 0) {\r\n    try { \r\n      outputFinal = singleMaxPooling(input);\r\n    } catch {\r\n      console.log(\"Cannot handle stride of \" + stride);\r\n    }\r\n  }\r\n  \r\n  function handleClickPause() {\r\n    isPaused = !isPaused;\r\n    console.log(isPaused)\r\n  }\r\n\r\n  function handlePauseFromInteraction(event) {\r\n    isPaused = event.detail.text;\r\n  }\r\n\r\n  function handleClickX() {\r\n    dispatch('message', {\r\n      text: true\r\n    });\r\n  }\r\n\r\n  function handleScroll() {\r\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\r\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\r\n    let anchor = document.querySelector(`#article-pooling`);\r\n    scroll.animateScroll(anchor);\r\n  }\r\n\r\n  // Test dragging detail view, need more work\r\n  // const detailViewDragStart = (e) => {\r\n  //   // Record the starting pos\r\n  //   dragInfo.x1 = 0;\r\n  //   dragInfo.y1 = 0;\r\n  //   dragInfo.x2 = e.clientX;\r\n  //   dragInfo.y2 = e.clientY;\r\n  \r\n  //   dragging = true;\r\n  // }\r\n\r\n  // const detailViewDragEnd = (e) => {\r\n  //   dragging = false;\r\n  // }\r\n\r\n  // const detailViewDragMove = (e) => {\r\n  //   // Add up move to the starting pos\r\n  //   dragInfo.x1 = dragInfo.x2 - e.clientX;\r\n  //   dragInfo.y1 = dragInfo.y2 - e.clientY;\r\n  //   dragInfo.x2 = e.clientX;\r\n  //   dragInfo.y2 = e.clientY;\r\n\r\n  //   // Move detail view\r\n  //   detailView.style.top = (detailView.offsetTop - dragInfo.y1) + 'px';\r\n  //   detailView.style.left = (detailView.offsetLeft - dragInfo.x1) + 'px';\r\n  // }\r\n</script>\r\n\r\n<style>\r\n  .control-pannel {\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .buttons {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 0px;\r\n    right: 0px;\r\n  }\r\n\r\n  .control-button {\r\n    color: gray;\r\n    font-size: 15px;\r\n    opacity: 0.4;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .control-button:not(:first-child) {\r\n    margin-left: 5px;\r\n  }\r\n\r\n  .annotation {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-left : 10px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .annotation > img {\r\n    width: 17px;\r\n    margin-right: 5px;\r\n  }\r\n\r\n\r\n  .control-button:hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .box {\r\n    padding: 5px 15px 10px 15px;\r\n  }\r\n\r\n  .container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .title-text {\r\n    font-size: 1.2em;\r\n    font-weight: 500;\r\n    color: #4a4a4a;\r\n  }\r\n</style>\r\n\r\n{#if !isExited}\r\n  <div class=\"container\">\r\n\r\n    <!-- old stride input -->\r\n    <!-- <div class=\"columns is-mobile\">\r\n      <div class=\"column is-half is-offset-one-quarter\">\r\n        <div class=\"field is-grouped\">\r\n          <p class=\"control is-expanded\">\r\n            <input class=\"input\" type=\"text\" placeholder=\"Stride\" bind:value={stride} />\r\n          </p>\r\n          <p class=\"control\">\r\n            <button class=\"button is-success\" on:click={handleClickPause}>\r\n              Toggle Movement\r\n            </button>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n    <div class=\"box\">\r\n\r\n      <div class=\"control-pannel\">\r\n      \r\n        <div class=\"title-text\">\r\n          Max Pooling\r\n        </div>\r\n\r\n        <div class=\"buttons\">\r\n\r\n          <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\r\n            <i class=\"fas fa-info-circle\"></i>\r\n          </div>\r\n\r\n          <div class=\"play-button control-button\" on:click={handleClickPause} title=\"Play animation\">\r\n            {@html isPaused ?\r\n              '<i class=\"fas fa-play-circle play-icon\"></i>' :\r\n              '<i class=\"fas fa-pause-circle\"></i>'}\r\n          </div>\r\n\r\n          <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\r\n            <i class=\"fas control-icon fa-times-circle\"></i>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"container is-centered is-vcentered\">\r\n        <PoolAnimator on:message={handlePauseFromInteraction} \r\n          kernelLength={kernelLength} image={input} output={outputFinal} \r\n          stride={stride} dilation={dilation} isPaused={isPaused}\r\n          dataRange={dataRange} />\r\n      </div>\r\n\r\n      <div class=\"annotation\">\r\n        <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\r\n          <div class=\"annotation-text\">\r\n            <span style=\"font-weight:600\">Hover over</span> the matrices to change kernel position.\r\n          </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n{/if}","<script>\r\n  import { onMount, afterUpdate, createEventDispatcher } from 'svelte';\r\n  export let logits;\r\n  export let logitColors;\r\n  export let selectedI;\r\n  export let highlightI = -1;\r\n  export let outputName;\r\n  export let outputValue;\r\n  export let startAnimation;\r\n\r\n  let softmaxViewComponent;\r\n  let svg = null;\r\n  const dispatch = createEventDispatcher();\r\n  const formater = (n, d) => {\r\n    if (d === undefined) {\r\n      return d3.format('.2f')(n);\r\n    } else {\r\n      return d3.format(`.${d}f`)(n);\r\n    }\r\n  }\r\n\r\n  $: highlightI, (() => {\r\n    if (svg !== null) {\r\n      svg.selectAll(`.formula-term`)\r\n        .style('text-decoration', 'none')\r\n        .style('font-weight', 'normal');\r\n\r\n      svg.selectAll(`.formula-term-${highlightI}`)\r\n      .style('font-weight', 'bold')\r\n      .style('text-decoration', 'underline');\r\n    }\r\n  })();\r\n\r\n  $: startAnimation, (() => {\r\n    if (svg !== null) {\r\n      svg.select(`.formula-term-${startAnimation.i}`)\r\n        .transition('softmax-edge')\r\n        .duration(startAnimation.duration)\r\n        .style('fill-opacity', 1);\r\n    }\r\n  })();\r\n\r\n  const mouseOverHandler = (d, i, g, curI) => {\r\n    highlightI = curI;\r\n    dispatch('mouseOver', {curI: curI});\r\n  }\r\n\r\n  const mouseLeaveHandler = (d, i, g, curI) => {\r\n    highlightI = -1;\r\n    dispatch('mouseLeave', {curI: curI});\r\n  }\r\n\r\n  const handleClickX = () => {\r\n    dispatch('xClicked', {});\r\n  }\r\n\r\n  function handleScroll() {\r\n    let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\r\n    let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\r\n    let anchor = document.querySelector(`#article-softmax`);\r\n    scroll.animateScroll(anchor);\r\n  }\r\n\r\n  onMount(() => {\r\n    svg = d3.select(softmaxViewComponent)\r\n      .select('#softmax-svg');\r\n\r\n    let formulaRightGroup = svg.append('g')\r\n      .attr('class', 'formula-right')\r\n      .attr('transform', `translate(${10}, ${0})`)\r\n      .style('font-size', '15px');\r\n\r\n    // Denominator\r\n    let denominatorGroup = formulaRightGroup.append('g')\r\n      .attr('class', 'denominator')\r\n      .attr('transform', `translate(${0}, ${58})`);\r\n      \r\n    // Add the left (\r\n    denominatorGroup.append('text')\r\n      .attr('x', 0)\r\n      .attr('y', 0)\r\n      .style('fill', 'gray')\r\n      .text('(');\r\n\r\n    // Need to loop through the logits array instead of data-binding because\r\n    // we want dynamic positioning based on prior '-' occurance\r\n    let curX = 8;\r\n    let numOfRows = 4;\r\n\r\n    logits.forEach((d, i) => {\r\n      if (i / numOfRows >= 1 && i % numOfRows === 0) {\r\n          curX = 8;\r\n      }\r\n\r\n      let curText = denominatorGroup.append('text')\r\n        .attr('x', curX)\r\n        .attr('y', Math.floor(i / numOfRows) * 20)\r\n        .style('cursor', 'crosshair')\r\n        .style('pointer-events', 'all')\r\n        .on('mouseover', (d, n, g) => mouseOverHandler(d, n, g, i))\r\n        .on('mouseleave', (d, n, g) => mouseLeaveHandler(d, n, g, i))\r\n        .text(`exp(`);\r\n      \r\n      curText.append('tspan')\r\n        .attr('class', `formula-term-${i} formula-term`)\r\n        .attr('dx', '1')\r\n        .style('fill', logitColors[i])\r\n        .style('fill-opacity', (i === selectedI) || startAnimation.hasInitialized ? 1 : 0)\r\n        .text(formater(d));\r\n      \r\n      curText.append('tspan')\r\n        .attr('dx', '1')\r\n        .text(')');\r\n      \r\n      let curBBox = curText.node().getBBox();\r\n      curX += curBBox.width + 4;\r\n\r\n      if (i !== logits.length - 1) {\r\n        denominatorGroup.append('text')\r\n          .attr('x', curX)\r\n          .attr('y', Math.floor(i / numOfRows) * 20)\r\n          .text('+');\r\n        curX += 14;\r\n      } else {\r\n        denominatorGroup.append('text')\r\n          .attr('x', curX-2)\r\n          .attr('y', Math.floor(i / numOfRows) * 20)\r\n          .style('fill', 'gray')\r\n          .text(')');\r\n      }\r\n    })\r\n\r\n    denominatorGroup.selectAll('text')\r\n      .data(logits)\r\n      .enter()\r\n      .append('text')\r\n      .attr('x', (d, i) => 40 * i)\r\n      .attr('y', 0)\r\n      .text(d => formater(d));\r\n    \r\n    // Calculate the dynamic denominator group width\r\n    let denominatorGroupBBox = denominatorGroup.node().getBBox();\r\n\r\n    // Draw the fraction line\r\n    formulaRightGroup.append('line')\r\n      .attr('class', 'separation-line')\r\n      .attr('x1', -5)\r\n      .attr('x2', denominatorGroupBBox.width + 5)\r\n      .attr('y1', 32)\r\n      .attr('y2', 32)\r\n      .style('stroke-width', 1.2)\r\n      .style('stroke', 'gray');\r\n    \r\n    // Draw the numerator\r\n    let numeratorGroup = formulaRightGroup.append('g')\r\n      .attr('class', 'numerator-group')\r\n      .attr('transform', `translate(${0}, ${20})`);\r\n    \r\n    let numeratorText = numeratorGroup.append('text')\r\n      .attr('x', denominatorGroupBBox.x + denominatorGroupBBox.width / 2)\r\n      .attr('y', 0)\r\n      .on('mouseover', (d, n, g) => mouseOverHandler(d, n, g, selectedI))\r\n      .on('mouseleave', (d, n, g) => mouseLeaveHandler(d, n, g, selectedI))\r\n      .style('pointer-events', 'all')\r\n      .style('cursor', 'crosshair')\r\n      .style('text-anchor', 'middle')\r\n      .text('exp(');\r\n\r\n    numeratorText.append('tspan')\r\n      .attr('class', `formula-term-${selectedI} formula-term`)\r\n      .attr('dx', 1)\r\n      .style('fill', logitColors[selectedI])\r\n      .text(`${formater(logits[selectedI])}`);\r\n\r\n    numeratorText.append('tspan')\r\n       .attr('dx', 1)\r\n      .text(')');\r\n    \r\n    // Draw the left part of the formula\r\n    let formulaLeftGroup = svg.append('g')\r\n      .attr('class', 'formula-left')\r\n      .attr('transform', `translate(${395}, ${32})`);\r\n    \r\n    let softmaxText = formulaLeftGroup.append('text')\r\n      .attr('x', 20)\r\n      .attr('dominant-baseline', 'middle')\r\n      .text(`${formater(outputValue, 4)}`);\r\n    \r\n    let softmaxTextBBox = softmaxText.node().getBBox();\r\n    \r\n    formulaLeftGroup.append('text')\r\n      .attr('dominant-baseline', 'middle')\r\n      .attr('x', 0)\r\n      .attr('y', 0)\r\n      .style('fill', 'gray')\r\n      .style('font-weight', 'bold')\r\n      .text('=');\r\n\r\n  })\r\n\r\n</script>\r\n\r\n<style>\r\n  .buttons {\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 6px;\r\n    right: 10px;\r\n  }\r\n\r\n  .control-button {\r\n    color: gray;\r\n    font-size: 15px;\r\n    opacity: 0.4;\r\n  }\r\n\r\n  .control-button:hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .control-button:not(:first-child) {\r\n    margin-left: 5px;\r\n  }\r\n\r\n  .title-text {\r\n    font-size: 1.2em;\r\n    font-weight: 500;\r\n    color: #4a4a4a;\r\n  }\r\n\r\n  .annotation {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-left : 10px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .annotation > img {\r\n    width: 17px;\r\n    margin-right: 5px;\r\n  }\r\n\r\n  .box {\r\n    padding: 5px 10px 15px 10px;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  svg {\r\n    margin: 10px 0 12px 0;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\" bind:this={softmaxViewComponent}>\r\n  <div class=\"box\">\r\n\r\n    <div class=\"buttons\">\r\n      <div class=\"control-button\" on:click={handleScroll} title=\"Jump to article section\">\r\n        <i class=\"fas fa-info-circle\"></i>\r\n      </div>\r\n\r\n      <div class=\"delete-button control-button\" on:click={handleClickX} title=\"Close\">\r\n        <i class=\"fas control-icon fa-times-circle\"></i>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"title-text\">\r\n      Softmax Score for <i>\"{outputName}\"</i>\r\n    </div>\r\n\r\n    <svg id=\"softmax-svg\" width=\"470\" height=\"105\"/>\r\n\r\n    <div class=\"annotation\">\r\n      <img src='PUBLIC_URL/assets/img/pointer.svg' alt='pointer icon'>\r\n      <div class=\"annotation-text\">\r\n        <span style=\"font-weight:600\">Hover over</span> the numbers to highlight logit circles.\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n","<script>\r\n  /* global d3 */\r\n\r\n  import { onMount, createEventDispatcher } from 'svelte';\r\n  import { modalStore } from '../stores.js';\r\n\r\n  let modalComponent;\r\n  let valiImg;\r\n  let inputValue = '';\r\n  let showLoading = false;\r\n  let files;\r\n  let usingURL = true;\r\n  let errorInfo = {\r\n    show: false,\r\n    error: ''\r\n  };\r\n  const dispatch = createEventDispatcher();\r\n\r\n  let modalInfo = {\r\n    show: false\r\n  };\r\n  modalStore.set(modalInfo);\r\n  modalStore.subscribe(value => {modalInfo = value});\r\n\r\n  const errorCallback = () => {\r\n    // The URL is invalid, show an error message on the UI\r\n    showLoading = false;\r\n    errorInfo.show = true;\r\n    errorInfo.error = usingURL ? \"We can't find the image at that URL.\" :\r\n      \"Not a valid image file.\";\r\n  }\r\n\r\n  const loadCallback = () => {\r\n    // The URL is valid, but we are not sure if loading it to canvas would be\r\n    // blocked by crossOrigin setting. Try it here before dispatch to parent.\r\n\r\n    // https://stackoverflow.com/questions/13674835/canvas-tainted-by-cross-origin-data\r\n    let canvas = document.createElement(\"canvas\");\r\n    let context = canvas.getContext(\"2d\");\r\n\r\n    canvas.width = valiImg.width;\r\n    canvas.height = valiImg.height;\r\n    context.drawImage(valiImg, 0, 0);\r\n\r\n    try {\r\n      context.getImageData(0, 0, valiImg.width, valiImg.height);\r\n      // If the foreign image does support CORS -> use this image\r\n      // dispatch to parent component to use the input image\r\n      showLoading = false;\r\n      modalInfo.show = false;\r\n      modalStore.set(modalInfo);\r\n      dispatch('urlTyped', {url: valiImg.src});\r\n      inputValue = null;\r\n    } catch(err) {\r\n      // If the foreign image does not support CORS -> use this image\r\n      showLoading = false;\r\n      errorInfo.show = true;\r\n      errorInfo.error = \"No permission to load this image.\"\r\n    }\r\n  }\r\n\r\n  const imageUpload = () => {\r\n    usingURL = false;\r\n    let reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      valiImg.src = event.target.result;\r\n    }\r\n    reader.readAsDataURL(files[0]);\r\n  }\r\n\r\n  const crossClicked = () => {\r\n    modalInfo.show = false;\r\n    modalStore.set(modalInfo);\r\n    // Dispatch the parent component\r\n    dispatch('xClicked', {preImage: modalInfo.preImage});\r\n  }\r\n\r\n  const addClicked = () => {\r\n    // Validate the input URL\r\n    showLoading = true;\r\n    errorInfo.show = false;\r\n    valiImg.crossOrigin = \"Anonymous\";\r\n    valiImg.src = inputValue;\r\n  }\r\n\r\n  onMount(() => {\r\n    let modal = d3.select(modalComponent)\r\n      .select('#input-modal');\r\n  })\r\n\r\n</script>\r\n\r\n<style>\r\n  .modal-card {\r\n    max-width: 500px;\r\n  }\r\n\r\n  .modal-card-title {\r\n    font-size: 20px;\r\n  }\r\n\r\n  .modal-card-head {\r\n    padding: 15px 20px;\r\n  }\r\n\r\n  .modal-card-foot {\r\n    padding: 12px 20px;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .is-smaller {\r\n    font-size: 15px;\r\n    padding: 0.5em 0.8em;\r\n    max-height: 2.2em;\r\n  }\r\n\r\n  .small-font {\r\n    font-size: 15px;\r\n  }\r\n\r\n  .error-message {\r\n    font-size: 15px;\r\n    padding: 0.5em 0;\r\n    color: #F22B61;\r\n  }\r\n\r\n  .control {\r\n    width: 100%;\r\n  }\r\n\r\n  .or-label {\r\n    font-size: 15px;\r\n    margin: 0 10px;\r\n    padding: 0.5em 0;\r\n  }\r\n\r\n  .field {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n\r\n</style>\r\n\r\n\r\n<div class=\"modal-component\"\r\n  bind:this={modalComponent}>\r\n\r\n  <div class=\"modal\"\r\n    id=\"input-modal\"\r\n    class:is-active={modalInfo.show}>\r\n\r\n    <div class=\"modal-background\" on:click={crossClicked}></div>\r\n\r\n    <div class=\"modal-card\">\r\n      <header class=\"modal-card-head\">\r\n        <p class=\"modal-card-title\">Add Input Image</p>\r\n        <button class=\"delete\" aria-label=\"close\" on:click={crossClicked}></button>\r\n      </header>\r\n\r\n      <section class=\"modal-card-body\">\r\n        <div class=\"field\">\r\n          <div class=\"control has-icons-left\"\r\n            class:is-loading={showLoading}>\r\n\r\n            <input class=\"input small-font\" type=\"url\"\r\n              bind:value={inputValue}\r\n              placeholder=\"Paste URL of image...\">\r\n\r\n            <span class=\"icon small-font is-left\">\r\n              <i class=\"fas fa-link\"></i>\r\n            </span>\r\n\r\n          </div>\r\n\r\n          <div class=\"or-label\">or</div>\r\n\r\n          <div class=\"file\">\r\n            <label class=\"file-label\">\r\n              <input class=\"file-input\" type=\"file\" name=\"image\"\r\n                accept=\".png,.jpeg,.tiff,.jpg,.png\"\r\n                bind:files={files}\r\n                on:change={imageUpload}>\r\n              <span class=\"file-cta small-font\">\r\n                <span class=\"file-icon\">\r\n                  <i class=\"fas fa-upload\"></i>\r\n                </span>\r\n                <span class=\"file-label\">\r\n                  Upload\r\n                </span>\r\n              </span>\r\n            </label>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </section>\r\n\r\n      <footer class=\"modal-card-foot\">\r\n\r\n        <div class=\"error-message\"\r\n          class:hidden={!errorInfo.show}>\r\n          {errorInfo.error}\r\n        </div>\r\n\r\n        <div class=\"button-container\">\r\n          <button class=\"button is-smaller\"\r\n            on:click={crossClicked}>\r\n            Cancel\r\n          </button>\r\n\r\n          <button class=\"button is-success is-smaller\"\r\n            on:click={addClicked}>\r\n            Add\r\n          </button>\r\n        </div>\r\n\r\n\r\n      </footer>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- An invisible image to check if the user input URL is valid -->\r\n  <img style=\"display: none\"\r\n    id=\"vali-image\"\r\n    alt=\"hidden image\"\r\n    bind:this={valiImg}\r\n    on:error={errorCallback}\r\n    on:load={loadCallback} />\r\n\r\n</div>\r\n","<script context=\"module\">\r\n\tlet iframeApiReady = false;\r\n\r\n\timport { setContext, onMount } from \"svelte\";\r\n\tvar tag = document.createElement(\"script\");\r\n\ttag.src = \"https://www.youtube.com/iframe_api\";\r\n\tvar firstScriptTag = document.getElementsByTagName(\"script\")[0];\r\n\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n\twindow.onYouTubeIframeAPIReady = () =>\r\n\twindow.dispatchEvent(new Event(\"iframeApiReady\"));\r\n</script>\r\n\r\n<script>\r\n\timport { createEventDispatcher } from \"svelte\";\r\n\timport { getContext } from \"svelte\";\r\n\texport let videoId;\r\n\texport let playerId = \"player\";\r\n\r\n\tlet player;\r\n\texport function play(startSecond = 0){\r\n\t\tplayer.seekTo(startSecond);\r\n\t\tplayer.playVideo()\r\n\t}\r\n\tconst dispatch = createEventDispatcher();\r\n\twindow.addEventListener(\"iframeApiReady\", function(e) {\r\n\t\tplayer = new YT.Player(playerId, {\r\n\t\t\tvideoId,\r\n\t\t\tevents: {\r\n\t\t\t\tonReady: onPlayerReady\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\tfunction onPlayerReady(event) {\r\n      player.mute()\r\n    }\r\n</script>\r\n\r\n<div id={playerId} />","/* global tf */\r\n\r\n// Network input image size\r\nconst networkInputSize = 64;\r\n\r\n// Enum of node types\r\nconst nodeType = {\r\n  INPUT: 'input',\r\n  CONV: 'conv',\r\n  POOL: 'pool',\r\n  RELU: 'relu',\r\n  FC: 'fc',\r\n  FLATTEN: 'flatten'\r\n}\r\n\r\nclass Node {\r\n  /**\r\n   * Class structure for each neuron node.\r\n   * \r\n   * @param {string} layerName Name of the node's layer.\r\n   * @param {int} index Index of this node in its layer.\r\n   * @param {string} type Node type {input, conv, pool, relu, fc}. \r\n   * @param {number} bias The bias assocated to this node.\r\n   * @param {number[]} output Output of this node.\r\n   */\r\n  constructor(layerName, index, type, bias, output) {\r\n    this.layerName = layerName;\r\n    this.index = index;\r\n    this.type = type;\r\n    this.bias = bias;\r\n    this.output = output;\r\n\r\n    // Weights are stored in the links\r\n    this.inputLinks = [];\r\n    this.outputLinks = [];\r\n  }\r\n}\r\n\r\nclass Link {\r\n  /**\r\n   * Class structure for each link between two nodes.\r\n   * \r\n   * @param {Node} source Source node.\r\n   * @param {Node} dest Target node.\r\n   * @param {number} weight Weight associated to this link. It can be a number,\r\n   *  1D array, or 2D array.\r\n   */\r\n  constructor(source, dest, weight) {\r\n    this.source = source;\r\n    this.dest = dest;\r\n    this.weight = weight;\r\n  }\r\n}\r\n\r\n/**\r\n * Construct a CNN with given extracted outputs from every layer.\r\n * \r\n * @param {number[][]} allOutputs Array of outputs for each layer.\r\n *  allOutputs[i][j] is the output for layer i node j.\r\n * @param {Model} model Loaded tf.js model.\r\n * @param {Tensor} inputImageTensor Loaded input image tensor.\r\n */\r\nconst constructCNNFromOutputs = (allOutputs, model, inputImageTensor) => {\r\n  let cnn = [];\r\n\r\n  // Add the first layer (input layer)\r\n  let inputLayer = [];\r\n  let inputShape = model.layers[0].batchInputShape.slice(1);\r\n  let inputImageArray = inputImageTensor.transpose([2, 0, 1]).arraySync();\r\n\r\n  // First layer's three nodes' outputs are the channels of inputImageArray\r\n  for (let i = 0; i < inputShape[2]; i++) {\r\n    let node = new Node('input', i, nodeType.INPUT, 0, inputImageArray[i]);\r\n    inputLayer.push(node);\r\n  }\r\n                                                                                                                   \r\n  cnn.push(inputLayer);\r\n  let curLayerIndex = 1;\r\n\r\n  for (let l = 0; l < model.layers.length; l++) {\r\n    let layer = model.layers[l];\r\n    // Get the current output\r\n    let outputs = allOutputs[l].squeeze();\r\n    outputs = outputs.arraySync();\r\n\r\n    let curLayerNodes = [];\r\n    let curLayerType;\r\n\r\n    // Identify layer type based on the layer name\r\n    if (layer.name.includes('conv')) {\r\n      curLayerType = nodeType.CONV;\r\n    } else if (layer.name.includes('pool')) {\r\n      curLayerType = nodeType.POOL;\r\n    } else if (layer.name.includes('relu')) {\r\n      curLayerType = nodeType.RELU;\r\n    } else if (layer.name.includes('output')) {\r\n      curLayerType = nodeType.FC;\r\n    } else if (layer.name.includes('flatten')) {\r\n      curLayerType = nodeType.FLATTEN;\r\n    } else {\r\n      console.log('Find unknown type');\r\n    }\r\n\r\n    // Construct this layer based on its layer type\r\n    switch (curLayerType) {\r\n      case nodeType.CONV: {\r\n        let biases = layer.bias.val.arraySync();\r\n        // The new order is [output_depth, input_depth, height, width]\r\n        let weights = layer.kernel.val.transpose([3, 2, 0, 1]).arraySync();\r\n\r\n        // Add nodes into this layer\r\n        for (let i = 0; i < outputs.length; i++) {\r\n          let node = new Node(layer.name, i, curLayerType, biases[i],\r\n            outputs[i]);\r\n\r\n          // Connect this node to all previous nodes (create links)\r\n          // CONV layers have weights in links. Links are one-to-multiple.\r\n          for (let j = 0; j < cnn[curLayerIndex - 1].length; j++) {\r\n            let preNode = cnn[curLayerIndex - 1][j];\r\n            let curLink = new Link(preNode, node, weights[i][j]);\r\n            preNode.outputLinks.push(curLink);\r\n            node.inputLinks.push(curLink);\r\n          }\r\n          curLayerNodes.push(node);\r\n        }\r\n        break;\r\n      }\r\n      case nodeType.FC: {\r\n        let biases = layer.bias.val.arraySync();\r\n        // The new order is [output_depth, input_depth]\r\n        let weights = layer.kernel.val.transpose([1, 0]).arraySync();\r\n\r\n        // Add nodes into this layer\r\n        for (let i = 0; i < outputs.length; i++) {\r\n          let node = new Node(layer.name, i, curLayerType, biases[i],\r\n            outputs[i]);\r\n\r\n          // Connect this node to all previous nodes (create links)\r\n          // FC layers have weights in links. Links are one-to-multiple.\r\n\r\n          // Since we are visualizing the logit values, we need to track\r\n          // the raw value before softmax\r\n          let curLogit = 0;\r\n          for (let j = 0; j < cnn[curLayerIndex - 1].length; j++) {\r\n            let preNode = cnn[curLayerIndex - 1][j];\r\n            let curLink = new Link(preNode, node, weights[i][j]);\r\n            preNode.outputLinks.push(curLink);\r\n            node.inputLinks.push(curLink);\r\n            curLogit += preNode.output * weights[i][j];\r\n          }\r\n          curLogit += biases[i];\r\n          node.logit = curLogit;\r\n          curLayerNodes.push(node);\r\n        }\r\n\r\n        // Sort flatten layer based on the node TF index\r\n        cnn[curLayerIndex - 1].sort((a, b) => a.realIndex - b.realIndex);\r\n        break;\r\n      }\r\n      case nodeType.RELU:\r\n      case nodeType.POOL: {\r\n        // RELU and POOL have no bias nor weight\r\n        let bias = 0;\r\n        let weight = null;\r\n\r\n        // Add nodes into this layer\r\n        for (let i = 0; i < outputs.length; i++) {\r\n          let node = new Node(layer.name, i, curLayerType, bias, outputs[i]);\r\n\r\n          // RELU and POOL layers have no weights. Links are one-to-one\r\n          let preNode = cnn[curLayerIndex - 1][i];\r\n          let link = new Link(preNode, node, weight);\r\n          preNode.outputLinks.push(link);\r\n          node.inputLinks.push(link);\r\n\r\n          curLayerNodes.push(node);\r\n        }\r\n        break;\r\n      }\r\n      case nodeType.FLATTEN: {\r\n        // Flatten layer has no bias nor weights.\r\n        let bias = 0;\r\n\r\n        for (let i = 0; i < outputs.length; i++) {\r\n          // Flatten layer has no weights. Links are multiple-to-one.\r\n          // Use dummy weights to store the corresponding entry in the previsou\r\n          // node as (row, column)\r\n          // The flatten() in tf2.keras has order: channel -> row -> column\r\n          let preNodeWidth = cnn[curLayerIndex - 1][0].output.length,\r\n            preNodeNum = cnn[curLayerIndex - 1].length,\r\n            preNodeIndex = i % preNodeNum,\r\n            preNodeRow = Math.floor(Math.floor(i / preNodeNum) / preNodeWidth),\r\n            preNodeCol = Math.floor(i / preNodeNum) % preNodeWidth,\r\n            // Use channel, row, colume to compute the real index with order\r\n            // row -> column -> channel\r\n            curNodeRealIndex = preNodeIndex * (preNodeWidth * preNodeWidth) +\r\n              preNodeRow * preNodeWidth + preNodeCol;\r\n          \r\n          let node = new Node(layer.name, i, curLayerType,\r\n              bias, outputs[i]);\r\n          \r\n          // TF uses the (i) index for computation, but the real order should\r\n          // be (curNodeRealIndex). We will sort the nodes using the real order\r\n          // after we compute the logits in the output layer.\r\n          node.realIndex = curNodeRealIndex;\r\n\r\n          let link = new Link(cnn[curLayerIndex - 1][preNodeIndex],\r\n              node, [preNodeRow, preNodeCol]);\r\n\r\n          cnn[curLayerIndex - 1][preNodeIndex].outputLinks.push(link);\r\n          node.inputLinks.push(link);\r\n\r\n          curLayerNodes.push(node);\r\n        }\r\n\r\n        // Sort flatten layer based on the node TF index\r\n        curLayerNodes.sort((a, b) => a.index - b.index);\r\n        break;\r\n      }\r\n      default:\r\n        console.error('Encounter unknown layer type');\r\n        break;\r\n    }\r\n\r\n    // Add current layer to the NN\r\n    cnn.push(curLayerNodes);\r\n    curLayerIndex++;\r\n  }\r\n\r\n  return cnn;\r\n}\r\n\r\n/**\r\n * Construct a CNN with given model and input.\r\n * \r\n * @param {string} inputImageFile filename of input image.\r\n * @param {Model} model Loaded tf.js model.\r\n */\r\nexport const constructCNN = async (inputImageFile, model) => {\r\n  // Load the image file\r\n  let inputImageTensor = await getInputImageArray(inputImageFile, true);\r\n\r\n  // Need to feed the model with a batch\r\n  let inputImageTensorBatch = tf.stack([inputImageTensor]);\r\n\r\n  // To get intermediate layer outputs, we will iterate through all layers in\r\n  // the model, and sequencially apply transformations.\r\n  let preTensor = inputImageTensorBatch;\r\n  let outputs = [];\r\n\r\n  // Iterate through all layers, and build one model with that layer as output\r\n  for (let l = 0; l < model.layers.length; l++) {\r\n    let curTensor = model.layers[l].apply(preTensor);\r\n\r\n    // Record the output tensor\r\n    // Because there is only one element in the batch, we use squeeze()\r\n    // We also want to use CHW order here\r\n    let output = curTensor.squeeze();\r\n    if (output.shape.length === 3) {\r\n      output = output.transpose([2, 0, 1]);\r\n    }\r\n    outputs.push(output);\r\n\r\n    // Update preTensor for next nesting iteration\r\n    preTensor = curTensor;\r\n  }\r\n\r\n  let cnn = constructCNNFromOutputs(outputs, model, inputImageTensor);\r\n  return cnn;\r\n}\r\n\r\n// Helper functions\r\n\r\n/**\r\n * Crop the largest central square of size 64x64x3 of a 3d array.\r\n * \r\n * @param {[int8]} arr array that requires cropping and padding (if a 64x64 crop\r\n * is not present)\r\n * @returns 64x64x3 array\r\n */\r\nconst cropCentralSquare = (arr) => {\r\n  let width = arr.length;\r\n  let height = arr[0].length;\r\n  let croppedArray;\r\n\r\n  // Crop largest square from image if the image is smaller than 64x64 and pad the\r\n  // cropped image.\r\n  if (width < networkInputSize || height < networkInputSize) {\r\n    // TODO(robert): Finish the padding logic.  Pushing now for Omar to work on when he is ready.\r\n    let cropDimensions = Math.min(width, height);\r\n    let startXIdx = Math.floor(width / 2) - (cropDimensions / 2);\r\n    let startYIdx = Math.floor(height / 2) - (cropDimensions / 2);\r\n    let unpaddedSubarray = arr.slice(startXIdx, startXIdx + cropDimensions).map(i => i.slice(startYIdx, startYIdx + cropDimensions));\r\n  } else {\r\n    let startXIdx = Math.floor(width / 2) - Math.floor(networkInputSize / 2);\r\n    let startYIdx = Math.floor(height / 2) - Math.floor(networkInputSize / 2);\r\n    croppedArray = arr.slice(startXIdx, startXIdx + networkInputSize).map(i => i.slice(startYIdx, startYIdx + networkInputSize));\r\n  }\r\n  return croppedArray;\r\n}\r\n\r\n/**\r\n * Convert canvas image data into a 3D tensor with dimension [height, width, 3].\r\n * Recall that tensorflow uses NHWC order (batch, height, width, channel).\r\n * Each pixel is in 0-255 scale.\r\n * \r\n * @param {[int8]} imageData Canvas image data\r\n * @param {int} width Canvas image width\r\n * @param {int} height Canvas image height\r\n */\r\nconst imageDataTo3DTensor = (imageData, width, height, normalize=true) => {\r\n  // Create array placeholder for the 3d array\r\n  let imageArray = tf.fill([width, height, 3], 0).arraySync();\r\n\r\n  // Iterate through the data to fill out channel arrays above\r\n  for (let i = 0; i < imageData.length; i++) {\r\n    let pixelIndex = Math.floor(i / 4),\r\n      channelIndex = i % 4,\r\n      row = width === height ? Math.floor(pixelIndex / width)\r\n                              : pixelIndex % width,\r\n      column = width === height ? pixelIndex % width\r\n                              : Math.floor(pixelIndex / width);\r\n    \r\n    if (channelIndex < 3) {\r\n      let curEntry  = imageData[i];\r\n      // Normalize the original pixel value from [0, 255] to [0, 1]\r\n      if (normalize) {\r\n        curEntry /= 255;\r\n      }\r\n      imageArray[row][column][channelIndex] = curEntry;\r\n    }\r\n  }\r\n\r\n  // If the image is not 64x64, crop and or pad the image appropriately.\r\n  if (width != networkInputSize && height != networkInputSize) {\r\n    imageArray = cropCentralSquare(imageArray)\r\n  }\r\n\r\n  let tensor = tf.tensor3d(imageArray);\r\n  return tensor;\r\n}\r\n\r\n/**\r\n * Get the 3D pixel value array of the given image file.\r\n * \r\n * @param {string} imgFile File path to the image file\r\n * @returns A promise with the corresponding 3D array\r\n */\r\nconst getInputImageArray = (imgFile, normalize=true) => {\r\n  let canvas = document.createElement('canvas');\r\n  canvas.style.cssText = 'display:none;';\r\n  document.getElementsByTagName('body')[0].appendChild(canvas);\r\n  let context = canvas.getContext('2d');\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let inputImage = new Image();\r\n    inputImage.crossOrigin = \"Anonymous\";\r\n    inputImage.src = imgFile;\r\n    let canvasImage;\r\n    inputImage.onload = () => {\r\n      canvas.width = inputImage.width;\r\n      canvas.height = inputImage.height;\r\n      // Resize the input image of the network if it is too large to simply crop\r\n      // the center 64x64 portion in order to still provide a representative\r\n      // input image into the network.\r\n      if (inputImage.width > networkInputSize || inputImage.height > networkInputSize) {\r\n        // Step 1 - Resize using smaller dimension to scale the image down. \r\n        let resizeCanvas = document.createElement('canvas'),\r\n            resizeContext = resizeCanvas.getContext('2d');\r\n        let smallerDimension = Math.min(inputImage.width, inputImage.height);\r\n        const resizeFactor = (networkInputSize + 1) / smallerDimension;\r\n        resizeCanvas.width = inputImage.width * resizeFactor;\r\n        resizeCanvas.height = inputImage.height * resizeFactor;\r\n        resizeContext.drawImage(inputImage, 0, 0, resizeCanvas.width,\r\n          resizeCanvas.height);\r\n\r\n        // Step 2 - Flip non-square images horizontally and rotate them 90deg since\r\n        // non-square images are not stored upright.\r\n        if (inputImage.width != inputImage.height) {\r\n          context.translate(resizeCanvas.width, 0);\r\n          context.scale(-1, 1);\r\n          context.translate(resizeCanvas.width / 2, resizeCanvas.height / 2);\r\n          context.rotate(90 * Math.PI / 180);\r\n        }\r\n\r\n        // Step 3 - Draw resized image on original canvas.\r\n        if (inputImage.width != inputImage.height) {\r\n          context.drawImage(resizeCanvas, -resizeCanvas.width / 2, -resizeCanvas.height / 2);\r\n        } else {\r\n          context.drawImage(resizeCanvas, 0, 0);\r\n        }\r\n        canvasImage = context.getImageData(0, 0, resizeCanvas.width,\r\n          resizeCanvas.height);\r\n\r\n      } else {\r\n        context.drawImage(inputImage, 0, 0);\r\n        canvasImage = context.getImageData(0, 0, inputImage.width,\r\n          inputImage.height);\r\n      }\r\n      // Get image data and convert it to a 3D array\r\n      let imageData = canvasImage.data;\r\n      let imageWidth = canvasImage.width;\r\n      let imageHeight = canvasImage.height;\r\n\r\n      // Remove this newly created canvas element\r\n      canvas.parentNode.removeChild(canvas);\r\n\r\n      resolve(imageDataTo3DTensor(imageData, imageWidth, imageHeight, normalize));\r\n    }\r\n    inputImage.onerror = reject;\r\n  })\r\n}\r\n\r\n/**\r\n * Wrapper to load a model.\r\n * \r\n * @param {string} modelFile Filename of converted (through tensorflowjs.py)\r\n *  model json file.\r\n */\r\nexport const loadTrainedModel = (modelFile) => {\r\n  return tf.loadLayersModel(modelFile);\r\n}\r\n","/* global d3 */\r\n\r\nconst layerColorScales = {\r\n  input: [d3.interpolateGreys, d3.interpolateGreys, d3.interpolateGreys],\r\n  conv: d3.interpolateRdBu,\r\n  relu: d3.interpolateRdBu,\r\n  pool: d3.interpolateRdBu,\r\n  fc: d3.interpolateGreys,\r\n  weight: d3.interpolateBrBG,\r\n  logit: d3.interpolateOranges\r\n};\r\n\r\nlet nodeLength = 40;\r\n\r\nexport const overviewConfig = {\r\n  nodeLength : nodeLength,\r\n  plusSymbolRadius : nodeLength / 5,\r\n  numLayers : 12,\r\n  edgeOpacity : 0.8,\r\n  edgeInitColor : 'rgb(230, 230, 230)',\r\n  edgeHoverColor : 'rgb(130, 130, 130)',\r\n  edgeHoverOuting : false,\r\n  edgeStrokeWidth : 0.7,\r\n  intermediateColor : 'gray',\r\n  layerColorScales: layerColorScales,\r\n  svgPaddings: {top: 25, bottom: 25, left: 50, right: 50},\r\n  kernelRectLength: 8/3,\r\n  gapRatio: 4,\r\n  overlayRectOffset: 12,\r\n  classLists: ['lifeboat', 'ladybug', 'pizza', 'bell pepper', 'school bus',\r\n    'koala', 'espresso', 'red panda', 'orange', 'sport car']\r\n};","import { overviewConfig } from '../config.js';\r\n\r\n// Configs\r\nconst nodeLength = overviewConfig.nodeLength;\r\n\r\n/**\r\n * Compute the [minimum, maximum] of a 1D or 2D array.\r\n * @param {[number]} array \r\n */\r\nexport  const getExtent = (array) => {\r\n  let min = Infinity;\r\n  let max = -Infinity;\r\n\r\n  // Scalar\r\n  if (array.length === undefined) {\r\n    return [array, array];\r\n  }\r\n\r\n  // 1D array\r\n  if (array[0].length === undefined) {\r\n    for (let i = 0; i < array[0].length; i++) {\r\n      if (array[i] < min) {\r\n        min = array[i];\r\n      } else if (array[i] > max) {\r\n        max = array[i];\r\n      }\r\n    }\r\n    return [min, max];\r\n  }\r\n\r\n  // 2D array\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = 0; j < array[0].length; j++) {\r\n      if (array[i][j] < min) {\r\n        min = array[i][j];\r\n      } else if (array[i][j] > max) {\r\n        max = array[i][j];\r\n      }\r\n    }\r\n  }\r\n  return [min, max];\r\n}\r\n\r\n/**\r\n * Convert the svg element center coord to document absolute value\r\n * // Inspired by https://github.com/caged/d3-tip/blob/master/index.js#L286\r\n * @param {elem} elem \r\n */\r\nexport const getMidCoords = (svg, elem) => {\r\n  if (svg !== undefined) {\r\n    let targetel = elem;\r\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\r\n      targetel = targetel.parentNode;\r\n    }\r\n    // Get the absolute coordinate of the E point of element bbox\r\n    let point = svg.node().ownerSVGElement.createSVGPoint();\r\n    let matrix = targetel.getScreenCTM();\r\n    let tbbox = targetel.getBBox();\r\n    // let width = tbbox.width;\r\n    let height = tbbox.height;\r\n\r\n    point.x += 0;\r\n    point.y -= height / 2;\r\n    let bbox = point.matrixTransform(matrix);\r\n    return {\r\n      top: bbox.y,\r\n      left: bbox.x\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Return the output knot (right boundary center)\r\n * @param {object} point {x: x, y:y}\r\n */\r\nexport const getOutputKnot = (point) => {\r\n  return {\r\n    x: point.x + nodeLength,\r\n    y: point.y + nodeLength / 2\r\n  };\r\n}\r\n\r\n/**\r\n * Return the output knot (left boundary center)\r\n * @param {object} point {x: x, y:y}\r\n */\r\nexport const getInputKnot = (point) => {\r\n  return {\r\n    x: point.x,\r\n    y: point.y + nodeLength / 2\r\n  }\r\n}\r\n\r\n/**\r\n * Compute edge data\r\n * @param {[[[number, number]]]} nodeCoordinate Constructed neuron svg locations\r\n * @param {[object]} cnn Constructed CNN model\r\n */\r\nexport const getLinkData = (nodeCoordinate, cnn) => {\r\n  let linkData = [];\r\n  // Create links backward (starting for the first conv layer)\r\n  for (let l = 1; l < cnn.length; l++) {\r\n    for (let n = 0; n < cnn[l].length; n++) {\r\n      let isOutput = cnn[l][n].layerName === 'output';\r\n      let curTarget = getInputKnot(nodeCoordinate[l][n]);\r\n      for (let p = 0; p < cnn[l][n].inputLinks.length; p++) {\r\n        // Specially handle output layer (since we are ignoring the flatten)\r\n        let inputNodeIndex = cnn[l][n].inputLinks[p].source.index;\r\n        \r\n        if (isOutput) {\r\n          let flattenDimension = cnn[l-1][0].output.length *\r\n            cnn[l-1][0].output.length;\r\n          if (inputNodeIndex % flattenDimension !== 0){\r\n              continue;\r\n          }\r\n          inputNodeIndex = Math.floor(inputNodeIndex / flattenDimension);\r\n        }\r\n        let curSource = getOutputKnot(nodeCoordinate[l-1][inputNodeIndex]);\r\n        let curWeight = cnn[l][n].inputLinks[p].weight;\r\n        linkData.push({\r\n          source: curSource,\r\n          target: curTarget,\r\n          weight: curWeight,\r\n          targetLayerIndex: l,\r\n          targetNodeIndex: n,\r\n          sourceNodeIndex: inputNodeIndex\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return linkData;\r\n}\r\n\r\n\r\n/**\r\n * Color scale wrapper (support artificially lighter color!)\r\n * @param {function} colorScale D3 color scale function\r\n * @param {number} range Color range (max - min)\r\n * @param {number} value Color value\r\n * @param {number} gap Tail of the color scale to skip\r\n */\r\nexport const gappedColorScale = (colorScale, range, value, gap) => {\r\n  if (gap === undefined) { gap = 0; }\r\n  let normalizedValue = (value + range / 2) / range;\r\n  return colorScale(normalizedValue * (1 - 2 * gap) + gap);\r\n}","/* global d3, SmoothScroll */\r\n\r\nimport {\r\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\r\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\r\n  detailedModeStore, cnnLayerMinMaxStore, hoverInfoStore\r\n} from '../stores.js';\r\nimport {\r\n  getExtent, getLinkData\r\n} from './draw-utils.js';\r\nimport { overviewConfig } from '../config.js';\r\n\r\n// Configs\r\nconst layerColorScales = overviewConfig.layerColorScales;\r\nconst nodeLength = overviewConfig.nodeLength;\r\nconst numLayers = overviewConfig.numLayers;\r\nconst edgeOpacity = overviewConfig.edgeOpacity;\r\nconst edgeInitColor = overviewConfig.edgeInitColor;\r\nconst edgeStrokeWidth = overviewConfig.edgeStrokeWidth;\r\nconst svgPaddings = overviewConfig.svgPaddings;\r\nconst gapRatio = overviewConfig.gapRatio;\r\nconst classLists = overviewConfig.classLists;\r\nconst formater = d3.format('.4f');\r\n\r\n// Shared variables\r\nlet svg = undefined;\r\nsvgStore.subscribe( value => {svg = value;} )\r\n\r\nlet vSpaceAroundGap = undefined;\r\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\r\n\r\nlet hSpaceAroundGap = undefined;\r\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\r\n\r\nlet cnn = undefined;\r\ncnnStore.subscribe( value => {cnn = value;} )\r\n\r\nlet nodeCoordinate = undefined;\r\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\r\n\r\nlet selectedScaleLevel = undefined;\r\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\r\n\r\nlet cnnLayerRanges = undefined;\r\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\r\n\r\nlet cnnLayerMinMax = undefined;\r\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\r\n\r\nlet detailedMode = undefined;\r\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\r\n\r\n/**\r\n * Use bounded d3 data to draw one canvas\r\n * @param {object} d d3 data\r\n * @param {index} i d3 data index\r\n * @param {[object]} g d3 group\r\n * @param {number} range color range map (max - min)\r\n */\r\nexport const drawOutput = (d, i, g, range) => {\r\n  let image = g[i];\r\n  let colorScale = layerColorScales[d.type];\r\n\r\n  if (d.type === 'input') {\r\n    colorScale = colorScale[d.index];\r\n  }\r\n\r\n  // Set up a second convas in order to resize image\r\n  let imageLength = d.output.length === undefined ? 1 : d.output.length;\r\n  let bufferCanvas = document.createElement(\"canvas\");\r\n  let bufferContext = bufferCanvas.getContext(\"2d\");\r\n  bufferCanvas.width = imageLength;\r\n  bufferCanvas.height = imageLength;\r\n\r\n  // Fill image pixel array\r\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\r\n  let imageSingleArray = imageSingle.data;\r\n\r\n  if (imageLength === 1) {\r\n    imageSingleArray[0] = d.output;\r\n  } else {\r\n    for (let i = 0; i < imageSingleArray.length; i+=4) {\r\n      let pixeIndex = Math.floor(i / 4);\r\n      let row = Math.floor(pixeIndex / imageLength);\r\n      let column = pixeIndex % imageLength;\r\n      let color = undefined;\r\n      if (d.type === 'input' || d.type === 'fc' ) {\r\n        color = d3.rgb(colorScale(1 - d.output[row][column]))\r\n      } else {\r\n        color = d3.rgb(colorScale((d.output[row][column] + range / 2) / range));\r\n      }\r\n\r\n      imageSingleArray[i] = color.r;\r\n      imageSingleArray[i + 1] = color.g;\r\n      imageSingleArray[i + 2] = color.b;\r\n      imageSingleArray[i + 3] = 255;\r\n    }\r\n  }\r\n\r\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\r\n  // higher DPI by rescaling the image using canvas magic\r\n  let largeCanvas = document.createElement('canvas');\r\n  largeCanvas.width = nodeLength * 3;\r\n  largeCanvas.height = nodeLength * 3;\r\n  let largeCanvasContext = largeCanvas.getContext('2d');\r\n\r\n  // Use drawImage to resize the original pixel array, and put the new image\r\n  // (canvas) into corresponding canvas\r\n  bufferContext.putImageData(imageSingle, 0, 0);\r\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\r\n    0, 0, nodeLength * 3, nodeLength * 3);\r\n  \r\n  let imageDataURL = largeCanvas.toDataURL();\r\n  d3.select(image).attr('xlink:href', imageDataURL);\r\n\r\n  // Destory the buffer canvas\r\n  bufferCanvas.remove();\r\n  largeCanvas.remove();\r\n}\r\n\r\n/**\r\n * Draw bar chart to encode the output value\r\n * @param {object} d d3 data\r\n * @param {index} i d3 data index\r\n * @param {[object]} g d3 group\r\n * @param {function} scale map value to length\r\n */\r\nconst drawOutputScore = (d, i, g, scale) => {\r\n  let group = d3.select(g[i]);\r\n  group.select('rect.output-rect')\r\n    .transition('output')\r\n    .delay(500)\r\n    .duration(800)\r\n    .ease(d3.easeCubicIn)\r\n    .attr('width', scale(d.output))\r\n}\r\n\r\nexport const drawCustomImage = (image, inputLayer) => {\r\n\r\n  let imageWidth = image.width;\r\n  // Set up a second convas in order to resize image\r\n  let imageLength = inputLayer[0].output.length;\r\n  let bufferCanvas = document.createElement(\"canvas\");\r\n  let bufferContext = bufferCanvas.getContext(\"2d\");\r\n  bufferCanvas.width = imageLength;\r\n  bufferCanvas.height = imageLength;\r\n\r\n  // Fill image pixel array\r\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\r\n  let imageSingleArray = imageSingle.data;\r\n\r\n  for (let i = 0; i < imageSingleArray.length; i+=4) {\r\n    let pixeIndex = Math.floor(i / 4);\r\n    let row = Math.floor(pixeIndex / imageLength);\r\n    let column = pixeIndex % imageLength;\r\n\r\n    let red = inputLayer[0].output[row][column];\r\n    let green = inputLayer[1].output[row][column];\r\n    let blue = inputLayer[2].output[row][column];\r\n\r\n    imageSingleArray[i] = red * 255;\r\n    imageSingleArray[i + 1] = green * 255;\r\n    imageSingleArray[i + 2] = blue * 255;\r\n    imageSingleArray[i + 3] = 255;\r\n  }\r\n\r\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\r\n  // higher DPI by rescaling the image using canvas magic\r\n  let largeCanvas = document.createElement('canvas');\r\n  largeCanvas.width = imageWidth * 3;\r\n  largeCanvas.height = imageWidth * 3;\r\n  let largeCanvasContext = largeCanvas.getContext('2d');\r\n\r\n  // Use drawImage to resize the original pixel array, and put the new image\r\n  // (canvas) into corresponding canvas\r\n  bufferContext.putImageData(imageSingle, 0, 0);\r\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\r\n    0, 0, imageWidth * 3, imageWidth * 3);\r\n  \r\n  let imageDataURL = largeCanvas.toDataURL();\r\n  // d3.select(image).attr('xlink:href', imageDataURL);\r\n  image.src = imageDataURL;\r\n\r\n  // Destory the buffer canvas\r\n  bufferCanvas.remove();\r\n  largeCanvas.remove();\r\n}\r\n\r\n/**\r\n * Create color gradient for the legend\r\n * @param {[object]} g d3 group\r\n * @param {function} colorScale Colormap\r\n * @param {string} gradientName Label for gradient def\r\n * @param {number} min Min of legend value\r\n * @param {number} max Max of legend value\r\n */\r\nconst getLegendGradient = (g, colorScale, gradientName, min, max) => {\r\n  if (min === undefined) { min = 0; }\r\n  if (max === undefined) { max = 1; }\r\n  let gradient = g.append('defs')\r\n    .append('svg:linearGradient')\r\n    .attr('id', `${gradientName}`)\r\n    .attr('x1', '0%')\r\n    .attr('y1', '100%')\r\n    .attr('x2', '100%')\r\n    .attr('y2', '100%')\r\n    .attr('spreadMethod', 'pad');\r\n  let interpolation = 10\r\n  for (let i = 0; i < interpolation; i++) {\r\n    let curProgress = i / (interpolation - 1);\r\n    let curColor = colorScale(curProgress * (max - min) + min);\r\n    gradient.append('stop')\r\n      .attr('offset', `${curProgress * 100}%`)\r\n      .attr('stop-color', curColor)\r\n      .attr('stop-opacity', 1);\r\n  }\r\n}\r\n\r\n/**\r\n * Draw all legends\r\n * @param {object} legends Parent group\r\n * @param {number} legendHeight Height of the legend element\r\n */\r\nconst drawLegends = (legends, legendHeight) => {\r\n  // Add local legends\r\n  for (let i = 0; i < 2; i++){\r\n    let start = 1 + i * 5;\r\n    let range1 = cnnLayerRanges.local[start];\r\n    let range2 = cnnLayerRanges.local[start + 2];\r\n\r\n    let localLegendScale1 = d3.scaleLinear()\r\n      .range([0, 2 * nodeLength + hSpaceAroundGap - 1.2])\r\n      .domain([-range1 / 2, range1 / 2]);\r\n    \r\n    let localLegendScale2 = d3.scaleLinear()\r\n      .range([0, 3 * nodeLength + 2 * hSpaceAroundGap - 1.2])\r\n      .domain([-range2 / 2, range2 / 2]);\r\n\r\n    let localLegendAxis1 = d3.axisBottom()\r\n      .scale(localLegendScale1)\r\n      .tickFormat(d3.format('.2f'))\r\n      .tickValues([-range1 / 2, 0, range1 / 2]);\r\n    \r\n    let localLegendAxis2 = d3.axisBottom()\r\n      .scale(localLegendScale2)\r\n      .tickFormat(d3.format('.2f'))\r\n      .tickValues([-range2 / 2, 0, range2 / 2]);\r\n\r\n    let localLegend1 = legends.append('g')\r\n      .attr('class', 'legend local-legend')\r\n      .attr('id', `local-legend-${i}-1`)\r\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'local')\r\n      .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\r\n\r\n    localLegend1.append('g')\r\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\r\n      .call(localLegendAxis1)\r\n\r\n    localLegend1.append('rect')\r\n      .attr('width', 2 * nodeLength + hSpaceAroundGap)\r\n      .attr('height', legendHeight)\r\n      .style('fill', 'url(#convGradient)');\r\n\r\n    let localLegend2 = legends.append('g')\r\n      .attr('class', 'legend local-legend')\r\n      .attr('id', `local-legend-${i}-2`)\r\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'local')\r\n      .attr('transform', `translate(${nodeCoordinate[start + 2][0].x}, ${0})`);\r\n\r\n    localLegend2.append('g')\r\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\r\n      .call(localLegendAxis2)\r\n\r\n    localLegend2.append('rect')\r\n      .attr('width', 3 * nodeLength + 2 * hSpaceAroundGap)\r\n      .attr('height', legendHeight)\r\n      .style('fill', 'url(#convGradient)');\r\n  }\r\n\r\n  // Add module legends\r\n  for (let i = 0; i < 2; i++){\r\n    let start = 1 + i * 5;\r\n    let range = cnnLayerRanges.module[start];\r\n\r\n    let moduleLegendScale = d3.scaleLinear()\r\n      .range([0, 5 * nodeLength + 3 * hSpaceAroundGap +\r\n        1 * hSpaceAroundGap * gapRatio - 1.2])\r\n      .domain([-range / 2, range / 2]);\r\n\r\n    let moduleLegendAxis = d3.axisBottom()\r\n      .scale(moduleLegendScale)\r\n      .tickFormat(d3.format('.2f'))\r\n      .tickValues([-range / 2, -(range / 4), 0, range / 4, range / 2]);\r\n\r\n    let moduleLegend = legends.append('g')\r\n      .attr('class', 'legend module-legend')\r\n      .attr('id', `module-legend-${i}`)\r\n      .classed('hidden', !detailedMode || selectedScaleLevel !== 'module')\r\n      .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\r\n    \r\n    moduleLegend.append('g')\r\n      .attr('transform', `translate(0, ${legendHeight - 3})`)\r\n      .call(moduleLegendAxis)\r\n\r\n    moduleLegend.append('rect')\r\n      .attr('width', 5 * nodeLength + 3 * hSpaceAroundGap +\r\n        1 * hSpaceAroundGap * gapRatio)\r\n      .attr('height', legendHeight)\r\n      .style('fill', 'url(#convGradient)');\r\n  }\r\n\r\n  // Add global legends\r\n  let start = 1;\r\n  let range = cnnLayerRanges.global[start];\r\n\r\n  let globalLegendScale = d3.scaleLinear()\r\n    .range([0, 10 * nodeLength + 6 * hSpaceAroundGap +\r\n      3 * hSpaceAroundGap * gapRatio - 1.2])\r\n    .domain([-range / 2, range / 2]);\r\n\r\n  let globalLegendAxis = d3.axisBottom()\r\n    .scale(globalLegendScale)\r\n    .tickFormat(d3.format('.2f'))\r\n    .tickValues([-range / 2, -(range / 4), 0, range / 4, range / 2]);\r\n\r\n  let globalLegend = legends.append('g')\r\n    .attr('class', 'legend global-legend')\r\n    .attr('id', 'global-legend')\r\n    .classed('hidden', !detailedMode || selectedScaleLevel !== 'global')\r\n    .attr('transform', `translate(${nodeCoordinate[start][0].x}, ${0})`);\r\n\r\n  globalLegend.append('g')\r\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\r\n    .call(globalLegendAxis)\r\n\r\n  globalLegend.append('rect')\r\n    .attr('width', 10 * nodeLength + 6 * hSpaceAroundGap +\r\n      3 * hSpaceAroundGap * gapRatio)\r\n    .attr('height', legendHeight)\r\n    .style('fill', 'url(#convGradient)');\r\n\r\n\r\n  // Add output legend\r\n  let outputRectScale = d3.scaleLinear()\r\n        .domain(cnnLayerRanges.output)\r\n        .range([0, nodeLength - 1.2]);\r\n\r\n  let outputLegendAxis = d3.axisBottom()\r\n    .scale(outputRectScale)\r\n    .tickFormat(d3.format('.1f'))\r\n    .tickValues([0, cnnLayerRanges.output[1]])\r\n  \r\n  let outputLegend = legends.append('g')\r\n    .attr('class', 'legend output-legend')\r\n    .attr('id', 'output-legend')\r\n    .classed('hidden', !detailedMode)\r\n    .attr('transform', `translate(${nodeCoordinate[11][0].x}, ${0})`);\r\n  \r\n  outputLegend.append('g')\r\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\r\n    .call(outputLegendAxis);\r\n\r\n  outputLegend.append('rect')\r\n    .attr('width', nodeLength)\r\n    .attr('height', legendHeight)\r\n    .style('fill', 'gray');\r\n  \r\n  // Add input image legend\r\n  let inputScale = d3.scaleLinear()\r\n    .range([0, nodeLength - 1.2])\r\n    .domain([0, 1]);\r\n\r\n  let inputLegendAxis = d3.axisBottom()\r\n    .scale(inputScale)\r\n    .tickFormat(d3.format('.1f'))\r\n    .tickValues([0, 0.5, 1]);\r\n\r\n  let inputLegend = legends.append('g')\r\n    .attr('class', 'legend input-legend')\r\n    .classed('hidden', !detailedMode)\r\n    .attr('transform', `translate(${nodeCoordinate[0][0].x}, ${0})`);\r\n  \r\n  inputLegend.append('g')\r\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\r\n    .call(inputLegendAxis);\r\n\r\n  inputLegend.append('rect')\r\n    .attr('x', 0.3)\r\n    .attr('width', nodeLength - 0.3)\r\n    .attr('height', legendHeight)\r\n    .attr('transform', `rotate(180, ${nodeLength/2}, ${legendHeight/2})`)\r\n    .style('stroke', 'rgb(20, 20, 20)')\r\n    .style('stroke-width', 0.3)\r\n    .style('fill', 'url(#inputGradient)');\r\n}\r\n\r\n/**\r\n * Draw the overview\r\n * @param {number} width Width of the cnn group\r\n * @param {number} height Height of the cnn group\r\n * @param {object} cnnGroup Group to appen cnn elements to\r\n * @param {function} nodeMouseOverHandler Callback func for mouseOver\r\n * @param {function} nodeMouseLeaveHandler Callback func for mouseLeave\r\n * @param {function} nodeClickHandler Callback func for click\r\n */\r\nexport const drawCNN = (width, height, cnnGroup, nodeMouseOverHandler,\r\n  nodeMouseLeaveHandler, nodeClickHandler) => {\r\n  // Draw the CNN\r\n  // There are 8 short gaps and 5 long gaps\r\n  hSpaceAroundGap = (width - nodeLength * numLayers) / (8 + 5 * gapRatio);\r\n  hSpaceAroundGapStore.set(hSpaceAroundGap);\r\n  let leftAccuumulatedSpace = 0;\r\n\r\n  // Iterate through the cnn to draw nodes in each layer\r\n  for (let l = 0; l < cnn.length; l++) {\r\n    let curLayer = cnn[l];\r\n    let isOutput = curLayer[0].layerName === 'output';\r\n\r\n    nodeCoordinate.push([]);\r\n\r\n    // Compute the x coordinate of the whole layer\r\n    // Output layer and conv layer has long gaps\r\n    if (isOutput || curLayer[0].type === 'conv') {\r\n      leftAccuumulatedSpace += hSpaceAroundGap * gapRatio;\r\n    } else {\r\n      leftAccuumulatedSpace += hSpaceAroundGap;\r\n    }\r\n\r\n    // All nodes share the same x coordiante (left in div style)\r\n    let left = leftAccuumulatedSpace;\r\n\r\n    let layerGroup = cnnGroup.append('g')\r\n      .attr('class', 'cnn-layer-group')\r\n      .attr('id', `cnn-layer-group-${l}`);\r\n\r\n    vSpaceAroundGap = (height - nodeLength * curLayer.length) /\r\n      (curLayer.length + 1);\r\n    vSpaceAroundGapStore.set(vSpaceAroundGap);\r\n\r\n    let nodeGroups = layerGroup.selectAll('g.node-group')\r\n      .data(curLayer, d => d.index)\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'node-group')\r\n      .style('cursor', 'pointer')\r\n      .style('pointer-events', 'all')\r\n      .on('click', nodeClickHandler)\r\n      .on('mouseover', nodeMouseOverHandler)\r\n      .on('mouseleave', nodeMouseLeaveHandler)\r\n      .classed('node-output', isOutput)\r\n      .attr('id', (d, i) => {\r\n        // Compute the coordinate\r\n        // Not using transform on the group object because of a decade old\r\n        // bug on webkit (safari)\r\n        // https://bugs.webkit.org/show_bug.cgi?id=23113\r\n        let top = i * nodeLength + (i + 1) * vSpaceAroundGap;\r\n        top += svgPaddings.top;\r\n        nodeCoordinate[l].push({x: left, y: top});\r\n        return `layer-${l}-node-${i}`\r\n      });\r\n    \r\n    // Overwrite the mouseover and mouseleave function for output nodes to show\r\n    // hover info in the UI\r\n    layerGroup.selectAll('g.node-output')\r\n      .on('mouseover', (d, i, g) => {\r\n        nodeMouseOverHandler(d, i, g);\r\n        hoverInfoStore.set( {show: true, text: `Output value: ${formater(d.output)}`} );\r\n      })\r\n      .on('mouseleave', (d, i, g) => {\r\n        nodeMouseLeaveHandler(d, i, g);\r\n        hoverInfoStore.set( {show: false, text: `Output value: ${formater(d.output)}`} );\r\n      });\r\n    \r\n    if (curLayer[0].layerName !== 'output') {\r\n      // Embed raster image in these groups\r\n      nodeGroups.append('image')\r\n        .attr('class', 'node-image')\r\n        .attr('width', nodeLength)\r\n        .attr('height', nodeLength)\r\n        .attr('x', left)\r\n        .attr('y', (d, i) => nodeCoordinate[l][i].y);\r\n      \r\n      // Add a rectangle to show the border\r\n      nodeGroups.append('rect')\r\n        .attr('class', 'bounding')\r\n        .attr('width', nodeLength)\r\n        .attr('height', nodeLength)\r\n        .attr('x', left)\r\n        .attr('y', (d, i) => nodeCoordinate[l][i].y)\r\n        .style('fill', 'none')\r\n        .style('stroke', 'gray')\r\n        .style('stroke-width', 1)\r\n        .classed('hidden', true);\r\n    } else {\r\n      nodeGroups.append('rect')\r\n        .attr('class', 'output-rect')\r\n        .attr('x', left)\r\n        .attr('y', (d, i) => nodeCoordinate[l][i].y + nodeLength / 2 + 8)\r\n        .attr('height', nodeLength / 4)\r\n        .attr('width', 0)\r\n        .style('fill', 'gray');\r\n      nodeGroups.append('text')\r\n        .attr('class', 'output-text')\r\n        .attr('x', left)\r\n        .attr('y', (d, i) => nodeCoordinate[l][i].y + nodeLength / 2)\r\n        .style('dominant-baseline', 'middle')\r\n        .style('font-size', '11px')\r\n        .style('fill', 'black')\r\n        .style('opacity', 0.5)\r\n        .text((d, i) => classLists[i]);\r\n      \r\n      // Add annotation text to tell readers the exact output probability\r\n      // nodeGroups.append('text')\r\n      //   .attr('class', 'annotation-text')\r\n      //   .attr('id', (d, i) => `output-prob-${i}`)\r\n      //   .attr('x', left)\r\n      //   .attr('y', (d, i) => nodeCoordinate[l][i].y + 10)\r\n      //   .text(d => `(${d3.format('.4f')(d.output)})`);\r\n    }\r\n    leftAccuumulatedSpace += nodeLength;\r\n  }\r\n\r\n  // Share the nodeCoordinate\r\n  nodeCoordinateStore.set(nodeCoordinate)\r\n\r\n  // Compute the scale of the output score width (mapping the the node\r\n  // width to the max output score)\r\n  let outputRectScale = d3.scaleLinear()\r\n        .domain(cnnLayerRanges.output)\r\n        .range([0, nodeLength]);\r\n\r\n  // Draw the canvas\r\n  for (let l = 0; l < cnn.length; l++) {\r\n    let range = cnnLayerRanges[selectedScaleLevel][l];\r\n    svg.select(`g#cnn-layer-group-${l}`)\r\n      .selectAll('image.node-image')\r\n      .each((d, i, g) => drawOutput(d, i, g, range));\r\n  }\r\n\r\n  svg.selectAll('g.node-output').each(\r\n    (d, i, g) => drawOutputScore(d, i, g, outputRectScale)\r\n  );\r\n\r\n  // Add layer label\r\n  let layerNames = cnn.map(d => {\r\n    if (d[0].layerName === 'output') {\r\n      return {\r\n        name: d[0].layerName,\r\n        dimension: `(${d.length})`\r\n      }\r\n    } else {\r\n      return {\r\n        name: d[0].layerName,\r\n        dimension: `(${d[0].output.length}, ${d[0].output.length}, ${d.length})`\r\n      }\r\n    }\r\n  });\r\n\r\n  let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\r\n  let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\r\n  \r\n  let detailedLabels = svg.selectAll('g.layer-detailed-label')\r\n    .data(layerNames)\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'layer-detailed-label')\r\n    .attr('id', (d, i) => `layer-detailed-label-${i}`)\r\n    .classed('hidden', !detailedMode)\r\n    .attr('transform', (d, i) => {\r\n      let x = nodeCoordinate[i][0].x + nodeLength / 2;\r\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 6;\r\n      return `translate(${x}, ${y})`;\r\n    })\r\n    .style('cursor', d => d.name.includes('output') ? 'default' : 'help')\r\n    .on('click', (d) => {\r\n      let target = '';\r\n      if (d.name.includes('conv')) { target = 'convolution' }\r\n      if (d.name.includes('relu')) { target = 'relu' }\r\n      if (d.name.includes('max_pool')) { target = 'pooling'}\r\n      if (d.name.includes('input')) { target = 'input'}\r\n\r\n      // Scroll to a article element\r\n      let anchor = document.querySelector(`#article-${target}`);\r\n      scroll.animateScroll(anchor);\r\n    });\r\n  \r\n  detailedLabels.append('title')\r\n    .text('Move to article section');\r\n    \r\n  detailedLabels.append('text')\r\n    .style('opacity', 0.7)\r\n    .style('dominant-baseline', 'middle')\r\n    .append('tspan')\r\n    .style('font-size', '12px')\r\n    .text(d => d.name)\r\n    .append('tspan')\r\n    .style('font-size', '8px')\r\n    .style('font-weight', 'normal')\r\n    .attr('x', 0)\r\n    .attr('dy', '1.5em')\r\n    .text(d => d.dimension);\r\n  \r\n  let labels = svg.selectAll('g.layer-label')\r\n    .data(layerNames)\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'layer-label')\r\n    .attr('id', (d, i) => `layer-label-${i}`)\r\n    .classed('hidden', detailedMode)\r\n    .attr('transform', (d, i) => {\r\n      let x = nodeCoordinate[i][0].x + nodeLength / 2;\r\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\r\n      return `translate(${x}, ${y})`;\r\n    })\r\n    .style('cursor', d => d.name.includes('output') ? 'default' : 'help')\r\n    .on('click', (d) => {\r\n      let target = '';\r\n      if (d.name.includes('conv')) { target = 'convolution' }\r\n      if (d.name.includes('relu')) { target = 'relu' }\r\n      if (d.name.includes('max_pool')) { target = 'pooling'}\r\n      if (d.name.includes('input')) { target = 'input'}\r\n\r\n      // Scroll to a article element\r\n      let anchor = document.querySelector(`#article-${target}`);\r\n      scroll.animateScroll(anchor);\r\n    });\r\n  \r\n  labels.append('title')\r\n    .text('Move to article section');\r\n  \r\n  labels.append('text')\r\n    .style('dominant-baseline', 'middle')\r\n    .style('opacity', 0.8)\r\n    .text(d => {\r\n      if (d.name.includes('conv')) { return 'conv' }\r\n      if (d.name.includes('relu')) { return 'relu' }\r\n      if (d.name.includes('max_pool')) { return 'max_pool'}\r\n      return d.name\r\n    });\r\n\r\n  // Add layer color scale legends\r\n  getLegendGradient(svg, layerColorScales.conv, 'convGradient');\r\n  getLegendGradient(svg, layerColorScales.input[0], 'inputGradient');\r\n\r\n  let legendHeight = 5;\r\n  let legends = svg.append('g')\r\n      .attr('class', 'color-legend')\r\n      .attr('transform', `translate(${0}, ${\r\n        svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap +\r\n        nodeLength * 10\r\n      })`);\r\n  \r\n  drawLegends(legends, legendHeight);\r\n\r\n  // Add edges between nodes\r\n  let linkGen = d3.linkHorizontal()\r\n    .x(d => d.x)\r\n    .y(d => d.y);\r\n  \r\n  let linkData = getLinkData(nodeCoordinate, cnn);\r\n\r\n  let edgeGroup = cnnGroup.append('g')\r\n    .attr('class', 'edge-group');\r\n  \r\n  edgeGroup.selectAll('path.edge')\r\n    .data(linkData)\r\n    .enter()\r\n    .append('path')\r\n    .attr('class', d =>\r\n      `edge edge-${d.targetLayerIndex} edge-${d.targetLayerIndex}-${d.targetNodeIndex}`)\r\n    .attr('id', d => \r\n      `edge-${d.targetLayerIndex}-${d.targetNodeIndex}-${d.sourceNodeIndex}`)\r\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\r\n    .style('fill', 'none')\r\n    .style('stroke-width', edgeStrokeWidth)\r\n    .style('opacity', edgeOpacity)\r\n    .style('stroke', edgeInitColor);\r\n\r\n  // Add input channel annotations\r\n  let inputAnnotation = cnnGroup.append('g')\r\n    .attr('class', 'input-annotation');\r\n\r\n  let redChannel = inputAnnotation.append('text')\r\n    .attr('x', nodeCoordinate[0][0].x + nodeLength / 2)\r\n    .attr('y', nodeCoordinate[0][0].y + nodeLength + 5)\r\n    .attr('class', 'annotation-text')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('text-anchor', 'middle');\r\n  \r\n  redChannel.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('fill', '#C95E67')\r\n    .text('Red');\r\n  \r\n  redChannel.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text(' channel');\r\n\r\n  inputAnnotation.append('text')\r\n    .attr('x', nodeCoordinate[0][1].x + nodeLength / 2)\r\n    .attr('y', nodeCoordinate[0][1].y + nodeLength + 5)\r\n    .attr('class', 'annotation-text')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('text-anchor', 'middle')\r\n    .style('fill', '#3DB665')\r\n    .text('Green');\r\n\r\n  inputAnnotation.append('text')\r\n    .attr('x', nodeCoordinate[0][2].x + nodeLength / 2)\r\n    .attr('y', nodeCoordinate[0][2].y + nodeLength + 5)\r\n    .attr('class', 'annotation-text')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('text-anchor', 'middle')\r\n    .style('fill', '#3F7FBC')\r\n    .text('Blue');\r\n}\r\n\r\n/**\r\n * Update canvas values when user changes input image\r\n */\r\nexport const updateCNN = () => {\r\n  // Compute the scale of the output score width (mapping the the node\r\n  // width to the max output score)\r\n  let outputRectScale = d3.scaleLinear()\r\n      .domain(cnnLayerRanges.output)\r\n      .range([0, nodeLength]);\r\n\r\n  // Rebind the cnn data to layer groups layer by layer\r\n  for (let l = 0; l < cnn.length; l++) {\r\n    let curLayer = cnn[l];\r\n    let range = cnnLayerRanges[selectedScaleLevel][l];\r\n    let layerGroup = svg.select(`g#cnn-layer-group-${l}`);\r\n\r\n    let nodeGroups = layerGroup.selectAll('g.node-group')\r\n      .data(curLayer);\r\n\r\n    if (l < cnn.length - 1) {\r\n      // Redraw the canvas and output node\r\n      nodeGroups.transition('disappear')\r\n        .duration(300)\r\n        .ease(d3.easeCubicOut)\r\n        .style('opacity', 0)\r\n        .on('end', function() {\r\n          d3.select(this)\r\n            .select('image.node-image')\r\n            .each((d, i, g) => drawOutput(d, i, g, range));\r\n          d3.select(this).transition('appear')\r\n            .duration(700)\r\n            .ease(d3.easeCubicIn)\r\n            .style('opacity', 1);\r\n        });\r\n    } else {\r\n      nodeGroups.each(\r\n        (d, i, g) => drawOutputScore(d, i, g, outputRectScale)\r\n      );\r\n    }\r\n  }\r\n\r\n  // Update the color scale legend\r\n  // Local legends\r\n  for (let i = 0; i < 2; i++){\r\n    let start = 1 + i * 5;\r\n    let range1 = cnnLayerRanges.local[start];\r\n    let range2 = cnnLayerRanges.local[start + 2];\r\n\r\n    let localLegendScale1 = d3.scaleLinear()\r\n      .range([0, 2 * nodeLength + hSpaceAroundGap])\r\n      .domain([-range1 / 2, range1 / 2]);\r\n    \r\n    let localLegendScale2 = d3.scaleLinear()\r\n      .range([0, 3 * nodeLength + 2 * hSpaceAroundGap])\r\n      .domain([-range2 / 2, range2 / 2]);\r\n\r\n    let localLegendAxis1 = d3.axisBottom()\r\n      .scale(localLegendScale1)\r\n      .tickFormat(d3.format('.2f'))\r\n      .tickValues([-range1 / 2, 0, range1 / 2]);\r\n    \r\n    let localLegendAxis2 = d3.axisBottom()\r\n      .scale(localLegendScale2)\r\n      .tickFormat(d3.format('.2f'))\r\n      .tickValues([-range2 / 2, 0, range2 / 2]);\r\n    \r\n    svg.select(`g#local-legend-${i}-1`).select('g').call(localLegendAxis1);\r\n    svg.select(`g#local-legend-${i}-2`).select('g').call(localLegendAxis2);\r\n  }\r\n\r\n  // Module legend\r\n  for (let i = 0; i < 2; i++){\r\n    let start = 1 + i * 5;\r\n    let range = cnnLayerRanges.local[start];\r\n\r\n    let moduleLegendScale = d3.scaleLinear()\r\n      .range([0, 5 * nodeLength + 3 * hSpaceAroundGap +\r\n        1 * hSpaceAroundGap * gapRatio - 1.2])\r\n      .domain([-range, range]);\r\n\r\n    let moduleLegendAxis = d3.axisBottom()\r\n      .scale(moduleLegendScale)\r\n      .tickFormat(d3.format('.2f'))\r\n      .tickValues([-range, -(range / 2), 0, range/2, range]);\r\n    \r\n    svg.select(`g#module-legend-${i}`).select('g').call(moduleLegendAxis);\r\n  }\r\n\r\n  // Global legend\r\n  let start = 1;\r\n  let range = cnnLayerRanges.global[start];\r\n\r\n  let globalLegendScale = d3.scaleLinear()\r\n    .range([0, 10 * nodeLength + 6 * hSpaceAroundGap +\r\n      3 * hSpaceAroundGap * gapRatio - 1.2])\r\n    .domain([-range, range]);\r\n\r\n  let globalLegendAxis = d3.axisBottom()\r\n    .scale(globalLegendScale)\r\n    .tickFormat(d3.format('.2f'))\r\n    .tickValues([-range, -(range / 2), 0, range/2, range]);\r\n\r\n  svg.select(`g#global-legend`).select('g').call(globalLegendAxis);\r\n\r\n  // Output legend\r\n  let outputLegendAxis = d3.axisBottom()\r\n    .scale(outputRectScale)\r\n    .tickFormat(d3.format('.1f'))\r\n    .tickValues([0, cnnLayerRanges.output[1]]);\r\n  \r\n  svg.select('g#output-legend').select('g').call(outputLegendAxis);\r\n}\r\n\r\n/**\r\n * Update the ranges for current CNN layers\r\n */\r\nexport const updateCNNLayerRanges = () => {\r\n  // Iterate through all nodes to find a output ranges for each layer\r\n  let cnnLayerRangesLocal = [1];\r\n  let curRange = undefined;\r\n\r\n  // Also track the min/max of each layer (avoid computing during intermediate\r\n  // layer)\r\n  cnnLayerMinMax = [];\r\n\r\n  for (let l = 0; l < cnn.length - 1; l++) {\r\n    let curLayer = cnn[l];\r\n\r\n    // Compute the min max\r\n    let outputExtents = curLayer.map(l => getExtent(l.output));\r\n    let aggregatedExtent = outputExtents.reduce((acc, cur) => {\r\n      return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\r\n    })\r\n    cnnLayerMinMax.push({min: aggregatedExtent[0], max: aggregatedExtent[1]});\r\n\r\n    // conv layer refreshes curRange counting\r\n    if (curLayer[0].type === 'conv' || curLayer[0].type === 'fc') {\r\n      aggregatedExtent = aggregatedExtent.map(Math.abs);\r\n      // Plus 0.1 to offset the rounding error (avoid black color)\r\n      curRange = 2 * (0.1 + \r\n        Math.round(Math.max(...aggregatedExtent) * 1000) / 1000);\r\n    }\r\n\r\n    if (curRange !== undefined){\r\n      cnnLayerRangesLocal.push(curRange);\r\n    }\r\n  }\r\n\r\n  // Finally, add the output layer range\r\n  cnnLayerRangesLocal.push(1);\r\n  cnnLayerMinMax.push({min: 0, max: 1});\r\n\r\n  // Support different levels of scales (1) lcoal, (2) component, (3) global\r\n  let cnnLayerRangesComponent = [1];\r\n  let numOfComponent = (numLayers - 2) / 5;\r\n  for (let i = 0; i < numOfComponent; i++) {\r\n    let curArray = cnnLayerRangesLocal.slice(1 + 5 * i, 1 + 5 * i + 5);\r\n    let maxRange = Math.max(...curArray);\r\n    for (let j = 0; j < 5; j++) {\r\n      cnnLayerRangesComponent.push(maxRange);\r\n    }\r\n  }\r\n  cnnLayerRangesComponent.push(1);\r\n\r\n  let cnnLayerRangesGlobal = [1];\r\n  let maxRange = Math.max(...cnnLayerRangesLocal.slice(1,\r\n    cnnLayerRangesLocal.length - 1));\r\n  for (let i = 0; i < numLayers - 2; i++) {\r\n    cnnLayerRangesGlobal.push(maxRange);\r\n  }\r\n  cnnLayerRangesGlobal.push(1);\r\n\r\n  // Update the ranges dictionary\r\n  cnnLayerRanges.local = cnnLayerRangesLocal;\r\n  cnnLayerRanges.module = cnnLayerRangesComponent;\r\n  cnnLayerRanges.global = cnnLayerRangesGlobal;\r\n  cnnLayerRanges.output = [0, d3.max(cnn[cnn.length - 1].map(d => d.output))];\r\n\r\n  cnnLayerRangesStore.set(cnnLayerRanges);\r\n  cnnLayerMinMaxStore.set(cnnLayerMinMax);\r\n}","/* global d3 */\r\n\r\nimport { svgStore, vSpaceAroundGapStore } from '../stores.js';\r\nimport { overviewConfig } from '../config.js';\r\n\r\n// Configs\r\nconst layerColorScales = overviewConfig.layerColorScales;\r\nconst nodeLength = overviewConfig.nodeLength;\r\nconst intermediateColor = overviewConfig.intermediateColor;\r\nconst svgPaddings = overviewConfig.svgPaddings;\r\n\r\n// Shared variables\r\nlet svg = undefined;\r\nsvgStore.subscribe( value => {svg = value;} )\r\n\r\nlet vSpaceAroundGap = undefined;\r\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\r\n\r\n/**\r\n * Move one layer horizontally\r\n * @param {object} arg Multiple arguments {\r\n *   layerIndex: current layer index\r\n *   targetX: destination x\r\n *   disable: make this layer unresponsible\r\n *   delay: animation delay\r\n *   opacity: change the current layer's opacity\r\n *   specialIndex: avoid manipulating `specialIndex`th node\r\n *   onEndFunc: call this function when animation finishes\r\n *   transitionName: animation ID\r\n * }\r\n */\r\nexport const moveLayerX = (arg) => {\r\n  let layerIndex = arg.layerIndex;\r\n  let targetX = arg.targetX;\r\n  let disable = arg.disable;\r\n  let delay = arg.delay;\r\n  let opacity = arg.opacity;\r\n  let specialIndex = arg.specialIndex;\r\n  let onEndFunc = arg.onEndFunc;\r\n  let transitionName = arg.transitionName === undefined ? 'move' : arg.transitionName;\r\n  let duration = arg.duration === undefined ? 500 : arg.duration;\r\n\r\n  // Move the selected layer\r\n  let curLayer = svg.select(`g#cnn-layer-group-${layerIndex}`);\r\n  curLayer.selectAll('g.node-group').each((d, i, g) => {\r\n    d3.select(g[i])\r\n      .style('cursor', disable && i !== specialIndex ? 'default' : 'pointer')\r\n      .style('pointer-events', disable && i !== specialIndex ? 'none' : 'all')\r\n      .select('image')\r\n      .transition(transitionName)\r\n      .ease(d3.easeCubicInOut)\r\n      .delay(delay)\r\n      .duration(duration)\r\n      .attr('x', targetX);\r\n    \r\n    d3.select(g[i])\r\n      .select('rect.bounding')\r\n      .transition(transitionName)\r\n      .ease(d3.easeCubicInOut)\r\n      .delay(delay)\r\n      .duration(duration)\r\n      .attr('x', targetX);\r\n    \r\n    if (opacity !== undefined && i !== specialIndex) {\r\n      d3.select(g[i])\r\n        .select('image')\r\n        .style('opacity', opacity);\r\n    }\r\n  });\r\n  \r\n  // Also move the layer labels\r\n  svg.selectAll(`g#layer-label-${layerIndex}`)\r\n    .transition(transitionName)\r\n    .ease(d3.easeCubicInOut)\r\n    .delay(delay)\r\n    .duration(duration)\r\n    .attr('transform', () => {\r\n      let x = targetX + nodeLength / 2;\r\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\r\n      return `translate(${x}, ${y})`;\r\n    })\r\n    .on('end', onEndFunc);\r\n\r\n  svg.selectAll(`g#layer-detailed-label-${layerIndex}`)\r\n    .transition(transitionName)\r\n    .ease(d3.easeCubicInOut)\r\n    .delay(delay)\r\n    .duration(duration)\r\n    .attr('transform', () => {\r\n      let x = targetX + nodeLength / 2;\r\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 6;\r\n      return `translate(${x}, ${y})`;\r\n    })\r\n    .on('end', onEndFunc);\r\n}\r\n\r\n/**\r\n * Append a gradient definition to `group`\r\n * @param {string} gradientID CSS ID for the gradient def\r\n * @param {[{offset: number, color: string, opacity: number}]} stops Gradient stops\r\n * @param {element} group Element to append def to\r\n */\r\nexport const addOverlayGradient = (gradientID, stops, group) => {\r\n  if (group === undefined) {\r\n    group = svg;\r\n  }\r\n\r\n  // Create a gradient\r\n  let defs = group.append(\"defs\")\r\n    .attr('class', 'overlay-gradient');\r\n\r\n  let gradient = defs.append(\"linearGradient\")\r\n    .attr(\"id\", gradientID)\r\n    .attr(\"x1\", \"0%\")\r\n    .attr(\"x2\", \"100%\")\r\n    .attr(\"y1\", \"100%\")\r\n    .attr(\"y2\", \"100%\");\r\n  \r\n  stops.forEach(s => {\r\n    gradient.append('stop')\r\n      .attr('offset', s.offset)\r\n      .attr('stop-color', s.color)\r\n      .attr('stop-opacity', s.opacity);\r\n  })\r\n}\r\n\r\n/**\r\n * Draw the legend for intermediate layer\r\n * @param {object} arg \r\n * {\r\n *   legendHeight: height of the legend rectangle\r\n *   curLayerIndex: the index of selected layer\r\n *   range: colormap range\r\n *   group: group to append the legend\r\n *   minMax: {min: min value, max: max value}\r\n *   width: width of the legend\r\n *   x: x position of the legend\r\n *   y: y position of the legend\r\n *   isInput: if the legend is for the input layer (special handle black to\r\n *      white color scale)\r\n *   colorScale: d3 color scale\r\n *   gradientAppendingName: name of the appending gradient\r\n *   gradientGap: gap to make the color lighter\r\n * }\r\n */\r\nexport const drawIntermediateLayerLegend = (arg) => {\r\n  let legendHeight = arg.legendHeight,\r\n    curLayerIndex = arg.curLayerIndex,\r\n    range = arg.range,\r\n    group = arg.group,\r\n    minMax = arg.minMax,\r\n    width = arg.width,\r\n    x = arg.x,\r\n    y = arg.y,\r\n    isInput = arg.isInput,\r\n    colorScale = arg.colorScale,\r\n    gradientAppendingName = arg.gradientAppendingName,\r\n    gradientGap = arg.gradientGap;\r\n  \r\n  if (colorScale === undefined) { colorScale = layerColorScales.conv; }\r\n  if (gradientGap === undefined) { gradientGap = 0; }\r\n  \r\n  // Add a legend color gradient\r\n  let gradientName = 'url(#inputGradient)';\r\n  let normalizedColor = v => colorScale(v * (1 - 2 * gradientGap) + gradientGap);\r\n\r\n  if (!isInput) {\r\n    let leftValue = (minMax.min + range / 2) / range,\r\n      zeroValue = (0 + range / 2) / range,\r\n      rightValue = (minMax.max + range / 2) / range,\r\n      totalRange = minMax.max - minMax.min,\r\n      zeroLocation = (0 - minMax.min) / totalRange,\r\n      leftMidValue = leftValue + (zeroValue - leftValue)/2,\r\n      rightMidValue = zeroValue + (rightValue - zeroValue)/2;\r\n\r\n    let stops = [\r\n      {offset: 0, color: normalizedColor(leftValue), opacity: 1},\r\n      {offset: zeroLocation / 2,\r\n        color: normalizedColor(leftMidValue),\r\n        opacity: 1},\r\n      {offset: zeroLocation,\r\n        color: normalizedColor(zeroValue),\r\n        opacity: 1},\r\n      {offset: zeroLocation + (1 - zeroValue) / 2,\r\n        color: normalizedColor(rightMidValue),\r\n        opacity: 1},\r\n      {offset: 1, color: normalizedColor(rightValue), opacity: 1}\r\n    ];\r\n\r\n    if (gradientAppendingName === undefined) {\r\n      addOverlayGradient('intermediate-legend-gradient', stops, group);\r\n      gradientName = 'url(#intermediate-legend-gradient)';\r\n    } else {\r\n      addOverlayGradient(`${gradientAppendingName}`, stops, group);\r\n      gradientName = `url(#${gradientAppendingName})`;\r\n    }\r\n  }\r\n\r\n  let legendScale = d3.scaleLinear()\r\n    .range([0, width - 1.2])\r\n    .domain(isInput ? [0, range] : [minMax.min, minMax.max]);\r\n\r\n  let legendAxis = d3.axisBottom()\r\n    .scale(legendScale)\r\n    .tickFormat(d3.format(isInput ? 'd' : '.2f'))\r\n    .tickValues(isInput ? [0, range] : [minMax.min, 0, minMax.max]);\r\n  \r\n  let intermediateLegend = group.append('g')\r\n    .attr('class', `intermediate-legend-${curLayerIndex - 1}`)\r\n    .attr('transform', `translate(${x}, ${y})`);\r\n  \r\n  let legendGroup = intermediateLegend.append('g')\r\n    .attr('transform', `translate(0, ${legendHeight - 3})`)\r\n    .call(legendAxis);\r\n  \r\n  legendGroup.selectAll('text')\r\n    .style('font-size', '9px')\r\n    .style('fill', intermediateColor);\r\n  \r\n  legendGroup.selectAll('path, line')\r\n    .style('stroke', intermediateColor);\r\n\r\n  intermediateLegend.append('rect')\r\n    .attr('width', width)\r\n    .attr('height', legendHeight)\r\n    .attr('transform', `rotate(${isInput ? 180 : 0},\r\n      ${width / 2}, ${legendHeight / 2})`)\r\n    .style('fill', gradientName);\r\n}\r\n\r\n/**\r\n * Draw an very neat arrow!\r\n * @param {object} arg \r\n * {\r\n *   group: element to append this arrow to\r\n *   sx: source x\r\n *   sy: source y\r\n *   tx: target x\r\n *   ty: target y\r\n *   dr: radius of curve (I'm using a circle)\r\n *   hFlip: the direction to choose the circle (there are always two ways)\r\n * }\r\n */\r\nexport const drawArrow = (arg) => {\r\n  let group = arg.group,\r\n    sx = arg.sx,\r\n    sy = arg.sy,\r\n    tx = arg.tx,\r\n    ty = arg.ty,\r\n    dr = arg.dr,\r\n    hFlip = arg.hFlip,\r\n    marker = arg.marker === undefined ? 'marker' : arg.marker;\r\n\r\n  /* Cool graphics trick -> merge translate and scale together\r\n  translateX = (1 - scaleX) * tx,\r\n  translateY = (1 - scaleY) * ty;\r\n  */\r\n  \r\n  let arrow = group.append('g')\r\n    .attr('class', 'arrow-group');\r\n\r\n  arrow.append('path')\r\n    .attr(\"d\", `M${sx},${sy}A${dr},${dr} 0 0,${hFlip ? 0 : 1} ${tx},${ty}`)\r\n    .attr('marker-end', `url(#${marker})`)\r\n    .style('stroke', 'gray')\r\n    .style('fill', 'none');\r\n}\r\n","/* global d3 */\r\n\r\nimport {\r\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\r\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\r\n  needRedrawStore, cnnLayerMinMaxStore, shouldIntermediateAnimateStore,\r\n  hoverInfoStore, detailedModeStore, intermediateLayerPositionStore\r\n} from '../stores.js';\r\nimport {\r\n  getExtent, getOutputKnot, getInputKnot, gappedColorScale\r\n} from './draw-utils.js';\r\nimport {\r\n  drawOutput\r\n} from './overview-draw.js';\r\nimport {\r\n  drawIntermediateLayerLegend, moveLayerX, addOverlayGradient,\r\n  drawArrow\r\n} from './intermediate-utils.js';\r\nimport { singleConv } from '../utils/cnn.js';\r\nimport { overviewConfig } from '../config.js';\r\n\r\n// Configs\r\nconst layerColorScales = overviewConfig.layerColorScales;\r\nconst nodeLength = overviewConfig.nodeLength;\r\nconst plusSymbolRadius = overviewConfig.plusSymbolRadius;\r\nconst numLayers = overviewConfig.numLayers;\r\nconst intermediateColor = overviewConfig.intermediateColor;\r\nconst kernelRectLength = overviewConfig.kernelRectLength;\r\nconst svgPaddings = overviewConfig.svgPaddings;\r\nconst gapRatio = overviewConfig.gapRatio;\r\nconst overlayRectOffset = overviewConfig.overlayRectOffset;\r\nconst formater = d3.format('.4f');\r\nlet isEndOfAnimation = false;\r\n\r\n// Shared variables\r\nlet svg = undefined;\r\nsvgStore.subscribe( value => {svg = value;} )\r\n\r\nlet vSpaceAroundGap = undefined;\r\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\r\n\r\nlet hSpaceAroundGap = undefined;\r\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\r\n\r\nlet cnn = undefined;\r\ncnnStore.subscribe( value => {cnn = value;} )\r\n\r\nlet nodeCoordinate = undefined;\r\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\r\n\r\nlet selectedScaleLevel = undefined;\r\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\r\n\r\nlet cnnLayerRanges = undefined;\r\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\r\n\r\nlet cnnLayerMinMax = undefined;\r\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\r\n\r\nlet needRedraw = [undefined, undefined];\r\nneedRedrawStore.subscribe( value => {needRedraw = value;} )\r\n\r\nlet shouldIntermediateAnimate = undefined;\r\nshouldIntermediateAnimateStore.subscribe(value => {\r\n  shouldIntermediateAnimate = value;\r\n})\r\n\r\nlet detailedMode = undefined;\r\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\r\n\r\nlet intermediateLayerPosition = undefined;\r\nintermediateLayerPositionStore.subscribe ( value => {intermediateLayerPosition = value;} )\r\n\r\n// let curRightX = 0;\r\n\r\n/**\r\n * Draw the intermediate layer activation heatmaps\r\n * @param {element} image Neuron heatmap image\r\n * @param {number} range Colormap range\r\n * @param {function} colorScale Colormap\r\n * @param {number} length Image length\r\n * @param {[[number]]} dataMatrix Heatmap matrix\r\n */\r\nconst drawIntermidiateImage = (image, range, colorScale, length,\r\n  dataMatrix) => {\r\n  // Set up a buffer convas in order to resize image\r\n  let imageLength = length;\r\n  let bufferCanvas = document.createElement(\"canvas\");\r\n  let bufferContext = bufferCanvas.getContext(\"2d\");\r\n  bufferCanvas.width = imageLength;\r\n  bufferCanvas.height = imageLength;\r\n\r\n  // Fill image pixel array\r\n  let imageSingle = bufferContext.getImageData(0, 0, imageLength, imageLength);\r\n  let imageSingleArray = imageSingle.data;\r\n\r\n  for (let i = 0; i < imageSingleArray.length; i+=4) {\r\n    let pixeIndex = Math.floor(i / 4);\r\n    let row = Math.floor(pixeIndex / imageLength);\r\n    let column = pixeIndex % imageLength;\r\n    let color = d3.rgb(colorScale((dataMatrix[row][column] + range / 2) / range));\r\n\r\n    imageSingleArray[i] = color.r;\r\n    imageSingleArray[i + 1] = color.g;\r\n    imageSingleArray[i + 2] = color.b;\r\n    imageSingleArray[i + 3] = 255;\r\n  }\r\n\r\n  // canvas.toDataURL() only exports image in 96 DPI, so we can hack it to have\r\n  // higher DPI by rescaling the image using canvas magic\r\n  let largeCanvas = document.createElement('canvas');\r\n  largeCanvas.width = nodeLength * 3;\r\n  largeCanvas.height = nodeLength * 3;\r\n  let largeCanvasContext = largeCanvas.getContext('2d');\r\n\r\n  // Use drawImage to resize the original pixel array, and put the new image\r\n  // (canvas) into corresponding canvas\r\n  bufferContext.putImageData(imageSingle, 0, 0);\r\n  largeCanvasContext.drawImage(bufferCanvas, 0, 0, imageLength, imageLength,\r\n    0, 0, nodeLength * 3, nodeLength * 3);\r\n  \r\n  let imageDataURL = largeCanvas.toDataURL();\r\n  image.attr('xlink:href', imageDataURL);\r\n\r\n  // Destory the buffer canvas\r\n  bufferCanvas.remove();\r\n  largeCanvas.remove();\r\n}\r\n\r\n/**\r\n * Create a node group for the intermediate layer\r\n * @param {number} curLayerIndex Intermediate layer index\r\n * @param {number} selectedI Clicked node index\r\n * @param {element} groupLayer Group element\r\n * @param {number} x Node's x\r\n * @param {number} y Node's y\r\n * @param {number} nodeIndex Node's index\r\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\r\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\r\n * @param {function} intermediateNodeClicked Mouse click handler\r\n * @param {bool} interaction Whether support interaction\r\n */\r\nconst createIntermediateNode = (curLayerIndex, selectedI, groupLayer, x, y,\r\n  nodeIndex, stride, intermediateNodeMouseOverHandler,\r\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked, interaction) => {\r\n  let newNode = groupLayer.append('g')\r\n    .datum(cnn[curLayerIndex - 1][nodeIndex])\r\n    .attr('class', 'intermediate-node')\r\n    .attr('cursor', interaction ? 'pointer': 'default')\r\n    .attr('pointer-events', interaction ? 'all': 'none')\r\n    .attr('node-index', nodeIndex)\r\n    .on('mouseover', intermediateNodeMouseOverHandler)\r\n    .on('mouseleave', intermediateNodeMouseLeaveHandler)\r\n    .on('click', (d, g, i) => intermediateNodeClicked(d, g, i, selectedI,\r\n      curLayerIndex));\r\n  \r\n  newNode.append('image')\r\n    .attr('width', nodeLength)\r\n    .attr('height', nodeLength)\r\n    .attr('x', x)\r\n    .attr('y', y);\r\n\r\n  // Overlay the image with a mask of many small rectangles\r\n  let strideTime = Math.floor(nodeLength / stride);\r\n  let overlayGroup = newNode.append('g')\r\n    .attr('class', 'overlay-group')\r\n    .attr('transform', `translate(${x}, ${y})`);\r\n  \r\n  for (let i = 0; i < strideTime; i++) {\r\n    for (let j = 0; j < strideTime; j++) {\r\n      overlayGroup.append('rect')\r\n        .attr('class', `mask-overlay mask-${i}-${j}`)\r\n        .attr('width', stride)\r\n        .attr('height', stride)\r\n        .attr('x', i * stride)\r\n        .attr('y', j * stride)\r\n        .style('fill', 'var(--light-gray)')\r\n        .style('stroke', 'var(--light-gray)')\r\n        .style('opacity', 1);\r\n    }\r\n  }\r\n\r\n  // Add a rectangle to show the border\r\n  newNode.append('rect')\r\n    .attr('class', 'bounding')\r\n    .attr('width', nodeLength)\r\n    .attr('height', nodeLength)\r\n    .attr('x', x)\r\n    .attr('y', y)\r\n    .style('fill', 'none')\r\n    .style('stroke', intermediateColor)\r\n    .style('stroke-width', 1);\r\n  \r\n  return newNode;\r\n}\r\n\r\nconst startOutputAnimation = (kernelGroup, tickTime1D, stride, delay,\r\n  curLayerIndex) => {\r\n  const slidingAnimation = () => {\r\n    let originX = +kernelGroup.attr('data-origin-x');\r\n    let originY = +kernelGroup.attr('data-origin-y');\r\n    let oldTick = +kernelGroup.attr('data-tick');\r\n    let i = (oldTick) % tickTime1D;\r\n    let j = Math.floor((oldTick) / tickTime1D);\r\n    let x = originX + i * stride;\r\n    let y = originY + j * stride;\r\n    let newTick = (oldTick + 1) % (tickTime1D * tickTime1D);\r\n\r\n    // Remove one mask rect at each tick\r\n    svg.selectAll(`rect.mask-${i}-${j}`)\r\n      .transition('window-sliding-mask')\r\n      .delay(delay + 100)\r\n      .duration(300)\r\n      .style('opacity', 0);\r\n\r\n      kernelGroup.attr('data-tick', newTick)\r\n      .transition('window-sliding-input')\r\n      .delay(delay)\r\n      .duration(200)\r\n      .attr('transform', `translate(${x}, ${y})`)\r\n      .on('end', () => {\r\n        if (newTick === 0) {\r\n          /* Uncomment to wrap the sliding\r\n          svg.selectAll(`rect.mask-overlay`)\r\n            .transition('window-sliding-mask')\r\n            .delay(delay - 200)\r\n            .duration(300)\r\n            .style('opacity', 1);\r\n          */\r\n\r\n          // Stop the animation\r\n          // Be careful with animation racing so call this function here instead\r\n          // of under selectALL\r\n          if (!isEndOfAnimation) {\r\n            animationButtonClicked(curLayerIndex);\r\n          }\r\n        }\r\n        if (shouldIntermediateAnimate) {\r\n          slidingAnimation();\r\n        }\r\n      });\r\n  }\r\n  slidingAnimation();\r\n}\r\n\r\nconst startIntermediateAnimation = (kernelGroupInput, kernelGroupResult,\r\n  tickTime1D, stride) => {\r\n  let delay = 200;\r\n  const slidingAnimation = () => {\r\n    let originX = +kernelGroupInput.attr('data-origin-x');\r\n    let originY = +kernelGroupInput.attr('data-origin-y');\r\n    let originXResult = +kernelGroupResult.attr('data-origin-x');\r\n    let oldTick = +kernelGroupInput.attr('data-tick');\r\n    let i = (oldTick) % tickTime1D;\r\n    let j = Math.floor((oldTick) / tickTime1D);\r\n    let x = originX + i * stride;\r\n    let y = originY + j * stride;\r\n    let xResult = originXResult + (oldTick % tickTime1D) * stride;\r\n    let newTick = (oldTick + 1) % (tickTime1D * tickTime1D);\r\n\r\n    // Remove one mask rect at each tick\r\n    svg.selectAll(`rect.mask-${i}-${j}`)\r\n      .transition('window-sliding-mask')\r\n      .delay(delay + 100)\r\n      .duration(300)\r\n      .style('opacity', 0);\r\n\r\n    kernelGroupInput.attr('data-tick', newTick)\r\n      .transition('window-sliding-input')\r\n      .delay(delay)\r\n      .duration(200)\r\n      .attr('transform', `translate(${x}, ${y})`);\r\n\r\n    kernelGroupResult.attr('data-tick', newTick)\r\n      .transition('window-sliding-result')\r\n      .delay(delay)\r\n      .duration(200)\r\n      .attr('transform', `translate(${xResult}, ${y})`)\r\n      .on('end', () => {\r\n        /* Uncomment to wrap the sliding\r\n        if (newTick === 0) {\r\n          svg.selectAll(`rect.mask-overlay`)\r\n            .transition('window-sliding-mask')\r\n            .delay(delay - 200)\r\n            .duration(300)\r\n            .style('opacity', 1);\r\n        }\r\n        */\r\n        if (shouldIntermediateAnimate) {\r\n          slidingAnimation();\r\n        }\r\n      });\r\n  }\r\n  slidingAnimation();\r\n}\r\n\r\nconst animationButtonClicked = (curLayerIndex) => {\r\n  if (d3.event !== null) {\r\n    d3.event.stopPropagation();\r\n  }\r\n  \r\n  let delay = 200;\r\n  let tickTime1D = nodeLength / (kernelRectLength * 3);\r\n  let stride = kernelRectLength * 3; \r\n\r\n  if (isEndOfAnimation) {\r\n    // Start the animation\r\n    shouldIntermediateAnimateStore.set(true);\r\n\r\n    // Show kernel\r\n    svg.selectAll('.kernel-clone')\r\n      .transition()\r\n      .duration(300)\r\n      .style('opacity', 1)\r\n\r\n    // Restore the mask\r\n    svg.selectAll(`rect.mask-overlay`)\r\n      .transition()\r\n      .duration(300)\r\n      .style('opacity', 1);\r\n\r\n    // Start the intermediate animation\r\n    for (let i  = 0; i < nodeCoordinate[curLayerIndex - 1].length; i++) {\r\n      startIntermediateAnimation(d3.select(`.kernel-input-${i}`),\r\n        d3.select(`.kernel-result-${i}`), tickTime1D, stride);\r\n    }\r\n\r\n    // Start the output animation\r\n    startOutputAnimation(d3.select('.kernel-output'),\r\n      tickTime1D, stride, delay, curLayerIndex);\r\n    \r\n    // Change the flow edge style\r\n    svg.selectAll('path.flow-edge')\r\n      .attr('stroke-dasharray', '4 2')\r\n      .attr('stroke-dashoffset', 0)\r\n      .each((d, i, g) => animateEdge(d, i, g, 0 - 1000));\r\n\r\n    // Change button icon\r\n    svg.select('.animation-control-button')\r\n      .attr('xlink:href', 'PUBLIC_URL/assets/img/fast_forward.svg');\r\n    \r\n    isEndOfAnimation = false;\r\n\r\n  } else {\r\n    // End the animation\r\n    shouldIntermediateAnimateStore.set(false);\r\n    \r\n    // Show all intermediate and output results\r\n    svg.selectAll(`rect.mask-overlay`)\r\n      .transition('skip')\r\n      .duration(600)\r\n      .style('opacity', 0);\r\n    \r\n    // Move kernel to the beginning to prepare for the next animation\r\n    let kernelClones = svg.selectAll('.kernel-clone');\r\n    kernelClones.attr('data-tick', 0)\r\n      .transition('skip')\r\n      .duration(300)\r\n      .style('opacity', 0)\r\n      .on('end', (d, i, g) => {\r\n        let element = d3.select(g[i]);\r\n        let originX = +element.attr('data-origin-x');\r\n        let originY = +element.attr('data-origin-y');\r\n        element.attr('transform', `translate(${originX}, ${originY})`);\r\n      });\r\n    \r\n    // Change flow edge style\r\n    svg.selectAll('path.flow-edge')\r\n      .interrupt()\r\n      .attr('stroke-dasharray', '0 0');\r\n    \r\n    // Change button icon\r\n    svg.select('.animation-control-button')\r\n      .attr('xlink:href', 'PUBLIC_URL/assets/img/redo.svg');\r\n    \r\n    isEndOfAnimation = true;\r\n  }\r\n}\r\n\r\nconst animateEdge = (d, i, g, dashoffset) => {\r\n  let curPath = d3.select(g[i]);\r\n  curPath.transition()\r\n    .duration(60000)\r\n    .ease(d3.easeLinear)\r\n    .attr('stroke-dashoffset', dashoffset)\r\n    .on('end', (d, i, g) => {\r\n      if (shouldIntermediateAnimate) {\r\n        animateEdge(d, i, g, dashoffset - 2000);\r\n      }\r\n    });\r\n}\r\n\r\n/**\r\n * Draw one intermediate layer\r\n * @param {number} curLayerIndex \r\n * @param {number} leftX X value of intermediate layer left border\r\n * @param {number} rightX X value of intermediate layer right border\r\n * @param {number} rightStart X value of right component starting anchor\r\n * @param {number} intermediateGap The inner gap\r\n * @param {number} d Clicked node bounded data\r\n * @param {number} i Clicked node index\r\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\r\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\r\n * @param {function} intermediateNodeClicked Mouse click handler\r\n */\r\nconst drawIntermediateLayer = (curLayerIndex, leftX, rightX, rightStart,\r\n  intermediateGap, d, i, intermediateNodeMouseOverHandler,\r\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked) => {\r\n  \r\n  // curRightX = rightStart;\r\n\r\n  // Add the intermediate layer\r\n  let intermediateLayer = svg.append('g')\r\n    .attr('class', 'intermediate-layer')\r\n    .style('opacity', 0);\r\n  \r\n  // Recovert the animation counter\r\n  isEndOfAnimation = false;\r\n  \r\n  // Tried to add a rectangle to block the intermediate because of webkit's\r\n  // horrible support (decade old bug) for foreignObject. It doesnt work either.\r\n  // https://bugs.webkit.org/show_bug.cgi?id=23113\r\n  // (1). ForeignObject's inside position is wrong on webkit\r\n  // (2). 'opacity' of ForeignObject doesn't work on webkit\r\n  // (3). ForeignObject always show up at the front regardless the svg\r\n  //      stacking order on webkit\r\n\r\n  let intermediateX1 = leftX + nodeLength + intermediateGap;\r\n  let intermediateX2 = intermediateX1 + nodeLength + intermediateGap * 1.5;\r\n\r\n  let range = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\r\n  let colorScale = layerColorScales[d.type];\r\n  let intermediateMinMax = [];\r\n  \r\n  // Copy the previsious layer to construct foreignObject placeholder\r\n  // Also add edges from/to the intermediate layer in this loop\r\n  let linkData = [];\r\n\r\n  // Accumulate the intermediate sum\r\n  // let itnermediateSumMatrix = init2DArray(d.output.length,\r\n  //  d.output.length, 0);\r\n\r\n  // Compute the min max of all kernel weights in the intermediate layer\r\n  let kernelExtents = d.inputLinks.map(link => getExtent(link.weight));\r\n  let kernelExtent = kernelExtents.reduce((acc, cur) => {\r\n    return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\r\n  })\r\n  let kernelRange = 2 * (Math.round(\r\n    Math.max(...kernelExtent.map(Math.abs)) * 1000) / 1000);\r\n  let kernelColorGap = 0.2;\r\n\r\n  // Compute stride for the kernel animation\r\n  let stride = kernelRectLength * 3; \r\n\r\n  // Also add the overlay mask on the output node\r\n  let outputY = nodeCoordinate[curLayerIndex][i].y;\r\n  let curNode = svg.select(`#layer-${curLayerIndex}-node-${i}`);\r\n  let outputOverlayGroup = curNode.append('g')\r\n    .attr('class', 'overlay-group')\r\n    .attr('transform', `translate(${rightX}, ${outputY})`);\r\n\r\n  let strideTime = Math.floor(nodeLength / stride);\r\n  \r\n  for (let i = 0; i < strideTime; i++) {\r\n    for (let j = 0; j < strideTime; j++) {\r\n      outputOverlayGroup.append('rect')\r\n        .attr('class', `mask-overlay mask-${i}-${j}`)\r\n        .attr('width', stride)\r\n        .attr('height', stride)\r\n        .attr('x', i * stride)\r\n        .attr('y', j * stride)\r\n        .style('fill', 'var(--light-gray)')\r\n        .style('stroke', 'var(--light-gray)')\r\n        .style('opacity', 1);\r\n    }\r\n  }\r\n\r\n  // Make sure the bounding box is on top of other things\r\n  curNode.select('rect.bounding').raise();\r\n\r\n  // Add sliding kernel for the output node\r\n  let kernelGroup = intermediateLayer.append('g')\r\n    .attr('class', `kernel kernel-output kernel-clone`)\r\n    .attr('transform', `translate(${rightX}, ${outputY})`);\r\n\r\n  kernelGroup.append('rect')\r\n    .attr('x', 0)\r\n    .attr('y', 0)\r\n    .attr('width', kernelRectLength * 3)\r\n    .attr('height', kernelRectLength * 3)\r\n    .attr('fill', 'none')\r\n    .attr('stroke', intermediateColor);\r\n  \r\n  kernelGroup.attr('data-tick', 0)\r\n    .attr('data-origin-x', rightX)\r\n    .attr('data-origin-y', outputY);\r\n\r\n  let delay = 200;\r\n  let tickTime1D = nodeLength / (kernelRectLength * 3);\r\n\r\n  startOutputAnimation(kernelGroup, tickTime1D, stride, delay, curLayerIndex);\r\n\r\n  // First intermediate layer\r\n  nodeCoordinate[curLayerIndex - 1].forEach((n, ni) => {\r\n\r\n    // Compute the intermediate value\r\n    let inputMatrix = cnn[curLayerIndex - 1][ni].output;\r\n    let kernelMatrix = cnn[curLayerIndex][i].inputLinks[ni].weight;\r\n    let interMatrix = singleConv(inputMatrix, kernelMatrix);\r\n\r\n    // Compute the intermediate layer min max\r\n    intermediateMinMax.push(getExtent(interMatrix));\r\n\r\n    // Update the intermediate sum\r\n    // itnermediateSumMatrix = matrixAdd(itnermediateSumMatrix, interMatrix);\r\n\r\n    // Layout the canvas and rect\r\n    let newNode = createIntermediateNode(curLayerIndex, i, intermediateLayer,\r\n      intermediateX1, n.y, ni, stride, intermediateNodeMouseOverHandler,\r\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked, true);\r\n    \r\n    // Draw the image\r\n    let image = newNode.select('image');\r\n    drawIntermidiateImage(image, range, colorScale, d.output.length,\r\n      interMatrix);      \r\n\r\n    // Edge: input -> intermediate1\r\n    linkData.push({\r\n      source: getOutputKnot({x: leftX, y: n.y}),\r\n      target: getInputKnot({x: intermediateX1, y: n.y}),\r\n      name: `input-${ni}-inter1-${ni}`\r\n    });\r\n\r\n    // Edge: intermediate1 -> intermediate2-1\r\n    linkData.push({\r\n      source: getOutputKnot({x: intermediateX1, y: n.y}),\r\n      target: getInputKnot({x: intermediateX2,\r\n        y: nodeCoordinate[curLayerIndex][i].y}),\r\n      name: `inter1-${ni}-inter2-1`\r\n    });\r\n\r\n    // Create a small kernel illustration\r\n    // Here we minus 2 because of no padding\r\n    // let tickTime1D = nodeLength / (kernelRectLength) - 2;\r\n    let kernelRectX = leftX - kernelRectLength * 3 * 2;\r\n    let kernelGroup = intermediateLayer.append('g')\r\n      .attr('class', `kernel kernel-${ni}`)\r\n      .attr('transform', `translate(${kernelRectX}, ${n.y})`);\r\n\r\n    let weightText = 'Kernel weights: [';\r\n    let f2 = d3.format('.2f');\r\n    for (let r = 0; r < kernelMatrix.length; r++) {\r\n      for (let c = 0; c < kernelMatrix[0].length; c++) {\r\n        kernelGroup.append('rect')\r\n          .attr('class', 'kernel')\r\n          .attr('x', kernelRectLength * c)\r\n          .attr('y', kernelRectLength * r)\r\n          .attr('width', kernelRectLength)\r\n          .attr('height', kernelRectLength)\r\n          .attr('fill', gappedColorScale(layerColorScales.weight, kernelRange,\r\n            kernelMatrix[r][c], kernelColorGap));\r\n\r\n        let sep = '';\r\n        if (c === 0 && r == 0) { sep = ''; }\r\n        else if (c === 0) { sep = '; '; }\r\n        else { sep = ', '; }\r\n        weightText = weightText.concat(sep, `${f2(kernelMatrix[r][c])}`);\r\n      }\r\n    }\r\n    weightText = weightText.concat(']');\r\n\r\n    kernelGroup.append('rect')\r\n      .attr('x', 0)\r\n      .attr('y', 0)\r\n      .attr('width', kernelRectLength * 3)\r\n      .attr('height', kernelRectLength * 3)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', intermediateColor);\r\n    \r\n    kernelGroup.style('pointer-events', 'all')\r\n      .style('cursor', 'crosshair')\r\n      .on('mouseover', () => {\r\n        hoverInfoStore.set( {show: true, text: weightText} );\r\n      })\r\n      .on('mouseleave', () => {\r\n        hoverInfoStore.set( {show: false, text: weightText} );\r\n      })\r\n      .on('click', () => {d3.event.stopPropagation()});\r\n\r\n    // Sliding the kernel on the input channel and result channel at the same\r\n    // time\r\n    let kernelGroupInput = kernelGroup.clone(true)\r\n      .style('pointer-events', 'none')\r\n      .style('cursor', 'pointer')\r\n      .classed('kernel-clone', true)\r\n      .classed(`kernel-input-${ni}`, true);\r\n\r\n    kernelGroupInput.style('opacity', 0.9)\r\n      .selectAll('rect.kernel')\r\n      .style('opacity', 0.7);\r\n\r\n    kernelGroupInput.attr('transform', `translate(${leftX}, ${n.y})`)\r\n      .attr('data-tick', 0)\r\n      .attr('data-origin-x', leftX)\r\n      .attr('data-origin-y', n.y);\r\n\r\n    let kernelGroupResult = kernelGroup.clone(true)\r\n      .style('pointer-events', 'none')\r\n      .style('cursor', 'pointer')\r\n      .classed('kernel-clone', true)\r\n      .classed(`kernel-result-${ni}`, true);\r\n\r\n    kernelGroupResult.style('opacity', 0.9)\r\n      .selectAll('rect.kernel')\r\n      .style('fill', 'none');\r\n\r\n    kernelGroupResult.attr('transform',\r\n      `translate(${intermediateX1}, ${n.y})`)\r\n      .attr('data-origin-x', intermediateX1)\r\n      .attr('data-origin-y', n.y);\r\n    \r\n    startIntermediateAnimation(kernelGroupInput, kernelGroupResult, tickTime1D,\r\n      stride);\r\n  });\r\n\r\n  // Aggregate the intermediate min max\r\n  let aggregatedExtent = intermediateMinMax.reduce((acc, cur) => {\r\n    return [Math.min(acc[0], cur[0]), Math.max(acc[1], cur[1])];\r\n  })\r\n  let aggregatedMinMax = {min: aggregatedExtent[0], max: aggregatedExtent[1]};\r\n\r\n  // Draw the plus operation symbol\r\n  let symbolY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2;\r\n  let symbolRectHeight = 1;\r\n  let symbolGroup = intermediateLayer.append('g')\r\n    .attr('class', 'plus-symbol')\r\n    .attr('transform', `translate(${intermediateX2 + plusSymbolRadius}, ${symbolY})`);\r\n  \r\n  symbolGroup.append('rect')\r\n    .attr('x', -plusSymbolRadius)\r\n    .attr('y', -plusSymbolRadius)\r\n    .attr('width', 2 * plusSymbolRadius)\r\n    .attr('height', 2 * plusSymbolRadius)\r\n    .attr('rx', 3)\r\n    .attr('ry', 3)\r\n    .style('fill', 'none')\r\n    .style('stroke', intermediateColor);\r\n  \r\n  symbolGroup.append('rect')\r\n    .attr('x', -(plusSymbolRadius - 3))\r\n    .attr('y', -symbolRectHeight / 2)\r\n    .attr('width', 2 * (plusSymbolRadius - 3))\r\n    .attr('height', symbolRectHeight)\r\n    .style('fill', intermediateColor);\r\n\r\n  symbolGroup.append('rect')\r\n    .attr('x', -symbolRectHeight / 2)\r\n    .attr('y', -(plusSymbolRadius - 3))\r\n    .attr('width', symbolRectHeight)\r\n    .attr('height', 2 * (plusSymbolRadius - 3))\r\n    .style('fill', intermediateColor);\r\n\r\n  // Place the bias rectangle below the plus sign if user clicks the firrst\r\n  // conv node\r\n  if (i == 0) {\r\n    // Add bias symbol to the plus symbol\r\n    symbolGroup.append('circle')\r\n        .attr('cx', 0)\r\n        .attr('cy', nodeLength / 2 + kernelRectLength)\r\n        .attr('r', 4)\r\n        .style('stroke', intermediateColor)\r\n        .style('cursor', 'crosshair')\r\n        .style('fill', gappedColorScale(layerColorScales.weight, kernelRange,\r\n          d.bias, kernelColorGap))\r\n        .on('mouseover', () => {\r\n          hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\r\n        })\r\n        .on('mouseleave', () => {\r\n          hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\r\n        });\r\n\r\n    // Link from bias to the plus symbol\r\n    linkData.push({\r\n      source: {x: intermediateX2 + plusSymbolRadius,\r\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength},\r\n      target: {x: intermediateX2 + plusSymbolRadius,\r\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 + plusSymbolRadius},\r\n      name: `bias-plus`\r\n    });\r\n  } else {\r\n    // Add bias symbol to the plus symbol\r\n    symbolGroup.append('circle')\r\n      .attr('cx', 0)\r\n      .attr('cy', -nodeLength / 2 - kernelRectLength)\r\n      .attr('r', 4)\r\n      .style('stroke', intermediateColor)\r\n      .style('cursor', 'crosshair')\r\n      .style('fill', gappedColorScale(layerColorScales.weight, kernelRange,\r\n        d.bias, kernelColorGap))\r\n      .on('mouseover', () => {\r\n        hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\r\n      })\r\n      .on('mouseleave', () => {\r\n        hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\r\n      });\r\n    \r\n    // Link from bias to the plus symbol\r\n    linkData.push({\r\n      source: {x: intermediateX2 + plusSymbolRadius,\r\n        y: nodeCoordinate[curLayerIndex][i].y},\r\n      target: {x: intermediateX2 + plusSymbolRadius,\r\n        y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 - plusSymbolRadius},\r\n      name: `bias-plus`\r\n    });\r\n  }\r\n\r\n  // Link from the plus symbol to the output\r\n  linkData.push({\r\n    source: getOutputKnot({x: intermediateX2 + 2 * plusSymbolRadius - nodeLength,\r\n      y: nodeCoordinate[curLayerIndex][i].y}),\r\n    target: getInputKnot({x: rightX,\r\n      y: nodeCoordinate[curLayerIndex][i].y}),\r\n    name: `symbol-output`\r\n  });\r\n  \r\n  // Output -> next layer\r\n  linkData.push({\r\n    source: getOutputKnot({x: rightX,\r\n      y: nodeCoordinate[curLayerIndex][i].y}),\r\n    target: getInputKnot({x: rightStart,\r\n      y: nodeCoordinate[curLayerIndex][i].y}),\r\n    name: `output-next`\r\n  });\r\n\r\n  // Draw the layer label\r\n  intermediateLayer.append('g')\r\n    .attr('class', 'layer-intermediate-label layer-label')\r\n    .attr('transform', () => {\r\n      let x = intermediateX1 + nodeLength / 2;\r\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\r\n      return `translate(${x}, ${y})`;\r\n    })\r\n    .classed('hidden', detailedMode)\r\n    .append('text')\r\n    .style('text-anchor', 'middle')\r\n    .style('dominant-baseline', 'middle')\r\n    .style('font-weight', 800)\r\n    .style('opacity', '0.8')\r\n    .text('intermediate');\r\n  \r\n  intermediateLayer.append('g')\r\n    .attr('class', 'animation-control')\r\n    .attr('transform', () => {\r\n      let x = intermediateX1 + nodeLength / 2;\r\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 4;\r\n      return `translate(${x}, ${y})`;\r\n    })\r\n    .on('click', () => animationButtonClicked(curLayerIndex))\r\n    .append('image')\r\n    .attr('class', 'animation-control-button')\r\n    .attr('xlink:href', 'PUBLIC_URL/assets/img/fast_forward.svg')\r\n    .attr('x', 50)\r\n    .attr('y', 0)\r\n    .attr('height', 13)\r\n    .attr('width', 13);\r\n\r\n  // Draw the detailed model layer label\r\n  intermediateLayer.append('g')\r\n    .attr('class', 'layer-intermediate-label layer-detailed-label')\r\n    .attr('transform', () => {\r\n      let x = intermediateX1 + nodeLength / 2;\r\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\r\n      return `translate(${x}, ${y})`;\r\n    })\r\n    .classed('hidden', !detailedMode)\r\n    .append('text')\r\n    .style('text-anchor', 'middle')\r\n    .style('dominant-baseline', 'middle')\r\n    .style('opacity', '0.7')\r\n    .style('font-weight', 800)\r\n    .append('tspan')\r\n    .text('intermediate')\r\n    .append('tspan')\r\n    .style('font-size', '8px')\r\n    .style('font-weight', 'normal')\r\n    .attr('x', 0)\r\n    .attr('dy', '1.5em')\r\n    .text(`(${cnn[curLayerIndex][0].output.length},\r\n      ${cnn[curLayerIndex][0].output[0].length},\r\n      ${cnn[curLayerIndex].length})`);\r\n\r\n  // Draw the edges\r\n  let linkGen = d3.linkHorizontal()\r\n    .x(d => d.x)\r\n    .y(d => d.y);\r\n  \r\n  let edgeGroup = intermediateLayer.append('g')\r\n    .attr('class', 'edge-group')\r\n    .lower();\r\n  \r\n  let dashoffset = 0;\r\n\r\n  edgeGroup.selectAll('path')\r\n    .data(linkData)\r\n    .enter()\r\n    .append('path')\r\n    .classed('flow-edge', d => d.name !== 'output-next')\r\n    .attr('id', d => `edge-${d.name}`)\r\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\r\n    .style('fill', 'none')\r\n    .style('stroke-width', 1)\r\n    .style('stroke', intermediateColor);\r\n\r\n  edgeGroup.select('#edge-output-next')\r\n    .style('opacity', 0.1);\r\n  \r\n  edgeGroup.selectAll('path.flow-edge')\r\n    .attr('stroke-dasharray', '4 2')\r\n    .attr('stroke-dashoffset', 0)\r\n    .each((d, i, g) => animateEdge(d, i, g, dashoffset - 1000));\r\n  \r\n  return {intermediateLayer: intermediateLayer,\r\n    intermediateMinMax: aggregatedMinMax,\r\n    kernelRange: kernelRange,\r\n    kernelMinMax: {min: kernelExtent[0], max: kernelExtent[1]}};\r\n}\r\n\r\n/**\r\n * Add an annotation for the kernel and the sliding\r\n * @param {object} arg \r\n * {\r\n *  leftX: X value of the left border of intermedaite layer\r\n *  group: element group\r\n *  intermediateGap: the inner gap of intermediate layer\r\n *  isFirstConv: if this intermediate layer is after the first layer\r\n *  i: index of the selected node\r\n * }\r\n */\r\nconst drawIntermediateLayerAnnotation = (arg) => {\r\n  let leftX = arg.leftX,\r\n    curLayerIndex = arg.curLayerIndex,\r\n    group = arg.group,\r\n    intermediateGap = arg.intermediateGap,\r\n    isFirstConv = arg.isFirstConv,\r\n    i = arg.i;\r\n\r\n  let kernelAnnotation = group.append('g')\r\n    .attr('class', 'kernel-annotation');\r\n  \r\n  kernelAnnotation.append('text')\r\n    .text('Kernel')\r\n    .attr('class', 'annotation-text')\r\n    .attr('x', leftX - 2.5 * kernelRectLength * 3)\r\n    .attr('y', nodeCoordinate[curLayerIndex - 1][0].y + kernelRectLength * 3)\r\n    .style('dominant-baseline', 'baseline')\r\n    .style('text-anchor', 'end');\r\n\r\n  let sliderX, sliderY, arrowSX, arrowSY, dr;\r\n  let sliderX2, sliderY2, arrowSX2, arrowSY2, dr2, arrowTX2, arrowTY2;\r\n  \r\n  if (isFirstConv) {\r\n    sliderX = leftX;\r\n    sliderY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength +\r\n      kernelRectLength * 3;\r\n    arrowSX = leftX - 5;\r\n    arrowSY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength +\r\n      kernelRectLength * 3 + 5;\r\n    dr = 20;\r\n\r\n    sliderX2 = leftX;\r\n      sliderY2 = nodeCoordinate[curLayerIndex - 1][1].y + nodeLength +\r\n    kernelRectLength * 3;\r\n    arrowSX2 = leftX - kernelRectLength * 3;\r\n    arrowSY2 = nodeCoordinate[curLayerIndex - 1][1].y + nodeLength + 15;\r\n    arrowTX2 = leftX - 13;\r\n    arrowTY2 =  nodeCoordinate[curLayerIndex - 1][1].y + 15;\r\n    dr2 = 35;\r\n  } else {\r\n    sliderX = leftX - 3 * kernelRectLength * 3;\r\n    sliderY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 3;\r\n    arrowSX = leftX - 2 * kernelRectLength * 3 - 5;\r\n    arrowSY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength - 10;\r\n    dr = 50;\r\n\r\n    sliderX2 = leftX - 3 * kernelRectLength * 3;\r\n    sliderY2 = nodeCoordinate[curLayerIndex - 1][2].y - 3;\r\n    arrowTX2 = leftX - kernelRectLength * 3 - 4;\r\n    arrowTY2 = nodeCoordinate[curLayerIndex - 1][2].y + kernelRectLength * 3 + 6;\r\n    arrowSX2 = leftX - kernelRectLength * 3 - 13;\r\n    arrowSY2 = nodeCoordinate[curLayerIndex - 1][2].y + 26;\r\n    dr2 = 20;\r\n  }\r\n\r\n  let slideText = kernelAnnotation.append('text')\r\n    .attr('x', sliderX)\r\n    .attr('y', sliderY)\r\n    .attr('class', 'annotation-text')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('text-anchor', isFirstConv ? 'start' : 'end');\r\n  \r\n  slideText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('Slide kernel over input channel');\r\n\r\n  slideText.append('tspan')\r\n    .attr('x', sliderX)\r\n    .attr('dy', '1em')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('to get intermediate result');\r\n\r\n  // slideText.append('tspan')\r\n  //   .attr('x', sliderX)\r\n  //   .attr('dy', '1em')\r\n  //   .style('dominant-baseline', 'hanging')\r\n  //   .text('');\r\n\r\n  slideText.append('tspan')\r\n    .attr('x', sliderX)\r\n    .attr('dy', '1.2em')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('font-weight', 700)\r\n    .text('Click ');\r\n  \r\n  slideText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('font-weight', 400)\r\n    .text('to learn more')\r\n\r\n  drawArrow({\r\n    group: group,\r\n    tx: leftX - 7,\r\n    ty: nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 2,\r\n    sx: arrowSX,\r\n    sy: arrowSY,\r\n    hFlip: !isFirstConv,\r\n    dr: dr,\r\n    marker: 'marker'\r\n  });\r\n\r\n  // Add kernel annotation\r\n  let slideText2 = kernelAnnotation.append('text')\r\n    .attr('x', sliderX2)\r\n    .attr('y', sliderY2)\r\n    .attr('class', 'annotation-text')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('text-anchor', isFirstConv ? 'start' : 'end');\r\n\r\n  slideText2.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('Each input chanel');\r\n\r\n  slideText2.append('tspan')\r\n    .attr('x', sliderX)\r\n    .attr('dy', '1em')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('gets a different kernel');\r\n\r\n  slideText2.append('tspan')\r\n    .attr('x', sliderX)\r\n    .attr('dy', '1.3em')\r\n    .style('font-weight', 700)\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('Hover over ');\r\n\r\n  slideText2.append('tspan')\r\n    .style('font-weight', 400)\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('to see value!')\r\n\r\n  drawArrow({\r\n    group: group,\r\n    tx: arrowTX2,\r\n    ty: arrowTY2,\r\n    sx: arrowSX2,\r\n    sy: arrowSY2,\r\n    dr: dr2,\r\n    hFlip: !isFirstConv,\r\n    marker: 'marker'\r\n  });\r\n\r\n\r\n  // Add annotation for the sum operation\r\n  let plusAnnotation = group.append('g')\r\n    .attr('class', 'plus-annotation');\r\n  \r\n  let intermediateX2 = leftX + 2 * nodeLength + 2.5 * intermediateGap;\r\n  let textX = intermediateX2;\r\n  let textY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\r\n      kernelRectLength * 3;\r\n  \r\n  // Special case 1: first node\r\n  if (i === 0) { textX += 30; }\r\n\r\n  // Special case 2: last node \r\n  if (i === 9) {\r\n    textX = intermediateX2 + plusSymbolRadius - 10;\r\n    textY -= 2.5 * nodeLength;\r\n  }\r\n\r\n  let plusText = plusAnnotation.append('text')\r\n    .attr('x', textX)\r\n    .attr('y', textY)\r\n    .attr('class', 'annotation-text')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('text-anchor', 'start');\r\n  \r\n  plusText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('Add up all intermediate');\r\n  \r\n  plusText.append('tspan')\r\n    .attr('x', textX)\r\n    .attr('dy', '1em')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('results and then add bias');\r\n  \r\n  if (i === 9) {\r\n    drawArrow({\r\n      group: group,\r\n      sx: intermediateX2 + 50,\r\n      sy: nodeCoordinate[curLayerIndex][i].y - (nodeLength / 2 + kernelRectLength * 2),\r\n      tx: intermediateX2 + 2 * plusSymbolRadius + 5,\r\n      ty: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 - plusSymbolRadius,\r\n      dr: 50,\r\n      hFlip: false,\r\n      marker: 'marker-alt'\r\n    });\r\n  } else {\r\n    drawArrow({\r\n      group: group,\r\n      sx: intermediateX2 + 35,\r\n      sy: nodeCoordinate[curLayerIndex][i].y + nodeLength + kernelRectLength * 2,\r\n      tx: intermediateX2 + 2 * plusSymbolRadius + 5,\r\n      ty: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 + plusSymbolRadius,\r\n      dr: 30,\r\n      hFlip: true,\r\n      marker: 'marker-alt'\r\n    });\r\n  }\r\n\r\n  // Add annotation for the bias\r\n  let biasTextY = nodeCoordinate[curLayerIndex][i].y;\r\n  if (i === 0) {\r\n    biasTextY += nodeLength + 3 * kernelRectLength;\r\n  } else {\r\n    biasTextY -= 2 * kernelRectLength + 5;\r\n  }\r\n  plusAnnotation.append('text')\r\n    .attr('class', 'annotation-text')\r\n    .attr('x', intermediateX2 + plusSymbolRadius)\r\n    .attr('y', biasTextY)\r\n    .style('text-anchor', 'middle')\r\n    .style('dominant-baseline', i === 0 ? 'hanging' : 'baseline')\r\n    .text('Bias');\r\n}\r\n\r\n/**\r\n * Append a filled rectangle under a pair of nodes.\r\n * @param {number} curLayerIndex Index of the selected layer\r\n * @param {number} i Index of the selected node\r\n * @param {number} leftX X value of the left border of intermediate layer\r\n * @param {number} intermediateGap Inner gap of this intermediate layer\r\n * @param {number} padding Padding around the rect\r\n * @param {function} intermediateNodeMouseOverHandler Mouse over handler\r\n * @param {function} intermediateNodeMouseLeaveHandler Mouse leave handler\r\n * @param {function} intermediateNodeClicked Mouse click handler\r\n */\r\nconst addUnderneathRect = (curLayerIndex, i, leftX,\r\n  intermediateGap, padding, intermediateNodeMouseOverHandler,\r\n  intermediateNodeMouseLeaveHandler, intermediateNodeClicked) => {\r\n  // Add underneath rects\r\n  let underGroup = svg.select('g.underneath');\r\n\r\n  for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\r\n    underGroup.append('rect')\r\n      .attr('class', 'underneath-gateway')\r\n      .attr('id', `underneath-gateway-${n}`)\r\n      .attr('x', leftX - padding)\r\n      .attr('y', nodeCoordinate[curLayerIndex - 1][n].y - padding)\r\n      .attr('width', (2 * nodeLength + intermediateGap) + 2 * padding)\r\n      .attr('height', nodeLength + 2 * padding)\r\n      .attr('rx', 10)\r\n      .style('fill', 'rgba(160, 160, 160, 0.2)')\r\n      .style('opacity', 0);\r\n    \r\n    // Register new events for input layer nodes\r\n    svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\r\n      .style('pointer-events', 'all')\r\n      .style('cursor', 'pointer')\r\n      .on('mouseover', intermediateNodeMouseOverHandler)\r\n      .on('mouseleave', intermediateNodeMouseLeaveHandler)\r\n      .on('click', (d, ni, g) => intermediateNodeClicked(d, ni, g,\r\n        i, curLayerIndex));\r\n      // .on('click', (d, i) => {console.log(i)});\r\n  }\r\n  underGroup.lower();\r\n}\r\n\r\n/**\r\n * Add an overlaying rect\r\n * @param {string} gradientName Gradient name of overlay rect\r\n * @param {number} x X value of the overlaying rect\r\n * @param {number} y Y value of the overlaying rect\r\n * @param {number} width Rect width\r\n * @param {number} height Rect height\r\n */\r\nexport const addOverlayRect = (gradientName, x, y, width, height) => {\r\n  if (svg.select('.intermediate-layer-overlay').empty()) {\r\n    svg.append('g').attr('class', 'intermediate-layer-overlay');\r\n  }\r\n\r\n  let intermediateLayerOverlay = svg.select('.intermediate-layer-overlay');\r\n\r\n  let overlayRect = intermediateLayerOverlay.append('rect')\r\n    .attr('class', 'overlay')\r\n    .style('fill', `url(#${gradientName})`)\r\n    .style('stroke', 'none')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n    .attr('x', x)\r\n    .attr('y', y)\r\n    .style('opacity', 0);\r\n  \r\n  overlayRect.transition('move')\r\n    .duration(800)\r\n    .ease(d3.easeCubicInOut)\r\n    .style('opacity', 1);\r\n}\r\n\r\n/**\r\n * Redraw the layer if needed (entering the intermediate view to make sure\r\n * all layers have the same color scale)\r\n * @param {number} curLayerIndex Index of the selected layer\r\n * @param {number} i Index of the selected node\r\n */\r\nconst redrawLayerIfNeeded = (curLayerIndex, i) => {\r\n  // Determine the range for this layerview, and redraw the layer with\r\n  // smaller range so all layers have the same range\r\n  let rangePre = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\r\n  let rangeCur = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\r\n  let range = Math.max(rangePre, rangeCur);\r\n\r\n  if (rangePre > rangeCur) {\r\n    // Redraw the current layer (selected node)\r\n    svg.select(`g#layer-${curLayerIndex}-node-${i}`)\r\n      .select('image.node-image')\r\n      .each((d, g, i) => drawOutput(d, g, i, range));\r\n    \r\n    // Record the change so we will re-redraw the layer when user quits\r\n    // the intermediate view\r\n    needRedraw = [curLayerIndex, i];\r\n    needRedrawStore.set(needRedraw);\r\n    \r\n  } else if (rangePre < rangeCur) {\r\n    // Redraw the previous layer (whole layer)\r\n    svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\r\n      .selectAll('image.node-image')\r\n      .each((d, g, i) => drawOutput(d, g, i, range));\r\n\r\n    // Record the change so we will re-redraw the layer when user quits\r\n    // the intermediate view\r\n    needRedraw = [curLayerIndex - 1, undefined];\r\n    needRedrawStore.set(needRedraw);\r\n  }\r\n\r\n  // Compute the min, max value of all nodes in pre-layer and the selected\r\n  // node of cur-layer\r\n  let min = cnnLayerMinMax[curLayerIndex - 1].min,\r\n    max = cnnLayerMinMax[curLayerIndex - 1].max;\r\n\r\n  // Selected node\r\n  let n = cnn[curLayerIndex][i];\r\n  for (let r = 0; r < n.output.length; r++) {\r\n    for (let c = 0; c < n.output[0].length; c++) {\r\n      if (n.output[r][c] < min) { min = n.output[r][c]; }\r\n      if (n.output[r][c] > max) { max = n.output[r][c]; }\r\n    }\r\n  }\r\n\r\n  return {range: range, minMax: {min: min, max: max}};\r\n}\r\n\r\n/**\r\n * Draw the intermediate layer before conv_1_1\r\n * @param {number} curLayerIndex Index of the selected layer\r\n * @param {object} d Bounded d3 data\r\n * @param {number} i Index of the selected node\r\n * @param {number} width CNN group width\r\n * @param {number} height CNN group height\r\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\r\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\r\n * @param {function} intermediateNodeClicked node clicking handler\r\n */\r\nexport const drawConv1 = (curLayerIndex, d, i, width, height,\r\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n  intermediateNodeClicked) => {\r\n  // Compute the target location\r\n  let targetX = nodeCoordinate[curLayerIndex - 1][0].x + 2 * nodeLength +\r\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2;\r\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\r\n  let leftX = nodeCoordinate[curLayerIndex - 1][0].x;\r\n\r\n  // Record the left x position for dynamic detial view positioning\r\n  intermediateLayerPosition['conv_1_1'] = targetX + nodeLength;\r\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\r\n\r\n  // Hide the edges\r\n  svg.select('g.edge-group')\r\n    .style('visibility', 'hidden');\r\n\r\n  // Move the selected layer\r\n  moveLayerX({layerIndex: curLayerIndex, targetX: targetX, disable: true,\r\n    delay: 0, opacity: 0.15, specialIndex: i});\r\n\r\n  // Compute the gap in the right shrink region\r\n  let rightStart = targetX + nodeLength + hSpaceAroundGap * gapRatio;\r\n  let rightGap = (width - rightStart - 10 * nodeLength) / 10;\r\n\r\n  // Move the right layers\r\n  for (let i = curLayerIndex + 1; i < numLayers; i++) {\r\n    let curX = rightStart + (i - (curLayerIndex + 1)) * (nodeLength + rightGap);\r\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\r\n  }\r\n\r\n  // Add an overlay gradient and rect\r\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\r\n  {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\r\n  {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\r\n  addOverlayGradient('overlay-gradient', stops);\r\n\r\n  addOverlayRect('overlay-gradient', rightStart - overlayRectOffset / 2,\r\n  0, width - rightStart + overlayRectOffset,\r\n  height + svgPaddings.top + svgPaddings.bottom);\r\n\r\n  // Draw the intermediate layer\r\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\r\n  drawIntermediateLayer(curLayerIndex, leftX, targetX, rightStart,\r\n    intermediateGap, d, i, intermediateNodeMouseOverHandler,\r\n    intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\r\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 8,\r\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n    intermediateNodeClicked);\r\n\r\n  // Compute the selected node's min max\r\n  // Selected node\r\n  let min = Infinity, max = -Infinity;\r\n  let n = cnn[curLayerIndex][i];\r\n  for (let r = 0; r < n.output.length; r++) {\r\n  for (let c = 0; c < n.output[0].length; c++) {\r\n    if (n.output[r][c] < min) { min = n.output[r][c]; }\r\n    if (n.output[r][c] > max) { max = n.output[r][c]; }\r\n  }\r\n  }\r\n\r\n  let finalMinMax = {\r\n  min: Math.min(min, intermediateMinMax.min),\r\n  max: Math.max(max, intermediateMinMax.max)\r\n  }\r\n\r\n  // Add annotation to the intermediate layer\r\n  let intermediateLayerAnnotation = svg.append('g')\r\n  .attr('class', 'intermediate-layer-annotation')\r\n  .style('opacity', 0);\r\n\r\n  drawIntermediateLayerAnnotation({\r\n    leftX: leftX,\r\n    curLayerIndex: curLayerIndex,\r\n    group: intermediateLayerAnnotation,\r\n    intermediateGap: intermediateGap,\r\n    isFirstConv: true,\r\n    i: i\r\n  });\r\n\r\n  let range = cnnLayerRanges.local[curLayerIndex];\r\n\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: 1,\r\n    group: intermediateLayer,\r\n    width: 2 * nodeLength + intermediateGap,\r\n    isInput: true,\r\n    x: leftX,\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10 - 25\r\n  });\r\n\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: range,\r\n    minMax: finalMinMax,\r\n    group: intermediateLayer,\r\n    width: 2 * nodeLength + intermediateGap,\r\n    x: nodeCoordinate[curLayerIndex - 1][2].x,\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10\r\n  });\r\n\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: kernelRange,\r\n    minMax: kernelMinMax,\r\n    group: intermediateLayer,\r\n    width: 2 * nodeLength + intermediateGap,\r\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10,\r\n    gradientAppendingName: 'kernelColorGradient',\r\n    colorScale: layerColorScales.weight,\r\n    gradientGap: 0.2\r\n  });\r\n\r\n  // Show everything\r\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\r\n    .transition()\r\n    .delay(500)\r\n    .duration(500)\r\n    .ease(d3.easeCubicInOut)\r\n    .style('opacity', 1);\r\n}\r\n\r\n/**\r\n * Draw the intermediate layer before conv_1_2\r\n * @param {number} curLayerIndex Index of the selected layer\r\n * @param {object} d Bounded d3 data\r\n * @param {number} i Index of the selected node\r\n * @param {number} width CNN group width\r\n * @param {number} height CNN group height\r\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\r\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\r\n * @param {function} intermediateNodeClicked node clicking handler\r\n */\r\nexport const drawConv2 = (curLayerIndex, d, i, width, height,\r\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n  intermediateNodeClicked) => {\r\n  let targetX = nodeCoordinate[curLayerIndex - 1][0].x + 2 * nodeLength +\r\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2;\r\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\r\n\r\n  // Record the left x position for dynamic detial view positioning\r\n  intermediateLayerPosition['conv_1_2'] = targetX + nodeLength;\r\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\r\n\r\n  // Make sure two layers have the same range\r\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\r\n\r\n  // Hide the edges\r\n  svg.select('g.edge-group')\r\n    .style('visibility', 'hidden');\r\n\r\n  // Move the selected layer\r\n  moveLayerX({layerIndex: curLayerIndex, targetX: targetX, disable: true,\r\n    delay: 0, opacity: 0.15, specialIndex: i});\r\n\r\n  // Compute the gap in the right shrink region\r\n  let rightStart = targetX + nodeLength + hSpaceAroundGap * gapRatio;\r\n  let rightGap = (width - rightStart - 8 * nodeLength) / 8;\r\n\r\n  // Move the right layers\r\n  for (let i = curLayerIndex + 1; i < numLayers; i++) {\r\n    let curX = rightStart + (i - (curLayerIndex + 1)) * (nodeLength + rightGap);\r\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\r\n  }\r\n\r\n  // Add an overlay\r\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\r\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\r\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\r\n  addOverlayGradient('overlay-gradient-right', stops);\r\n\r\n  let leftRightRatio = (2 * nodeLength + hSpaceAroundGap * gapRatio) /\r\n    (8 * nodeLength + intermediateGap * 7);\r\n  let endingGradient = 0.85 + (0.95 - 0.85) * leftRightRatio;\r\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: endingGradient},\r\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\r\n  addOverlayGradient('overlay-gradient-left', stops);\r\n\r\n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\r\n    0, width - rightStart + overlayRectOffset,\r\n    height + svgPaddings.top + svgPaddings.bottom);\r\n\r\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\r\n    0, nodeLength * 2 + hSpaceAroundGap * gapRatio + overlayRectOffset,\r\n    height + svgPaddings.top + svgPaddings.bottom);\r\n\r\n  // Draw the intermediate layer\r\n  let leftX = nodeCoordinate[curLayerIndex - 1][0].x;\r\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\r\n    drawIntermediateLayer(curLayerIndex, leftX, targetX, rightStart,\r\n      intermediateGap, d, i, intermediateNodeMouseOverHandler,\r\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\r\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\r\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n    intermediateNodeClicked);\r\n\r\n  // After getting the intermediateMinMax, we can finally aggregate it with\r\n  // the preLayer minmax, curLayer minmax\r\n  let finalMinMax = {\r\n    min: Math.min(minMax.min, intermediateMinMax.min),\r\n    max: Math.max(minMax.max, intermediateMinMax.max)\r\n  }\r\n\r\n  // Add annotation to the intermediate layer\r\n  let intermediateLayerAnnotation = svg.append('g')\r\n    .attr('class', 'intermediate-layer-annotation')\r\n    .style('opacity', 0);\r\n\r\n  drawIntermediateLayerAnnotation({\r\n    leftX: leftX,\r\n    curLayerIndex: curLayerIndex,\r\n    group: intermediateLayerAnnotation,\r\n    intermediateGap: intermediateGap,\r\n    i: i\r\n  });\r\n\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: range,\r\n    minMax: finalMinMax,\r\n    group: intermediateLayer,\r\n    width: 2 * nodeLength + intermediateGap,\r\n    x: leftX,\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10\r\n  });\r\n\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: kernelRange,\r\n    minMax: kernelMinMax,\r\n    group: intermediateLayer,\r\n    width: 2 * nodeLength + intermediateGap,\r\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10,\r\n    gradientAppendingName: 'kernelColorGradient',\r\n    colorScale: layerColorScales.weight,\r\n    gradientGap: 0.2\r\n  });\r\n\r\n  // Show everything\r\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\r\n    .transition()\r\n    .delay(500)\r\n    .duration(500)\r\n    .ease(d3.easeCubicInOut)\r\n    .style('opacity', 1);\r\n}\r\n\r\n/**\r\n * Draw the intermediate layer before conv_2_1\r\n * @param {number} curLayerIndex Index of the selected layer\r\n * @param {object} d Bounded d3 data\r\n * @param {number} i Index of the selected node\r\n * @param {number} width CNN group width\r\n * @param {number} height CNN group height\r\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\r\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\r\n * @param {function} intermediateNodeClicked node clicking handler\r\n */\r\nexport const drawConv3 = (curLayerIndex, d, i, width, height,\r\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n  intermediateNodeClicked) => {\r\n\r\n  let targetX = nodeCoordinate[curLayerIndex][0].x;\r\n  let leftX = targetX - (2 * nodeLength +\r\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2);\r\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\r\n\r\n  // Record the left x position for dynamic detial view positioning\r\n  intermediateLayerPosition['conv_2_1'] = targetX + nodeLength;\r\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\r\n\r\n  // Hide the edges\r\n  svg.select('g.edge-group')\r\n    .style('visibility', 'hidden');\r\n\r\n  // Make sure two layers have the same range\r\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\r\n\r\n  // Move the previous layer\r\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\r\n    disable: true, delay: 0});\r\n\r\n  moveLayerX({layerIndex: curLayerIndex,\r\n    targetX: targetX, disable: true,\r\n    delay: 0, opacity: 0.15, specialIndex: i});\r\n\r\n  // Compute the gap in the left shrink region\r\n  let leftEnd = leftX - hSpaceAroundGap;\r\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 5 * nodeLength) / 5;\r\n  let rightStart = nodeCoordinate[curLayerIndex][0].x +\r\n    nodeLength + hSpaceAroundGap;\r\n\r\n  // Move the left layers\r\n  for (let i = 0; i < curLayerIndex - 1; i++) {\r\n    let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\r\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\r\n  }\r\n\r\n  // Add an overlay\r\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\r\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\r\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\r\n  addOverlayGradient('overlay-gradient-left', stops);\r\n\r\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\r\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\r\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\r\n  addOverlayGradient('overlay-gradient-right', stops);\r\n\r\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\r\n    0, leftEnd - nodeCoordinate[0][0].x + overlayRectOffset,\r\n    height + svgPaddings.top + svgPaddings.bottom);\r\n  \r\n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\r\n    0, width - rightStart + overlayRectOffset,\r\n    height + svgPaddings.top + svgPaddings.bottom);\r\n  \r\n  // Draw the intermediate layer\r\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\r\n    drawIntermediateLayer(curLayerIndex, leftX,\r\n      nodeCoordinate[curLayerIndex][0].x, rightStart, intermediateGap,\r\n      d, i, intermediateNodeMouseOverHandler,\r\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\r\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\r\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n    intermediateNodeClicked);\r\n          \r\n  // After getting the intermediateMinMax, we can finally aggregate it with\r\n  // the preLayer minmax, curLayer minmax\r\n  let finalMinMax = {\r\n    min: Math.min(minMax.min, intermediateMinMax.min),\r\n    max: Math.max(minMax.max, intermediateMinMax.max)\r\n  }\r\n\r\n  // Add annotation to the intermediate layer\r\n  let intermediateLayerAnnotation = svg.append('g')\r\n    .attr('class', 'intermediate-layer-annotation')\r\n    .style('opacity', 0);\r\n\r\n  drawIntermediateLayerAnnotation({\r\n    leftX: leftX,\r\n    curLayerIndex: curLayerIndex,\r\n    group: intermediateLayerAnnotation,\r\n    intermediateGap: intermediateGap,\r\n    i: i\r\n  });\r\n\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: range,\r\n    group: intermediateLayer,\r\n    width: 2 * nodeLength + intermediateGap,\r\n    minMax: finalMinMax,\r\n    x: leftX,\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10\r\n  });\r\n\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: kernelRange,\r\n    minMax: kernelMinMax,\r\n    group: intermediateLayer,\r\n    width: 2 * nodeLength + intermediateGap,\r\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10,\r\n    gradientAppendingName: 'kernelColorGradient',\r\n    colorScale: layerColorScales.weight,\r\n    gradientGap: 0.2\r\n  });\r\n\r\n  // Show everything\r\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\r\n    .transition()\r\n    .delay(500)\r\n    .duration(500)\r\n    .ease(d3.easeCubicInOut)\r\n    .style('opacity', 1);\r\n}\r\n\r\n/**\r\n * Draw the intermediate layer before conv_2_2\r\n * @param {number} curLayerIndex Index of the selected layer\r\n * @param {object} d Bounded d3 data\r\n * @param {number} i Index of the selected node\r\n * @param {number} width CNN group width\r\n * @param {number} height CNN group height\r\n * @param {function} intermediateNodeMouseOverHandler mouse over handler\r\n * @param {function} intermediateNodeMouseLeaveHandler mouse leave handler\r\n * @param {function} intermediateNodeClicked node clicking handler\r\n */\r\nexport const drawConv4 = (curLayerIndex, d, i, width, height,\r\n  intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n  intermediateNodeClicked) => {\r\n  let targetX = nodeCoordinate[curLayerIndex][0].x;\r\n  let leftX = targetX - (2 * nodeLength +\r\n    2 * hSpaceAroundGap * gapRatio + plusSymbolRadius * 2);\r\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 2) / 3;\r\n\r\n  // Record the left x position for dynamic detial view positioning\r\n  intermediateLayerPosition['conv_2_2'] = leftX;\r\n  intermediateLayerPositionStore.set(intermediateLayerPosition);\r\n\r\n  // Hide the edges\r\n  svg.select('g.edge-group')\r\n    .style('visibility', 'hidden');\r\n\r\n  // Make sure two layers have the same range\r\n  let {range, minMax} = redrawLayerIfNeeded(curLayerIndex, i);\r\n\r\n  // Move the previous layer\r\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\r\n    disable: true, delay: 0});\r\n\r\n  moveLayerX({layerIndex: curLayerIndex,\r\n    targetX: targetX, disable: true,\r\n    delay: 0, opacity: 0.15, specialIndex: i});\r\n\r\n  // Compute the gap in the left shrink region\r\n  let leftEnd = leftX - hSpaceAroundGap;\r\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 7 * nodeLength) / 7;\r\n  let rightStart = targetX + nodeLength + hSpaceAroundGap;\r\n\r\n  // Move the left layers\r\n  for (let i = 0; i < curLayerIndex - 1; i++) {\r\n    let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\r\n    moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\r\n  }\r\n\r\n  // Add an overlay\r\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\r\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\r\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\r\n  addOverlayGradient('overlay-gradient-left', stops);\r\n\r\n  stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\r\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\r\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\r\n  addOverlayGradient('overlay-gradient-right', stops);\r\n\r\n  addOverlayRect('overlay-gradient-left', nodeCoordinate[0][0].x - overlayRectOffset / 2,\r\n    0, leftEnd - nodeCoordinate[0][0].x + overlayRectOffset,\r\n    height + svgPaddings.top + svgPaddings.bottom);\r\n  \r\n  addOverlayRect('overlay-gradient-right', rightStart - overlayRectOffset / 2,\r\n    0, width - rightStart + overlayRectOffset,\r\n    height + svgPaddings.top + svgPaddings.bottom);\r\n  \r\n  // Draw the intermediate layer\r\n  let {intermediateLayer, intermediateMinMax, kernelRange, kernelMinMax} =\r\n    drawIntermediateLayer(curLayerIndex, leftX,\r\n      nodeCoordinate[curLayerIndex][0].x, rightStart, intermediateGap,\r\n      d, i, intermediateNodeMouseOverHandler,\r\n      intermediateNodeMouseLeaveHandler, intermediateNodeClicked);\r\n  addUnderneathRect(curLayerIndex, i, leftX, intermediateGap, 5,\r\n    intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n    intermediateNodeClicked);\r\n          \r\n  // After getting the intermediateMinMax, we can finally aggregate it with\r\n  // the preLayer minmax, curLayer minmax\r\n  let finalMinMax = {\r\n    min: Math.min(minMax.min, intermediateMinMax.min),\r\n    max: Math.max(minMax.max, intermediateMinMax.max)\r\n  }\r\n\r\n  // Add annotation to the intermediate layer\r\n  let intermediateLayerAnnotation = svg.append('g')\r\n    .attr('class', 'intermediate-layer-annotation')\r\n    .style('opacity', 0);\r\n\r\n  drawIntermediateLayerAnnotation({\r\n    leftX: leftX,\r\n    curLayerIndex: curLayerIndex,\r\n    group: intermediateLayerAnnotation,\r\n    intermediateGap: intermediateGap,\r\n    i: i\r\n  });\r\n\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: range,\r\n    group: intermediateLayer,\r\n    minMax: finalMinMax,\r\n    width: 2 * nodeLength + intermediateGap,\r\n    x: leftX,\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10\r\n  });\r\n\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: kernelRange,\r\n    minMax: kernelMinMax,\r\n    group: intermediateLayer,\r\n    width: 2 * nodeLength + intermediateGap,\r\n    x: targetX + nodeLength - (2 * nodeLength + intermediateGap),\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10,\r\n    gradientAppendingName: 'kernelColorGradient',\r\n    colorScale: layerColorScales.weight,\r\n    gradientGap: 0.2\r\n  });\r\n\r\n  // Show everything\r\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\r\n    .transition()\r\n    .delay(500)\r\n    .duration(500)\r\n    .ease(d3.easeCubicInOut)\r\n    .style('opacity', 1);\r\n}\r\n","/* global d3, SmoothScroll */\r\n\r\nimport {\r\n  svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore, cnnStore,\r\n  nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\r\n  cnnLayerMinMaxStore, isInSoftmaxStore, softmaxDetailViewStore,\r\n  hoverInfoStore, allowsSoftmaxAnimationStore, detailedModeStore\r\n} from '../stores.js';\r\nimport {\r\n  getOutputKnot, getInputKnot, gappedColorScale, getMidCoords\r\n} from './draw-utils.js';\r\nimport {\r\n  drawIntermediateLayerLegend, moveLayerX, addOverlayGradient,\r\n  drawArrow\r\n} from './intermediate-utils.js';\r\nimport { overviewConfig } from '../config.js';\r\n\r\n// Configs\r\nconst layerColorScales = overviewConfig.layerColorScales;\r\nconst nodeLength = overviewConfig.nodeLength;\r\nconst plusSymbolRadius = overviewConfig.plusSymbolRadius;\r\nconst intermediateColor = overviewConfig.intermediateColor;\r\nconst kernelRectLength = overviewConfig.kernelRectLength;\r\nconst svgPaddings = overviewConfig.svgPaddings;\r\nconst gapRatio = overviewConfig.gapRatio;\r\nconst classList = overviewConfig.classLists;\r\nconst formater = d3.format('.4f');\r\n\r\n// Shared variables\r\nlet svg = undefined;\r\nsvgStore.subscribe( value => {svg = value;} )\r\n\r\nlet vSpaceAroundGap = undefined;\r\nvSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\r\n\r\nlet hSpaceAroundGap = undefined;\r\nhSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\r\n\r\nlet cnn = undefined;\r\ncnnStore.subscribe( value => {cnn = value;} )\r\n\r\nlet nodeCoordinate = undefined;\r\nnodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\r\n\r\nlet selectedScaleLevel = undefined;\r\nselectedScaleLevelStore.subscribe( value => {selectedScaleLevel = value;} )\r\n\r\nlet cnnLayerRanges = undefined;\r\ncnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\r\n\r\nlet cnnLayerMinMax = undefined;\r\ncnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\r\n\r\nlet isInSoftmax = undefined;\r\nisInSoftmaxStore.subscribe( value => {isInSoftmax = value;} )\r\n\r\nlet allowsSoftmaxAnimation = undefined;\r\nallowsSoftmaxAnimationStore.subscribe( value => {allowsSoftmaxAnimation = value;} )\r\n\r\nlet softmaxDetailViewInfo = undefined;\r\nsoftmaxDetailViewStore.subscribe( value => {softmaxDetailViewInfo = value;} )\r\n\r\nlet hoverInfo = undefined;\r\nhoverInfoStore.subscribe( value => {hoverInfo = value;} )\r\n\r\nlet detailedMode = undefined;\r\ndetailedModeStore.subscribe( value => {detailedMode = value;} )\r\n\r\nlet layerIndexDict = {\r\n  'input': 0,\r\n  'conv_1_1': 1,\r\n  'relu_1_1': 2,\r\n  'conv_1_2': 3,\r\n  'relu_1_2': 4,\r\n  'max_pool_1': 5,\r\n  'conv_2_1': 6,\r\n  'relu_2_1': 7,\r\n  'conv_2_2': 8,\r\n  'relu_2_2': 9,\r\n  'max_pool_2': 10,\r\n  'output': 11\r\n}\r\n\r\nlet hasInitialized = false;\r\nlet logits = [];\r\nlet flattenFactoredFDict = {};\r\n\r\nconst moveLegend = (d, i, g, moveX, duration, restore) => {\r\n  let legend = d3.select(g[i]);\r\n\r\n  if (!restore) {\r\n    let previousTransform = legend.attr('transform');\r\n    let previousLegendX = +previousTransform.replace(/.*\\(([\\d\\.]+),.*/, '$1');\r\n    let previousLegendY = +previousTransform.replace(/.*,\\s([\\d\\.]+)\\)/, '$1');\r\n  \r\n    legend.transition('softmax')\r\n      .duration(duration)\r\n      .ease(d3.easeCubicInOut)\r\n      .attr('transform', `translate(${previousLegendX - moveX}, ${previousLegendY})`);\r\n    \r\n    // If not in restore mode, we register the previous location to the DOM element\r\n    legend.attr('data-preX', previousLegendX);\r\n    legend.attr('data-preY', previousLegendY);\r\n  } else {\r\n    // Restore the recorded location\r\n    let previousLegendX = +legend.attr('data-preX');\r\n    let previousLegendY = +legend.attr('data-preY');\r\n\r\n    legend.transition('softmax')\r\n      .duration(duration)\r\n      .ease(d3.easeCubicInOut)\r\n      .attr('transform', `translate(${previousLegendX}, ${previousLegendY})`);\r\n  }\r\n}\r\n\r\nconst logitCircleMouseOverHandler = (i) => {\r\n  // Update the hover info UI\r\n  hoverInfoStore.set({\r\n    show: true,\r\n    text: `Logit: ${formater(logits[i])}`\r\n  })\r\n\r\n  // Highlight the text in the detail view\r\n  softmaxDetailViewInfo.highlightI = i;\r\n  softmaxDetailViewStore.set(softmaxDetailViewInfo);\r\n\r\n  let logitLayer = svg.select('.logit-layer');\r\n  let logitLayerLower = svg.select('.underneath');\r\n  let intermediateLayer = svg.select('.intermediate-layer');\r\n\r\n  // Highlight the circle\r\n  logitLayer.select(`#logit-circle-${i}`)\r\n    .style('stroke-width', 2);\r\n\r\n  // Highlight the associated plus symbol\r\n  intermediateLayer.select(`#plus-symbol-clone-${i}`)\r\n    .style('opacity', 1)\r\n    .select('circle')\r\n    .style('fill', d => d.fill);\r\n  \r\n  // Raise the associated edge group\r\n  logitLayerLower.select(`#logit-lower-${i}`).raise();\r\n\r\n  // Highlight the associated edges\r\n  logitLayerLower.selectAll(`.softmax-abstract-edge-${i}`)\r\n    .style('stroke-width', 0.8)\r\n    .style('stroke', '#E0E0E0');\r\n\r\n  logitLayerLower.selectAll(`.softmax-edge-${i}`)\r\n    .style('stroke-width', 1)\r\n    .style('stroke', '#E0E0E0');\r\n  \r\n  logitLayerLower.selectAll(`.logit-output-edge-${i}`)\r\n    .style('stroke-width', 3)\r\n    .style('stroke', '#E0E0E0');\r\n\r\n  logitLayer.selectAll(`.logit-output-edge-${i}`)\r\n    .style('stroke-width', 3)\r\n    .style('stroke', '#E0E0E0');\r\n}\r\n\r\nconst logitCircleMouseLeaveHandler = (i) => {\r\n  // screenshot\r\n  // return;\r\n\r\n  // Update the hover info UI\r\n  hoverInfoStore.set({\r\n    show: false,\r\n    text: `Logit: ${formater(logits[i])}`\r\n  })\r\n\r\n  // Dehighlight the text in the detail view\r\n  softmaxDetailViewInfo.highlightI = -1;\r\n  softmaxDetailViewStore.set(softmaxDetailViewInfo);\r\n\r\n  let logitLayer = svg.select('.logit-layer');\r\n  let logitLayerLower = svg.select('.underneath');\r\n  let intermediateLayer = svg.select('.intermediate-layer');\r\n\r\n  // Restore the circle\r\n  logitLayer.select(`#logit-circle-${i}`)\r\n    .style('stroke-width', 1);\r\n\r\n  // Restore the associated plus symbol\r\n  intermediateLayer.select(`#plus-symbol-clone-${i}`)\r\n    .style('opacity', 0.2);\r\n\r\n  // Restore the associated edges\r\n  logitLayerLower.selectAll(`.softmax-abstract-edge-${i}`)\r\n    .style('stroke-width', 0.2)\r\n    .style('stroke', '#EDEDED');\r\n\r\n  logitLayerLower.selectAll(`.softmax-edge-${i}`)\r\n    .style('stroke-width', 0.2)\r\n    .style('stroke', '#F1F1F1');\r\n\r\n  logitLayerLower.selectAll(`.logit-output-edge-${i}`)\r\n    .style('stroke-width', 1.2)\r\n    .style('stroke', '#E5E5E5');\r\n  \r\n  logitLayer.selectAll(`.logit-output-edge-${i}`)\r\n    .style('stroke-width', 1.2)\r\n    .style('stroke', '#E5E5E5');\r\n}\r\n\r\n// This function is binded to the detail view in Overview.svelte\r\nexport const softmaxDetailViewMouseOverHandler = (event) => {\r\n  logitCircleMouseOverHandler(event.detail.curI);\r\n}\r\n\r\n// This function is binded to the detail view in Overview.svelte\r\nexport const softmaxDetailViewMouseLeaveHandler = (event) => {\r\n  logitCircleMouseLeaveHandler(event.detail.curI);\r\n}\r\n\r\nconst drawLogitLayer = (arg) => {\r\n  let curLayerIndex = arg.curLayerIndex,\r\n    moveX = arg.moveX,\r\n    softmaxLeftMid = arg.softmaxLeftMid,\r\n    selectedI = arg.selectedI,\r\n    intermediateX1 = arg.intermediateX1,\r\n    intermediateX2 = arg.intermediateX2,\r\n    pixelWidth = arg.pixelWidth,\r\n    pixelHeight = arg.pixelHeight,\r\n    topY = arg.topY,\r\n    bottomY = arg.bottomY,\r\n    softmaxX = arg.softmaxX,\r\n    middleGap = arg.middleGap,\r\n    middleRectHeight = arg.middleRectHeight,\r\n    symbolGroup = arg.symbolGroup,\r\n    symbolX = arg.symbolX,\r\n    flattenRange = arg.flattenRange;\r\n\r\n  let logitLayer = svg.select('.intermediate-layer')\r\n    .append('g')\r\n    .attr('class', 'logit-layer')\r\n    .raise();\r\n  \r\n  // Minotr layer ordering change\r\n  let tempClone = svg.select('.intermediate-layer')\r\n    .select('.flatten-layer')\r\n    .select('.plus-symbol')\r\n    .clone(true)\r\n    .attr('class', 'temp-clone-plus-symbol')\r\n    .attr('transform', `translate(${symbolX - moveX},\r\n      ${nodeCoordinate[curLayerIndex][selectedI].y + nodeLength / 2})`)\r\n    // Cool hack -> d3 clone doesnt clone events, make the front object pointer\r\n    // event transparent so users can trigger the underlying object's event!\r\n    .style('pointer-events', 'none')\r\n    .remove();\r\n\r\n  let tempPlusSymbol = logitLayer.append(() => tempClone.node());\r\n  \r\n  svg.select('.softmax-symbol').raise();\r\n\r\n  let logitLayerLower = svg.select('.underneath')\r\n    .append('g')\r\n    .attr('class', 'logit-layer-lower')\r\n    .lower();\r\n  \r\n  // Use circles to encode logit values\r\n  let centerX = softmaxLeftMid - moveX * 4 / 5;\r\n\r\n  // Get all logits\r\n  logits = [];\r\n  for (let i = 0; i < cnn[layerIndexDict['output']].length; i++) {\r\n    logits.push(cnn[layerIndexDict['output']][i].logit);\r\n  }\r\n\r\n  // Construct a color scale for the logit values\r\n  let logitColorScale = d3.scaleLinear()\r\n    .domain(d3.extent(logits))\r\n    .range([0.2, 1]);\r\n  \r\n  // Draw the current logit circle before animation\r\n  let logitRadius = 8;\r\n  logitLayer.append('circle')\r\n    .attr('class', 'logit-circle')\r\n    .attr('id', `logit-circle-${selectedI}`)\r\n    .attr('cx', centerX)\r\n    .attr('cy', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\r\n    .attr('r', logitRadius)\r\n    .style('fill', layerColorScales.logit(logitColorScale(logits[selectedI])))\r\n    .style('cursor', 'crosshair')\r\n    .style('pointer-events', 'all')\r\n    .style('stroke', intermediateColor)\r\n    .on('mouseover', () => logitCircleMouseOverHandler(selectedI))\r\n    .on('mouseleave', () => logitCircleMouseLeaveHandler(selectedI))\r\n    .on('click', () => { d3.event.stopPropagation() });\r\n  \r\n  // Show the logit circle corresponding label\r\n  let softmaxDetailAnnotation = svg.select('.intermediate-layer-annotation')\r\n    .select('.softmax-detail-annoataion');\r\n\r\n  softmaxDetailAnnotation.select(`#logit-text-${selectedI}`)\r\n    .style('opacity', 1);\r\n\r\n  tempPlusSymbol.raise();\r\n\r\n  // Draw another line from plus symbol to softmax symbol\r\n  logitLayer.append('line')\r\n    .attr('class', `logit-output-edge-${selectedI}`)\r\n    .attr('x1', intermediateX2 - moveX + plusSymbolRadius * 2)\r\n    .attr('x2', softmaxX)\r\n    .attr('y1', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\r\n    .attr('y2', nodeCoordinate[curLayerIndex - 1][selectedI].y + nodeLength / 2)\r\n    .style('fill', 'none')\r\n    .style('stroke', '#EAEAEA')\r\n    .style('stroke-width', '1.2')\r\n    .lower();\r\n\r\n  // Add the flatten to logit links\r\n  let linkData = [];\r\n  let flattenLength = cnn.flatten.length / cnn[1].length;\r\n  let underneathIs = [...Array(cnn[layerIndexDict['output']].length).keys()]\r\n    .filter(d => d != selectedI);\r\n  let curIIndex = 0;\r\n  let linkGen = d3.linkHorizontal()\r\n    .x(d => d.x)\r\n    .y(d => d.y);\r\n\r\n  const drawOneEdgeGroup = () => {\r\n    // Only draw the new group if it is in the softmax mode\r\n    if (!allowsSoftmaxAnimation) {\r\n      svg.select('.underneath')\r\n        .selectAll(`.logit-lower`)\r\n        .remove();\r\n      return;\r\n    }\r\n\r\n    let curI = underneathIs[curIIndex];\r\n\r\n    let curEdgeGroup = svg.select('.underneath')\r\n      .select(`#logit-lower-${curI}`);\r\n    \r\n    if (curEdgeGroup.empty()) {\r\n      curEdgeGroup = svg.select('.underneath')\r\n        .append('g')\r\n        .attr('class', 'logit-lower')\r\n        .attr('id', `logit-lower-${curI}`)\r\n        .style('opacity', 0);\r\n\r\n      // Hack: now show all edges, only draw 1/3 of the actual edges\r\n      for (let f = 0; f < flattenLength; f += 3) {\r\n        let loopFactors = [0, 9];\r\n        loopFactors.forEach(l => {\r\n          let factoredF = f + l * flattenLength;\r\n    \r\n          // Flatten -> output\r\n          linkData.push({\r\n            source: {x: intermediateX1 + pixelWidth + 3 - moveX,\r\n              y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\r\n            target: {x: intermediateX2 - moveX,\r\n              y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2},\r\n            index: factoredF,\r\n            weight: cnn.flatten[factoredF].outputLinks[curI].weight,\r\n            color: '#F1F1F1',\r\n            width: 0.5,\r\n            opacity: 1,\r\n            class: `softmax-edge-${curI}`\r\n          });\r\n        });\r\n      }\r\n\r\n      // Draw middle rect to logits\r\n      for (let vi = 0; vi < cnn[layerIndexDict['output']].length - 2; vi++) {\r\n        linkData.push({\r\n          source: {x: intermediateX1 + pixelWidth + 3 - moveX,\r\n            y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\r\n            middleRectHeight * (vi + 0.5)},\r\n          target: {x: intermediateX2 - moveX,\r\n            y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2},\r\n          index: -1,\r\n          color: '#EDEDED',\r\n          width: 0.5,\r\n          opacity: 1,\r\n          class: `softmax-abstract-edge-${curI}`\r\n        });\r\n      }\r\n\r\n      // Render the edges on the underneath layer\r\n      curEdgeGroup.selectAll(`path.softmax-edge-${curI}`)\r\n        .data(linkData)\r\n        .enter()\r\n        .append('path')\r\n        .attr('class', d => d.class)\r\n        .attr('id', d => `edge-${d.name}`)\r\n        .attr('d', d => linkGen({source: d.source, target: d.target}))\r\n        .style('fill', 'none')\r\n        .style('stroke-width', d => d.width)\r\n        .style('stroke', d => d.color === undefined ? intermediateColor : d.color)\r\n        .style('opacity', d => d.opacity)\r\n        .style('pointer-events', 'none');\r\n    }\r\n    \r\n    let curNodeGroup = logitLayer.append('g')\r\n      .attr('class', `logit-layer-${curI}`)\r\n      .style('opacity', 0);\r\n    \r\n    // Draw the plus symbol\r\n    let symbolClone = symbolGroup.clone(true)\r\n      .style('opacity', 0);\r\n\r\n    // Change the style of the clone\r\n    symbolClone.attr('class', 'plus-symbol-clone')\r\n      .attr('id', `plus-symbol-clone-${curI}`)\r\n      .select('circle')\r\n      .datum({fill: gappedColorScale(layerColorScales.weight,\r\n        flattenRange, cnn[layerIndexDict['output']][curI].bias, 0.35)})\r\n      .style('pointer-events', 'none')\r\n      .style('fill', '#E5E5E5');\r\n\r\n    symbolClone.attr('transform', `translate(${symbolX},\r\n      ${nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2})`);\r\n    \r\n    // Draw the outter link using only merged path\r\n    let outputEdgeD1 = linkGen({\r\n      source: {\r\n        x: intermediateX2 - moveX + plusSymbolRadius * 2,\r\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\r\n      },\r\n      target: {\r\n        x: centerX + logitRadius,\r\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\r\n      }\r\n    });\r\n\r\n    let outputEdgeD2 = linkGen({\r\n      source: {\r\n        x: centerX + logitRadius,\r\n        y: nodeCoordinate[curLayerIndex][curI].y + nodeLength / 2\r\n      },\r\n      target: {\r\n        x: softmaxX,\r\n        y: nodeCoordinate[curLayerIndex][selectedI].y + nodeLength / 2\r\n      }\r\n    });\r\n\r\n    // There are ways to combine these two paths into one. However, the animation\r\n    // for merged path is not continuous, so we use two saperate paths here.\r\n\r\n    let outputEdge1 = logitLayerLower.append('path')\r\n      .attr('class', `logit-output-edge-${curI}`)\r\n      .attr('d', outputEdgeD1)\r\n      .style('fill', 'none')\r\n      .style('stroke', '#EAEAEA')\r\n      .style('stroke-width', '1.2');\r\n\r\n    let outputEdge2 = logitLayerLower.append('path')\r\n      .attr('class', `logit-output-edge-${curI}`)\r\n      .attr('d', outputEdgeD2)\r\n      .style('fill', 'none')\r\n      .style('stroke', '#EAEAEA')\r\n      .style('stroke-width', '1.2');\r\n    \r\n    let outputEdgeLength1 = outputEdge1.node().getTotalLength();\r\n    let outputEdgeLength2 = outputEdge2.node().getTotalLength();\r\n    let totalLength = outputEdgeLength1 + outputEdgeLength2;\r\n    let totalDuration = hasInitialized ? 500 : 800;\r\n    let opacityDuration = hasInitialized ? 400 : 600;\r\n\r\n    outputEdge1.attr('stroke-dasharray', outputEdgeLength1 + ' ' + outputEdgeLength1)\r\n      .attr('stroke-dashoffset', outputEdgeLength1);\r\n    \r\n    outputEdge2.attr('stroke-dasharray', outputEdgeLength2 + ' ' + outputEdgeLength2)\r\n      .attr('stroke-dashoffset', outputEdgeLength2);\r\n\r\n    outputEdge1.transition('softmax-output-edge')\r\n      .duration(outputEdgeLength1 / totalLength * totalDuration)\r\n      .attr('stroke-dashoffset', 0);\r\n\r\n    outputEdge2.transition('softmax-output-edge')\r\n      .delay(outputEdgeLength1 / totalLength * totalDuration)\r\n      .duration(outputEdgeLength2 / totalLength * totalDuration)\r\n      .attr('stroke-dashoffset', 0);\r\n    \r\n    // Draw the logit circle\r\n    curNodeGroup.append('circle')\r\n      .attr('class', 'logit-circle')\r\n      .attr('id', `logit-circle-${curI}`)\r\n      .attr('cx', centerX)\r\n      .attr('cy', nodeCoordinate[curLayerIndex - 1][curI].y + nodeLength / 2)\r\n      .attr('r', 7)\r\n      .style('fill', layerColorScales.logit(logitColorScale(logits[curI])))\r\n      .style('stroke', intermediateColor)\r\n      .style('cursor', 'crosshair')\r\n      .on('mouseover', () => logitCircleMouseOverHandler(curI))\r\n      .on('mouseleave', () => logitCircleMouseLeaveHandler(curI))\r\n      .on('click', () => { d3.event.stopPropagation() });\r\n    \r\n    // Show the element in the detailed view\r\n    softmaxDetailViewInfo.startAnimation = {\r\n      i: curI,\r\n      duration: opacityDuration,\r\n      // Always show the animation\r\n      hasInitialized: false\r\n    };\r\n    softmaxDetailViewStore.set(softmaxDetailViewInfo);\r\n\r\n    // Show the elements with animation    \r\n    curNodeGroup.transition('softmax-edge')\r\n      .duration(opacityDuration)\r\n      .style('opacity', 1);\r\n\r\n    if ((selectedI < 3 && curI == 9) || (selectedI >= 3 && curI == 0)) {\r\n      // Show the hover text\r\n      softmaxDetailAnnotation.select('.softmax-detail-hover-annotation')\r\n        .transition('softmax-edge')\r\n        .duration(opacityDuration)\r\n        .style('opacity', 1);\r\n    }\r\n\r\n    softmaxDetailAnnotation.select(`#logit-text-${curI}`)\r\n      .transition('softmax-edge')\r\n      .duration(opacityDuration)\r\n      .style('opacity', 1);\r\n    \r\n    curEdgeGroup.transition('softmax-edge')\r\n      .duration(opacityDuration)\r\n      .style('opacity', 1)\r\n      .on('end', () => {\r\n        // Recursive animaiton\r\n        curIIndex ++;\r\n        if (curIIndex < underneathIs.length) {\r\n          linkData = [];\r\n          drawOneEdgeGroup();\r\n        } else {\r\n          hasInitialized = true;\r\n          softmaxDetailViewInfo.hasInitialized = true;\r\n          softmaxDetailViewStore.set(softmaxDetailViewInfo);\r\n        }\r\n      });\r\n    \r\n    symbolClone.transition('softmax-edge')\r\n      .duration(opacityDuration)\r\n      .style('opacity', 0.2);\r\n  }\r\n\r\n  // Show the softmax detail view\r\n  let anchorElement = svg.select('.intermediate-layer')\r\n    .select('.layer-label').node();\r\n  let pos = getMidCoords(svg, anchorElement);\r\n  let wholeSvg = d3.select('#cnn-svg');\r\n  let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\r\n  let detailViewTop = 100 + svgYMid - 192 / 2;\r\n\r\n  const detailview = document.getElementById('detailview');\r\n  detailview.style.top = `${detailViewTop}px`;\r\n  detailview.style.left = `${pos.left - 490 - 50}px`;\r\n  detailview.style.position = 'absolute';\r\n\r\n  softmaxDetailViewStore.set({\r\n    show: true,\r\n    logits: logits,\r\n    logitColors: logits.map(d => layerColorScales.logit(logitColorScale(d))),\r\n    selectedI: selectedI,\r\n    highlightI: -1,\r\n    outputName: classList[selectedI],\r\n    outputValue: cnn[layerIndexDict['output']][selectedI].output,\r\n    startAnimation: {i: -1, duration: 0, hasInitialized: hasInitialized}\r\n  })\r\n\r\n  drawOneEdgeGroup();\r\n\r\n  // Draw logit circle color scale\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: d3.extent(logits)[1] - d3.extent(logits)[0],\r\n    minMax: {min: d3.extent(logits)[0], max: d3.extent(logits)[1]},\r\n    group: logitLayer,\r\n    width: softmaxX - (intermediateX2 + plusSymbolRadius * 2 - moveX + 5),\r\n    gradientAppendingName: 'flatten-logit-gradient',\r\n    gradientGap: 0.1,\r\n    colorScale: layerColorScales.logit,\r\n    x: intermediateX2 + plusSymbolRadius * 2 - moveX + 5,\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10\r\n  });\r\n\r\n  // Draw logit layer label\r\n  let logitLabel = logitLayer.append('g')\r\n    .attr('class', 'layer-label')\r\n    .classed('hidden', detailedMode)\r\n    .attr('transform', () => {\r\n      let x = centerX;\r\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\r\n      return `translate(${x}, ${y})`;\r\n    });\r\n\r\n  logitLabel.append('text')\r\n    .style('text-anchor', 'middle')\r\n    .style('dominant-baseline', 'middle')\r\n    .style('opacity', 0.8)\r\n    .style('font-weight', 800)\r\n    .text('logit');\r\n}\r\n\r\nconst removeLogitLayer = () => {\r\n  svg.select('.logit-layer').remove();\r\n  svg.select('.logit-layer-lower').remove();\r\n  svg.selectAll('.plus-symbol-clone').remove();\r\n\r\n  // Instead of removing the paths, we hide them, so it is faster to load in\r\n  // the future\r\n  svg.select('.underneath')\r\n    .selectAll('.logit-lower')\r\n    .style('opacity', 0);\r\n\r\n  softmaxDetailViewStore.set({\r\n      show: false,\r\n      logits: []\r\n  })\r\n}\r\n\r\nconst softmaxClicked = (arg) => {\r\n  let curLayerIndex = arg.curLayerIndex,\r\n    moveX = arg.moveX,\r\n    symbolX = arg.symbolX,\r\n    symbolY = arg.symbolY,\r\n    outputX = arg.outputX,\r\n    outputY = arg.outputY,\r\n    softmaxLeftMid = arg.softmaxLeftMid,\r\n    selectedI = arg.selectedI,\r\n    intermediateX1 = arg.intermediateX1,\r\n    intermediateX2 = arg.intermediateX2,\r\n    pixelWidth = arg.pixelWidth,\r\n    pixelHeight = arg.pixelHeight,\r\n    topY = arg.topY,\r\n    bottomY = arg.bottomY,\r\n    middleGap = arg.middleGap,\r\n    middleRectHeight = arg.middleRectHeight,\r\n    softmaxX = arg.softmaxX,\r\n    softmaxTextY = arg.softmaxTextY,\r\n    softmaxWidth = arg.softmaxWidth,\r\n    symbolGroup = arg.symbolGroup,\r\n    flattenRange = arg.flattenRange;\r\n\r\n  let duration = 600;\r\n  let centerX = softmaxLeftMid - moveX * 4 / 5;\r\n  d3.event.stopPropagation();\r\n\r\n  // Clean up the logit elemends before moving anything\r\n  if (isInSoftmax) {\r\n    allowsSoftmaxAnimationStore.set(false);\r\n    removeLogitLayer();\r\n  } else {\r\n    allowsSoftmaxAnimationStore.set(true);\r\n  }\r\n\r\n  // Move the overlay gradient\r\n  svg.select('.intermediate-layer-overlay')\r\n    .select('rect.overlay')\r\n    .transition('softmax')\r\n    .ease(d3.easeCubicInOut)\r\n    .duration(duration)\r\n    .attr('transform', `translate(${isInSoftmax ? 0 : -moveX}, ${0})`);\r\n\r\n  // Move the legends\r\n  svg.selectAll(`.intermediate-legend-${curLayerIndex - 1}`)\r\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\r\n\r\n  svg.select('.intermediate-layer')\r\n    .select(`.layer-label`)\r\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\r\n\r\n  svg.select('.intermediate-layer')\r\n    .select(`.layer-detailed-label`)\r\n    .each((d, i, g) => moveLegend(d, i, g, moveX, duration, isInSoftmax));\r\n\r\n  // Also move all layers on the left\r\n  for (let i = curLayerIndex - 1; i >= 0; i--) {\r\n    let curLayer = svg.select(`g#cnn-layer-group-${i}`);\r\n    let previousX = +curLayer.select('image').attr('x');\r\n    let newX = isInSoftmax ? previousX + moveX : previousX - moveX;\r\n    moveLayerX({\r\n      layerIndex: i,\r\n      targetX: newX,\r\n      disable: true,\r\n      delay: 0,\r\n      transitionName: 'softmax',\r\n      duration: duration\r\n    });\r\n  }\r\n\r\n  // Hide the sum up annotation\r\n  svg.select('.plus-annotation')\r\n    .transition('softmax')\r\n    .duration(duration)\r\n    .style('opacity', isInSoftmax ? 1 : 0)\r\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\r\n\r\n  // Hide the softmax annotation\r\n  let softmaxAnnotation = svg.select('.softmax-annotation')\r\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\r\n  \r\n  let softmaxDetailAnnotation = softmaxAnnotation.selectAll('.softmax-detail-annoataion')\r\n    .data([0])\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'softmax-detail-annoataion');\r\n\r\n  // Remove the detailed annoatioan when quitting the detail view\r\n  if (isInSoftmax) {\r\n    softmaxAnnotation.selectAll('.softmax-detail-annoataion').remove();\r\n  }\r\n\r\n  softmaxAnnotation.select('.arrow-group')\r\n    .transition('softmax')\r\n    .duration(duration)\r\n    .style('opacity', isInSoftmax ? 1 : 0);\r\n\r\n  softmaxAnnotation.select('.annotation-text')\r\n    .style('cursor', 'help')\r\n    .style('pointer-events', 'all')\r\n    .on('click', () => {\r\n      d3.event.stopPropagation();\r\n      // Scroll to the article element\r\n      document.querySelector(`#article-softmax`).scrollIntoView({ \r\n        behavior: 'smooth' \r\n      });\r\n    })\r\n    .transition('softmax')\r\n    .duration(duration)\r\n    .style('opacity', isInSoftmax ? 1 : 0)\r\n    .on('end', () => {\r\n      if (!isInSoftmax) {\r\n        // Add new annotation for the softmax button\r\n        let textX = softmaxX + softmaxWidth / 2;\r\n        let textY = softmaxTextY - 10;\r\n\r\n        if (selectedI === 0) {\r\n          textY = softmaxTextY + 70;\r\n        }\r\n\r\n        let text = softmaxDetailAnnotation.append('text')\r\n          .attr('x', textX)\r\n          .attr('y', textY)\r\n          .attr('class', 'annotation-text softmax-detail-text')\r\n          .style('dominant-baseline', 'baseline')\r\n          .style('text-anchor', 'middle')\r\n          .text('Normalize ');\r\n        \r\n        text.append('tspan') \r\n          .attr('dx', 1)\r\n          .style('fill', '#E56014')\r\n          .text('logits');\r\n        \r\n        text.append('tspan')\r\n          .attr('dx', 1)\r\n          .text(' into');\r\n\r\n        text.append('tspan')\r\n          .attr('x', textX)\r\n          .attr('dy', '1.1em')\r\n          .text('class probabilities');\r\n\r\n        if (selectedI === 0) {\r\n          drawArrow({\r\n            group: softmaxDetailAnnotation,\r\n            sx: softmaxX + softmaxWidth / 2 - 5,\r\n            sy: softmaxTextY + 44,\r\n            tx: softmaxX + softmaxWidth / 2,\r\n            ty: textY - 12,\r\n            dr: 50,\r\n            hFlip: true,\r\n            marker: 'marker-alt'\r\n          });\r\n        } else {\r\n          drawArrow({\r\n            group: softmaxDetailAnnotation,\r\n            sx: softmaxX + softmaxWidth / 2 - 5,\r\n            sy: softmaxTextY + 4,\r\n            tx: softmaxX + softmaxWidth / 2,\r\n            ty: symbolY - plusSymbolRadius - 4,\r\n            dr: 50,\r\n            hFlip: true,\r\n            marker: 'marker-alt'\r\n          });\r\n        }\r\n\r\n        // Add annotation for the logit layer label\r\n        textX = centerX + 45;\r\n        textY = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\r\n        let arrowTX = centerX + 20;\r\n        let arrowTY = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\r\n\r\n        softmaxDetailAnnotation.append('g')\r\n          .attr('class', 'layer-detailed-label')\r\n          .attr('transform', () => {\r\n            let x = centerX;\r\n            let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\r\n            return `translate(${x}, ${y})`;\r\n          })\r\n          .classed('hidden', !detailedMode)\r\n          .append('text')\r\n          // .attr('x', centerX)\r\n          // .attr('y',  (svgPaddings.top + vSpaceAroundGap) / 2 - 6)\r\n          .style('opacity', 0.7)\r\n          .style('dominant-baseline', 'middle')\r\n          .style('font-size', '12px')\r\n          .style('font-weight', '800')\r\n          .append('tspan')\r\n          .attr('x', 0)\r\n          .text('logit')\r\n          .append('tspan')\r\n          .attr('x', 0)\r\n          .style('font-size', '8px')\r\n          .style('font-weight', 'normal')\r\n          .attr('dy', '1.5em')\r\n          .text('(10)');\r\n\r\n        softmaxDetailAnnotation.append('text')\r\n          .attr('class', 'annotation-text')\r\n          .attr('x', textX)\r\n          .attr('y', (svgPaddings.top + vSpaceAroundGap) / 2 + 3)\r\n          .style('text-anchor', 'start')\r\n          .text('Before')\r\n          .append('tspan')\r\n          .attr('x', textX)\r\n          .attr('dy', '1em')\r\n          .text('normalization')\r\n\r\n\r\n        drawArrow({\r\n          group: softmaxDetailAnnotation,\r\n          tx: arrowTX,\r\n          ty: arrowTY,\r\n          sx: textX - 6,\r\n          sy: textY + 2,\r\n          dr: 60,\r\n          hFlip: false,\r\n          marker: 'marker-alt'\r\n        });\r\n\r\n        softmaxDetailAnnotation.append('text')\r\n          .attr('class', 'annotation-text')\r\n          .attr('x', nodeCoordinate[layerIndexDict['output']][0].x - 35)\r\n          .attr('y', (svgPaddings.top + vSpaceAroundGap) / 2 + 3)\r\n          .style('text-anchor', 'end')\r\n          .text('After')\r\n          .append('tspan')\r\n          .attr('x', nodeCoordinate[layerIndexDict['output']][0].x - 35)\r\n          .attr('dy', '1em')\r\n          .text('normalization')\r\n\r\n        drawArrow({\r\n          group: softmaxDetailAnnotation,\r\n          tx: nodeCoordinate[layerIndexDict['output']][0].x - 8,\r\n          ty: arrowTY,\r\n          sx: nodeCoordinate[layerIndexDict['output']][0].x - 27,\r\n          sy: textY + 2,\r\n          dr: 60,\r\n          hFlip: true,\r\n          marker: 'marker-alt'\r\n        });\r\n\r\n        // Add annotation for the logit circle\r\n        for (let i = 0; i < 10; i++) {\r\n          softmaxDetailAnnotation.append('text')\r\n            .attr('x', centerX)\r\n            .attr('y', nodeCoordinate[curLayerIndex - 1][i].y + nodeLength / 2 + 8)\r\n            .attr('class', 'annotation-text softmax-detail-text')\r\n            .attr('id', `logit-text-${i}`)\r\n            .style('text-anchor', 'middle')\r\n            .style('dominant-baseline', 'hanging')\r\n            .style('opacity', 0)\r\n            .text(`${classList[i]}`);\r\n        }\r\n\r\n        let hoverTextGroup = softmaxDetailAnnotation.append('g')\r\n          .attr('class', 'softmax-detail-hover-annotation')\r\n          .style('opacity', 0);\r\n\r\n        textX = centerX + 50;\r\n        textY = nodeCoordinate[curLayerIndex - 1][0].y + nodeLength / 2;\r\n\r\n        if (selectedI < 3) {\r\n          textY = nodeCoordinate[curLayerIndex - 1][9].y + nodeLength / 2;\r\n        }\r\n\r\n        // Add annotation to prompt user to check the logit value\r\n        let hoverText = hoverTextGroup.append('text')\r\n          .attr('x', textX)\r\n          .attr('y', textY)\r\n          .attr('class', 'annotation-text softmax-detail-text softmax-hover-text')\r\n          .style('text-anchor', 'start')\r\n          .style('dominant-baseline', 'baseline')\r\n          .append('tspan')\r\n          .style('font-weight', 700)\r\n          .style('dominant-baseline', 'baseline')\r\n          .text(`Hover over `)\r\n          .append('tspan')\r\n          .style('font-weight', 400)\r\n          .style('dominant-baseline', 'baseline')\r\n          .text('to see');\r\n        \r\n        hoverText.append('tspan')\r\n          .style('dominant-baseline', 'baseline')\r\n          .attr('x', textX)\r\n          .attr('dy', '1em')\r\n          .text('its ');\r\n\r\n        hoverText.append('tspan')\r\n          .style('dominant-baseline', 'baseline')\r\n          .attr('dx', 1)\r\n          .style('fill', '#E56014')\r\n          .text('logit');\r\n        \r\n        hoverText.append('tspan')\r\n          .style('dominant-baseline', 'baseline')\r\n          .attr('dx', 1)\r\n          .text(' value');\r\n        \r\n        drawArrow({\r\n          group: hoverTextGroup,\r\n          tx: centerX + 15,\r\n          ty: textY,\r\n          sx: textX - 8,\r\n          sy: textY + 2,\r\n          dr: 60,\r\n          hFlip: false\r\n        });\r\n      }\r\n    })\r\n\r\n  // Hide the annotation\r\n  svg.select('.flatten-annotation')\r\n    .transition('softmax')\r\n    .duration(duration)\r\n    .style('opacity', isInSoftmax ? 1 : 0)\r\n    .style('pointer-events', isInSoftmax ? 'all' : 'none');\r\n\r\n  // Move the left part of faltten layer elements\r\n  let flattenLeftPart = svg.select('.flatten-layer-left');\r\n  flattenLeftPart.transition('softmax')\r\n    .duration(duration)\r\n    .ease(d3.easeCubicInOut)\r\n    .attr('transform', `translate(${isInSoftmax ? 0 : -moveX}, ${0})`)\r\n    .on('end', () => {\r\n      // Add the logit layer\r\n      if (!isInSoftmax) {\r\n        let logitArg = {\r\n          curLayerIndex: curLayerIndex,\r\n          moveX: moveX,\r\n          softmaxLeftMid: softmaxLeftMid,\r\n          selectedI: selectedI,\r\n          intermediateX1: intermediateX1,\r\n          intermediateX2: intermediateX2,\r\n          pixelWidth: pixelWidth,\r\n          pixelHeight: pixelHeight,\r\n          topY: topY,\r\n          bottomY: bottomY,\r\n          middleGap: middleGap,\r\n          middleRectHeight: middleRectHeight,\r\n          softmaxX: softmaxX,\r\n          symbolGroup: symbolGroup,\r\n          symbolX: symbolX,\r\n          flattenRange: flattenRange\r\n        };\r\n        drawLogitLayer(logitArg);\r\n      }\r\n\r\n      // Redraw the line from the plus symbol to the output node\r\n      if (!isInSoftmax) {\r\n        let newLine = flattenLeftPart.select('.edge-group')\r\n          .append('line')\r\n          .attr('class', 'symbol-output-line')\r\n          .attr('x1', symbolX)\r\n          .attr('y1', symbolY)\r\n          .attr('x2', outputX + moveX)\r\n          .attr('y2', outputY)\r\n          .style('stroke-width', 1.2)\r\n          .style('stroke', '#E5E5E5')\r\n          .style('opacity', 0);\r\n        \r\n        newLine.transition('softmax')\r\n          .delay(duration / 3)\r\n          .duration(duration * 2 / 3)\r\n          .style('opacity', 1);\r\n      } else {\r\n        flattenLeftPart.select('.symbol-output-line').remove();\r\n      }\r\n      \r\n      isInSoftmax = !isInSoftmax;\r\n      isInSoftmaxStore.set(isInSoftmax);\r\n    })\r\n}\r\n\r\n/**\r\n * Draw the flatten layer before output layer\r\n * @param {number} curLayerIndex Index of the selected layer\r\n * @param {object} d Bounded d3 data\r\n * @param {number} i Index of the selected node\r\n * @param {number} width CNN group width\r\n * @param {number} height CNN group height\r\n */\r\nexport const drawFlatten = (curLayerIndex, d, i, width, height) => {\r\n  // Show the output legend\r\n  svg.selectAll('.output-legend')\r\n    .classed('hidden', false);\r\n\r\n  let pixelWidth = nodeLength / 2;\r\n  let pixelHeight = 1.1;\r\n  let totalLength = (2 * nodeLength +\r\n    5.5 * hSpaceAroundGap * gapRatio + pixelWidth);\r\n  let leftX = nodeCoordinate[curLayerIndex][0].x - totalLength;\r\n  let intermediateGap = (hSpaceAroundGap * gapRatio * 4) / 2;\r\n  const minimumGap = 20;\r\n  let linkGen = d3.linkHorizontal()\r\n    .x(d => d.x)\r\n    .y(d => d.y);\r\n\r\n  // Hide the edges\r\n  svg.select('g.edge-group')\r\n    .style('visibility', 'hidden');\r\n\r\n  // Move the previous layer\r\n  moveLayerX({layerIndex: curLayerIndex - 1, targetX: leftX,\r\n    disable: true, delay: 0});\r\n\r\n  // Disable the current layer (output layer)\r\n  moveLayerX({layerIndex: curLayerIndex,\r\n    targetX: nodeCoordinate[curLayerIndex][0].x, disable: true,\r\n    delay: 0, opacity: 0.15, specialIndex: i});\r\n  \r\n  // Compute the gap in the left shrink region\r\n  let leftEnd = leftX - hSpaceAroundGap;\r\n  let leftGap = (leftEnd - nodeCoordinate[0][0].x - 10 * nodeLength) / 10;\r\n\r\n  // Different from other intermediate view, we push the left part dynamically\r\n  // 1. If there is enough space, we fix the first layer position and move all\r\n  // other layers;\r\n  // 2. If there is not enough space, we maintain the minimum gap and push all\r\n  // left layers to the left (could be out-of-screen)\r\n  if (leftGap > minimumGap) {\r\n    // Move the left layers\r\n    for (let i = 0; i < curLayerIndex - 1; i++) {\r\n      let curX = nodeCoordinate[0][0].x + i * (nodeLength + leftGap);\r\n      moveLayerX({layerIndex: i, targetX: curX, disable: true, delay: 0});\r\n    }\r\n  } else {\r\n    leftGap = minimumGap;\r\n    let curLeftBound = leftX - leftGap * 2 - nodeLength;\r\n    // Move the left layers\r\n    for (let i = curLayerIndex - 2; i >= 0; i--) {\r\n      moveLayerX({layerIndex: i, targetX: curLeftBound, disable: true, delay: 0});\r\n      curLeftBound = curLeftBound - leftGap - nodeLength;\r\n    }\r\n  }\r\n\r\n  // Add an overlay\r\n  let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\r\n    {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.95},\r\n    {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\r\n  addOverlayGradient('overlay-gradient-left', stops);\r\n\r\n  let intermediateLayerOverlay = svg.append('g')\r\n    .attr('class', 'intermediate-layer-overlay');\r\n\r\n  intermediateLayerOverlay.append('rect')\r\n    .attr('class', 'overlay')\r\n    .style('fill', 'url(#overlay-gradient-left)')\r\n    .style('stroke', 'none')\r\n    .attr('width', leftX + svgPaddings.left - (leftGap * 2) + 3)\r\n    .attr('height', height + svgPaddings.top + svgPaddings.bottom)\r\n    .attr('x', -svgPaddings.left)\r\n    .attr('y', 0)\r\n    .style('opacity', 0);\r\n  \r\n  intermediateLayerOverlay.selectAll('rect.overlay')\r\n    .transition('move')\r\n    .duration(800)\r\n    .ease(d3.easeCubicInOut)\r\n    .style('opacity', 1);\r\n\r\n  // Add the intermediate layer\r\n  let intermediateLayer = svg.append('g')\r\n    .attr('class', 'intermediate-layer')\r\n    .style('opacity', 0);\r\n  \r\n  let intermediateX1 = leftX + nodeLength + intermediateGap;\r\n  let intermediateX2 = intermediateX1 + intermediateGap + pixelWidth;\r\n  let range = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\r\n  let colorScale = layerColorScales.conv;\r\n  let flattenLength = cnn.flatten.length / cnn[1].length;\r\n  let linkData = [];\r\n\r\n  let flattenLayer = intermediateLayer.append('g')\r\n    .attr('class', 'flatten-layer');\r\n  \r\n  let flattenLayerLeftPart = flattenLayer.append('g')\r\n    .attr('class', 'flatten-layer-left');\r\n  \r\n  let topY = nodeCoordinate[curLayerIndex - 1][0].y;\r\n  let bottomY = nodeCoordinate[curLayerIndex - 1][9].y + nodeLength -\r\n        flattenLength * pixelHeight;\r\n  \r\n  // Compute the pre-layer gap\r\n  let preLayerDimension = cnn[curLayerIndex - 1][0].output.length;\r\n  let preLayerGap = nodeLength / (2 * preLayerDimension);\r\n\r\n  // Compute bounding box length\r\n  let boundingBoxLength = nodeLength / preLayerDimension;\r\n\r\n  // Compute the weight color scale\r\n  let flattenExtent = d3.extent(cnn.flatten.slice(flattenLength)\r\n    .map(d => d.outputLinks[i].weight)\r\n    .concat(cnn.flatten.slice(9 * flattenLength, 10 * flattenLength)\r\n      .map(d => d.outputLinks[i].weight)));\r\n\r\n  let flattenRange = 2 * (Math.round(\r\n    Math.max(...flattenExtent.map(Math.abs)) * 1000) / 1000);\r\n\r\n  let flattenMouseOverHandler = (d) => {\r\n    let index = d.index;\r\n    // Screenshot\r\n    // console.log(index);\r\n\r\n    // Update the hover info UI\r\n    if (d.weight === undefined) {\r\n      hoverInfo = {\r\n        show: true,\r\n        text: `Pixel value: ${formater(flattenFactoredFDict[index])}`\r\n      };\r\n    } else {\r\n      hoverInfo = {\r\n        show: true,\r\n        text: `Weight: ${formater(d.weight)}`\r\n      };\r\n    }\r\n    hoverInfoStore.set(hoverInfo);\r\n\r\n    flattenLayerLeftPart.select(`#edge-flatten-${index}`)\r\n      .raise()\r\n      .style('stroke', intermediateColor)\r\n      .style('stroke-width', 1);\r\n\r\n    flattenLayerLeftPart.select(`#edge-flatten-${index}-output`)\r\n      .raise()\r\n      .style('stroke-width', 1)\r\n      .style('stroke', da => gappedColorScale(layerColorScales.weight,\r\n        flattenRange, da.weight, 0.1));\r\n\r\n    flattenLayerLeftPart.select(`#bounding-${index}`)\r\n      .raise()\r\n      .style('opacity', 1);\r\n  }\r\n\r\n  let flattenMouseLeaveHandler = (d) => {\r\n    let index = d.index;\r\n\r\n    // screenshot\r\n    // if (index === 32) {return;}\r\n\r\n    // Update the hover info UI\r\n    if (d.weight === undefined) {\r\n      hoverInfo = {\r\n        show: false,\r\n        text: `Pixel value: ${formater(flattenFactoredFDict[index])}`\r\n      };\r\n    } else {\r\n      hoverInfo = {\r\n        show: false,\r\n        text: `Weight: ${formater(d.weight)}`\r\n      };\r\n    }\r\n    hoverInfoStore.set(hoverInfo);\r\n\r\n    flattenLayerLeftPart.select(`#edge-flatten-${index}`)\r\n      .style('stroke-width', 0.6)\r\n      .style('stroke', '#E5E5E5')\r\n\r\n    flattenLayerLeftPart.select(`#edge-flatten-${index}-output`)\r\n      .style('stroke-width', 0.6)\r\n      .style('stroke', da => gappedColorScale(layerColorScales.weight,\r\n        flattenRange, da.weight, 0.35));\r\n\r\n    flattenLayerLeftPart.select(`#bounding-${index}`)\r\n      .raise()\r\n      .style('opacity', 0);\r\n  }\r\n\r\n  flattenFactoredFDict = {};\r\n  for (let f = 0; f < flattenLength; f++) {\r\n    let loopFactors = [0, 9];\r\n    loopFactors.forEach(l => {\r\n      let factoredF = f + l * flattenLength;\r\n      flattenFactoredFDict[factoredF] = cnn.flatten[factoredF].output;\r\n      flattenLayerLeftPart.append('rect')\r\n        .attr('x', intermediateX1)\r\n        .attr('y', l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight)\r\n        .attr('width', pixelWidth)\r\n        .attr('height', pixelHeight)\r\n        .style('cursor', 'crosshair')\r\n        .style('fill', colorScale((cnn.flatten[factoredF].output + range / 2) / range))\r\n        .on('mouseover', () => flattenMouseOverHandler({index: factoredF}))\r\n        .on('mouseleave', () => flattenMouseLeaveHandler({index: factoredF}))\r\n        .on('click', () => { d3.event.stopPropagation() });\r\n\r\n      // Flatten -> output\r\n      linkData.push({\r\n        source: {x: intermediateX1 + pixelWidth + 3,\r\n          y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\r\n        target: {x: intermediateX2,\r\n          //nodeCoordinate[curLayerIndex][i].x - nodeLength,\r\n          y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2},\r\n        index: factoredF,\r\n        weight: cnn.flatten[factoredF].outputLinks[i].weight,\r\n        name: `flatten-${factoredF}-output`,\r\n        color: gappedColorScale(layerColorScales.weight,\r\n          flattenRange, cnn.flatten[factoredF].outputLinks[i].weight, 0.35),\r\n        width: 0.6,\r\n        opacity: 1,\r\n        class: `flatten-output`\r\n      });\r\n\r\n      // Pre-layer -> flatten\r\n      let row = Math.floor(f / preLayerDimension);\r\n      linkData.push({\r\n        target: {x: intermediateX1 - 3,\r\n          y:  l === 0 ? topY + f * pixelHeight : bottomY + f * pixelHeight},\r\n        source: {x: leftX + nodeLength + 3,\r\n          y: nodeCoordinate[curLayerIndex - 1][l].y + (2 * row + 1) * preLayerGap},\r\n        index: factoredF,\r\n        name: `flatten-${factoredF}`,\r\n        color: '#E5E5E5',\r\n        // color: gappedColorScale(layerColorScales.conv,\r\n        //   2 * Math.max(Math.abs(cnnLayerMinMax[10].max), Math.abs(cnnLayerMinMax[10].min)),\r\n        //   cnn.flatten[factoredF].output, 0.2),\r\n        width: 0.6,\r\n        opacity: 1,\r\n        class: `flatten`\r\n      });\r\n\r\n      // Add original pixel bounding box\r\n      let loc = cnn.flatten[factoredF].inputLinks[0].weight;\r\n      flattenLayerLeftPart.append('rect')\r\n        .attr('id', `bounding-${factoredF}`)\r\n        .attr('class', 'flatten-bounding')\r\n        .attr('x', leftX + loc[1] * boundingBoxLength)\r\n        .attr('y', nodeCoordinate[curLayerIndex - 1][l].y + loc[0] * boundingBoxLength)\r\n        .attr('width', boundingBoxLength)\r\n        .attr('height', boundingBoxLength)\r\n        .style('fill', 'none')\r\n        .style('stroke', intermediateColor)\r\n        .style('stroke-length', '0.5')\r\n        .style('pointer-events', 'all')\r\n        .style('cursor', 'crosshair')\r\n        .style('opacity', 0)\r\n        .on('mouseover', () => flattenMouseOverHandler({index: factoredF}))\r\n        .on('mouseleave', () => flattenMouseLeaveHandler({index: factoredF}))\r\n        .on('click', () => {d3.event.stopPropagation()});\r\n    }) \r\n  }\r\n  \r\n  // Use abstract symbol to represent the flatten nodes in between (between\r\n  // the first and the last nodes)\r\n  // Compute the average value of input node and weights\r\n  let meanValues = [];\r\n  for (let n = 1; n < cnn[curLayerIndex - 1].length - 1; n++) {\r\n    /*\r\n    let meanOutput = d3.mean(cnn.flatten.slice(flattenLength * n,\r\n      flattenLength * (n + 1)).map(d => d.output));\r\n    let meanWeight= d3.mean(cnn.flatten.slice(flattenLength * n,\r\n      flattenLength * (n + 1)).map(d => d.outputLinks[i].weight));\r\n    meanValues.push({index: n, output: meanOutput, weight: meanWeight});\r\n    */\r\n    meanValues.push({index: n});\r\n  }\r\n\r\n  // Compute the middle gap\r\n  let middleGap = 5;\r\n  let middleRectHeight = (10 * nodeLength + (10 - 1) * vSpaceAroundGap -\r\n    pixelHeight * flattenLength * 2 - 5 * (8 + 1)) / 8;\r\n\r\n  // Add middle nodes\r\n  meanValues.forEach((v, vi) => {\r\n    // Add a small rectangle\r\n    flattenLayerLeftPart.append('rect')\r\n      .attr('x', intermediateX1 + pixelWidth / 4)\r\n      .attr('y', topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\r\n        middleRectHeight * vi)\r\n      .attr('width', pixelWidth / 2)\r\n      .attr('height', middleRectHeight)\r\n      // .style('fill', colorScale((v.output + range / 2) / range));\r\n      .style('fill', '#E5E5E5');\r\n    \r\n    // Add a triangle next to the input node\r\n    flattenLayerLeftPart.append('polyline')\r\n      .attr('points',\r\n        `${leftX + nodeLength + 3}\r\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y},\r\n        ${leftX + nodeLength + 10}\r\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength / 2},\r\n        ${leftX + nodeLength + 3}\r\n        ${nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength}`)\r\n      .style('fill', '#E5E5E5')\r\n      .style('opacity', 1);\r\n    \r\n    // Input -> flatten\r\n    linkData.push({\r\n      source: {x: leftX + nodeLength + 10,\r\n        y: nodeCoordinate[curLayerIndex - 1][v.index].y + nodeLength / 2},\r\n      target: {x: intermediateX1 - 3,\r\n        y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\r\n          middleRectHeight * (vi + 0.5)},\r\n      index: -1,\r\n      width: 1,\r\n      opacity: 1,\r\n      name: `flatten-abstract-${v.index}`,\r\n      color: '#E5E5E5',\r\n      class: `flatten-abstract`\r\n    });\r\n\r\n    // Flatten -> output\r\n    linkData.push({\r\n      source: {x: intermediateX1 + pixelWidth + 3,\r\n      y: topY + flattenLength * pixelHeight + middleGap * (vi + 1) +\r\n        middleRectHeight * (vi + 0.5)},\r\n      target: {x: intermediateX2,\r\n      y: nodeCoordinate[curLayerIndex][i].y + nodeLength / 2},\r\n      index: -1,\r\n      name: `flatten-abstract-${v.index}-output`,\r\n      // color: gappedColorScale(layerColorScales.weight, flattenRange,\r\n      //   v.weight, 0.35),\r\n      color: '#E5E5E5',\r\n      weight: v.weight,\r\n      width: 1,\r\n      opacity: 1,\r\n      class: `flatten-abstract-output`\r\n    });\r\n  })\r\n\r\n  // Draw the plus operation symbol\r\n  let symbolX = intermediateX2 + plusSymbolRadius;\r\n  let symbolY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2;\r\n  let symbolRectHeight = 1;\r\n  let symbolGroup = flattenLayerLeftPart.append('g')\r\n    .attr('class', 'plus-symbol')\r\n    .attr('transform', `translate(${symbolX}, ${symbolY})`);\r\n  \r\n  symbolGroup.append('rect')\r\n    .attr('x', -plusSymbolRadius)\r\n    .attr('y', -plusSymbolRadius)\r\n    .attr('width', plusSymbolRadius * 2)\r\n    .attr('height', plusSymbolRadius * 2)\r\n    .attr('rx', 3)\r\n    .attr('ry', 3)\r\n    .style('fill', 'none')\r\n    .style('stroke', intermediateColor);\r\n  \r\n  symbolGroup.append('rect')\r\n    .attr('x', -(plusSymbolRadius - 3))\r\n    .attr('y', -symbolRectHeight / 2)\r\n    .attr('width', 2 * (plusSymbolRadius - 3))\r\n    .attr('height', symbolRectHeight)\r\n    .style('fill', intermediateColor);\r\n\r\n  symbolGroup.append('rect')\r\n    .attr('x', -symbolRectHeight / 2)\r\n    .attr('y', -(plusSymbolRadius - 3))\r\n    .attr('width', symbolRectHeight)\r\n    .attr('height', 2 * (plusSymbolRadius - 3))\r\n    .style('fill', intermediateColor);\r\n\r\n  // Place the bias rectangle below the plus sign if user clicks the first\r\n  // conv node (no need now, since we added annotaiton for softmax to make it\r\n  // look better aligned)\r\n  // Add bias symbol to the plus symbol\r\n  symbolGroup.append('circle')\r\n    .attr('cx', 0)\r\n    .attr('cy', -nodeLength / 2 - 0.5 * kernelRectLength)\r\n    .attr('r', kernelRectLength * 1.5)\r\n    .style('stroke', intermediateColor)\r\n    .style('cursor', 'crosshair')\r\n    .style('fill', gappedColorScale(layerColorScales.weight,\r\n        flattenRange, d.bias, 0.35))\r\n    .on('mouseover', () => {\r\n      hoverInfoStore.set( {show: true, text: `Bias: ${formater(d.bias)}`} );\r\n    })\r\n    .on('mouseleave', () => {\r\n      hoverInfoStore.set( {show: false, text: `Bias: ${formater(d.bias)}`} );\r\n    })\r\n    .on('click', () => { d3.event.stopPropagation(); });\r\n  \r\n  // Link from bias to the plus symbol\r\n  symbolGroup.append('path')\r\n    .attr('d', linkGen({\r\n      source: { x: 0, y: 0 },\r\n      target: { x: 0, y: -nodeLength / 2 - 0.5 * kernelRectLength }\r\n    }))\r\n    .attr('id', 'bias-plus')\r\n    .attr('stroke-width', 1.2)\r\n    .attr('stroke', '#E5E5E5')\r\n    .lower();\r\n\r\n  // Link from the plus symbol to the output\r\n  linkData.push({\r\n    source: getOutputKnot({x: intermediateX2 + 2 * plusSymbolRadius - nodeLength,\r\n      y: nodeCoordinate[curLayerIndex][i].y}),\r\n    target: getInputKnot({x: nodeCoordinate[curLayerIndex][i].x - 3,\r\n      y: nodeCoordinate[curLayerIndex][i].y}),\r\n    name: `symbol-output`,\r\n    width: 1.2,\r\n    color: '#E5E5E5'\r\n  });\r\n\r\n  // Draw softmax operation symbol\r\n  let softmaxWidth = 55;\r\n  let emptySpace = ((totalLength - 2 * nodeLength - 2 * intermediateGap)\r\n    - softmaxWidth) / 2;\r\n  let symbolEndX = intermediateX2 + plusSymbolRadius * 2;\r\n  let softmaxX = emptySpace + symbolEndX;\r\n  let softmaxLeftMid = emptySpace / 2 + symbolEndX;\r\n  let softmaxTextY = nodeCoordinate[curLayerIndex][i].y - 2 * kernelRectLength - 6;\r\n  let moveX = (intermediateX2 - (intermediateX1 + pixelWidth + 3)) * 2 / 3;\r\n\r\n  let softmaxArg = {\r\n    curLayerIndex: curLayerIndex,\r\n    moveX: moveX,\r\n    symbolX: symbolX,\r\n    symbolY: symbolY,\r\n    outputX: nodeCoordinate[curLayerIndex][i].x,\r\n    outputY: symbolY,\r\n    softmaxLeftMid: softmaxLeftMid,\r\n    selectedI: i,\r\n    intermediateX1: intermediateX1,\r\n    intermediateX2: intermediateX2,\r\n    pixelWidth: pixelWidth,\r\n    pixelHeight: pixelHeight,\r\n    topY: topY,\r\n    bottomY: bottomY,\r\n    middleGap: middleGap,\r\n    middleRectHeight: middleRectHeight,\r\n    softmaxX: softmaxX,\r\n    softmaxWidth: softmaxWidth,\r\n    softmaxTextY: softmaxTextY,\r\n    symbolGroup: symbolGroup,\r\n    flattenRange: flattenRange\r\n  };\r\n\r\n  let softmaxSymbol = intermediateLayer.append('g')\r\n    .attr('class', 'softmax-symbol')\r\n    .attr('transform', `translate(${softmaxX}, ${symbolY})`)\r\n    .style('pointer-event', 'all')\r\n    .style('cursor', 'pointer')\r\n    .on('click', () => softmaxClicked(softmaxArg));\r\n  \r\n  softmaxSymbol.append('rect')\r\n    .attr('x', 0)\r\n    .attr('y', -plusSymbolRadius)\r\n    .attr('width', softmaxWidth)\r\n    .attr('height', plusSymbolRadius * 2)\r\n    .attr('stroke', intermediateColor)\r\n    .attr('rx', 2)\r\n    .attr('ry', 2)\r\n    .attr('fill', '#FAFAFA');\r\n  \r\n  softmaxSymbol.append('text')\r\n    .attr('x', 5)\r\n    .attr('y', 1)\r\n    .style('dominant-baseline', 'middle')\r\n    .style('font-size', '12px')\r\n    .style('opacity', 0.5)\r\n    .text('softmax');\r\n\r\n  // Draw the layer label\r\n  let layerLabel = intermediateLayer.append('g')\r\n    .attr('class', 'layer-label')\r\n    .classed('hidden', detailedMode)\r\n    .attr('transform', () => {\r\n      let x = leftX + nodeLength + (4 * hSpaceAroundGap * gapRatio +\r\n        pixelWidth) / 2;\r\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 + 5;\r\n      return `translate(${x}, ${y})`;\r\n    })\r\n    .style('cursor', 'help')\r\n    .on('click', () => {\r\n      d3.event.stopPropagation();\r\n      // Scroll to the article element\r\n      document.querySelector(`#article-flatten`).scrollIntoView({ \r\n        behavior: 'smooth' \r\n      });\r\n    });\r\n  \r\n  layerLabel.append('text')\r\n    .style('dominant-baseline', 'middle')\r\n    .style('opacity', 0.8)\r\n    .style('font-weight', 800)\r\n    .text('flatten');\r\n\r\n  let svgHeight = Number(d3.select('#cnn-svg').style('height').replace('px', '')) + 150;\r\n  let scroll = new SmoothScroll('a[href*=\"#\"]', {offset: -svgHeight});\r\n    \r\n  let detailedLabelGroup = intermediateLayer.append('g')\r\n    .attr('transform', () => {\r\n      let x = leftX + nodeLength + (4 * hSpaceAroundGap * gapRatio + pixelWidth) / 2;\r\n      let y = (svgPaddings.top + vSpaceAroundGap) / 2 - 5;\r\n      return `translate(${x}, ${y})`;\r\n    })\r\n    .attr('class', 'layer-detailed-label')\r\n    .classed('hidden', !detailedMode)\r\n    .style('cursor', 'help')\r\n    .on('click', () => {\r\n      d3.event.stopPropagation();\r\n      // Scroll to the article element\r\n      let anchor = document.querySelector(`#article-flatten`);\r\n      scroll.animateScroll(anchor);\r\n    });\r\n  \r\n  detailedLabelGroup.append('title')\r\n    .text('Move to article section');\r\n\r\n  let detailedLabelText = detailedLabelGroup.append('text')\r\n    .style('text-anchor', 'middle')\r\n    .style('dominant-baseline', 'middle')\r\n    .style('opacity', '0.7')\r\n    .style('font-weight', 800)\r\n    .append('tspan')\r\n    .text('flatten');\r\n  \r\n  let dimension = cnn[layerIndexDict['max_pool_2']].length * \r\n    cnn[layerIndexDict['max_pool_2']][0].output.length *\r\n    cnn[layerIndexDict['max_pool_2']][0].output[0].length;\r\n\r\n  detailedLabelText.append('tspan')\r\n    .attr('x', 0)\r\n    .attr('dy', '1.5em')\r\n    .style('font-size', '8px')\r\n    .style('font-weight', 'normal')\r\n    .text(`(${dimension})`);\r\n\r\n  // Add edges between nodes\r\n  let edgeGroup = flattenLayerLeftPart.append('g')\r\n    .attr('class', 'edge-group')\r\n    .lower();\r\n  \r\n  edgeGroup.selectAll('path')\r\n    .data(linkData)\r\n    .enter()\r\n    .append('path')\r\n    .attr('class', d => d.class)\r\n    .attr('id', d => `edge-${d.name}`)\r\n    .attr('d', d => linkGen({source: d.source, target: d.target}))\r\n    .style('fill', 'none')\r\n    .style('stroke-width', d => d.width)\r\n    .style('stroke', d => d.color === undefined ? intermediateColor : d.color)\r\n    .style('opacity', d => d.opacity);\r\n  \r\n  edgeGroup.selectAll('path.flatten-abstract-output')\r\n    .lower();\r\n\r\n  edgeGroup.selectAll('path.flatten,path.flatten-output')\r\n    .style('cursor', 'crosshair')\r\n    .style('pointer-events', 'all')\r\n    .on('mouseover', flattenMouseOverHandler)\r\n    .on('mouseleave', flattenMouseLeaveHandler)\r\n    .on('click', () => { d3.event.stopPropagation() });\r\n  \r\n  // Add legend\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: range,\r\n    minMax: cnnLayerMinMax[10],\r\n    group: intermediateLayer,\r\n    width: intermediateGap + nodeLength - 3,\r\n    x: leftX,\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10\r\n  });\r\n\r\n  drawIntermediateLayerLegend({\r\n    legendHeight: 5,\r\n    curLayerIndex: curLayerIndex,\r\n    range: flattenRange,\r\n    minMax: {min: flattenExtent[0], max: flattenExtent[1]},\r\n    group: intermediateLayer,\r\n    width: intermediateGap - 3 - 5,\r\n    gradientAppendingName: 'flatten-weight-gradient',\r\n    gradientGap: 0.1,\r\n    colorScale: layerColorScales.weight,\r\n    x: leftX + intermediateGap + nodeLength + pixelWidth + 3,\r\n    y: svgPaddings.top + vSpaceAroundGap * (10) + vSpaceAroundGap + \r\n      nodeLength * 10\r\n  });\r\n\r\n  // Add annotation to the intermediate layer\r\n  let intermediateLayerAnnotation = svg.append('g')\r\n    .attr('class', 'intermediate-layer-annotation')\r\n    .style('opacity', 0);\r\n\r\n  // Add annotation for the sum operation\r\n  let plusAnnotation = intermediateLayerAnnotation.append('g')\r\n    .attr('class', 'plus-annotation');\r\n  \r\n  // let textX = nodeCoordinate[curLayerIndex][i].x - 50;\r\n  let textX = intermediateX2;\r\n  let textY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\r\n    kernelRectLength * 3;\r\n  let arrowSY = nodeCoordinate[curLayerIndex][i].y + nodeLength +\r\n    kernelRectLength * 2;\r\n  let arrowTY = nodeCoordinate[curLayerIndex][i].y + nodeLength / 2 +\r\n    plusSymbolRadius;\r\n\r\n  if (i == 9) {\r\n    textY -= 110;\r\n    arrowSY -= 70;\r\n    arrowTY -= 18;\r\n  }\r\n\r\n  let plusText = plusAnnotation.append('text')\r\n    .attr('x', textX)\r\n    .attr('y', textY)\r\n    .attr('class', 'annotation-text')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('text-anchor', 'middle');\r\n  \r\n  plusText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('Add up all products');\r\n  \r\n  plusText.append('tspan')\r\n    .attr('x', textX)\r\n    .attr('dy', '1em')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('(');\r\n\r\n  plusText.append('tspan')\r\n    .style('fill', '#66a3c8')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('element');\r\n\r\n  plusText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text(' × ');\r\n\r\n  plusText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('fill', '#b58946')\r\n    .text('weight');\r\n\r\n  plusText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text(')');\r\n\r\n  plusText.append('tspan')\r\n    .attr('x', textX)\r\n    .attr('dy', '1em')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('and then ');\r\n\r\n  plusText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('fill', '#479d94')\r\n    .text('bias');\r\n  \r\n  drawArrow({\r\n    group: plusAnnotation,\r\n    sx: intermediateX2 - 2 * plusSymbolRadius - 3,\r\n    sy: arrowSY,\r\n    tx: intermediateX2 - 5,\r\n    ty: arrowTY,\r\n    dr: 30,\r\n    hFlip: i === 9,\r\n    marker: 'marker-alt'\r\n  });\r\n\r\n  // Add annotation for the bias\r\n  let biasTextY = nodeCoordinate[curLayerIndex][i].y;\r\n  biasTextY -= 2 * kernelRectLength + 4;\r\n  \r\n  flattenLayerLeftPart.append('text')\r\n    .attr('class', 'annotation-text')\r\n    .attr('x', intermediateX2 + plusSymbolRadius)\r\n    .attr('y', biasTextY)\r\n    .style('text-anchor', 'middle')\r\n    .style('dominant-baseline', 'baseline')\r\n    .text('Bias');\r\n  \r\n  // Add annotation for the softmax symbol\r\n  let softmaxAnnotation = intermediateLayerAnnotation.append('g')\r\n    .attr('class', 'softmax-annotation');\r\n  \r\n  softmaxAnnotation.append('text')\r\n    .attr('x', softmaxX + softmaxWidth / 2)\r\n    .attr('y', softmaxTextY)\r\n    .attr('class', 'annotation-text')\r\n    .style('dominant-baseline', 'baseline')\r\n    .style('text-anchor', 'middle')\r\n    .style('font-weight', 700)\r\n    .text('Click ')\r\n    .append('tspan')\r\n    .attr('dx', 1)\r\n    .style('font-weight', 400)\r\n    .text('to learn more');\r\n\r\n  drawArrow({\r\n    group: softmaxAnnotation,\r\n    sx: softmaxX + softmaxWidth / 2 - 5,\r\n    sy: softmaxTextY + 4,\r\n    tx: softmaxX + softmaxWidth / 2,\r\n    ty: symbolY - plusSymbolRadius - 4,\r\n    dr: 50,\r\n    hFlip: true\r\n  });\r\n\r\n  // Add annotation for the flatten layer\r\n  let flattenAnnotation = intermediateLayerAnnotation.append('g')\r\n    .attr('class', 'flatten-annotation');\r\n  \r\n  textX = leftX - 80;\r\n  textY = nodeCoordinate[curLayerIndex - 1][0].y;\r\n\r\n  let flattenText = flattenAnnotation.append('text')\r\n    .attr('x', textX)\r\n    .attr('y', textY)\r\n    .attr('class', 'annotation-text')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('text-anchor', 'middle');\r\n\r\n  let tempTspan = flattenText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('font-weight', 700)\r\n    .text('Hover over ');\r\n  \r\n  tempTspan.append('tspan')\r\n    .attr('dx', 1)\r\n    .style('font-weight', 400)\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('matrix to');\r\n  \r\n  flattenText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .attr('x', textX)\r\n    .attr('dy', '1em')\r\n    .text('see how it is flattened');\r\n  \r\n  flattenText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .attr('x', textX)\r\n    .attr('dy', '1em')\r\n    .text('into a 1D array!');\r\n\r\n  drawArrow({\r\n    group: flattenAnnotation,\r\n    sx: textX + 45,\r\n    sy: textY + nodeLength * 0.4 + 12,\r\n    tx: leftX - 10,\r\n    ty: textY + nodeLength / 2,\r\n    dr: 80,\r\n    hFlip: true\r\n  });\r\n\r\n  // Add annotation to explain the middle images\r\n  textY = nodeCoordinate[curLayerIndex - 1][1].y;\r\n\r\n  let middleText = flattenAnnotation.append('text')\r\n    .attr('x', textX)\r\n    .attr('y', textY)\r\n    .attr('class', 'annotation-text')\r\n    .style('dominant-baseline', 'hanging')\r\n    .style('text-anchor', 'middle');\r\n\r\n  middleText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .text('Same flattening');\r\n  \r\n  middleText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .attr('x', textX)\r\n    .attr('dy', '1em')\r\n    .text('operation for');\r\n\r\n  middleText.append('tspan')\r\n    .style('dominant-baseline', 'hanging')\r\n    .attr('x', textX)\r\n    .attr('dy', '1em')\r\n    .text('each neuron');\r\n\r\n  drawArrow({\r\n    group: flattenAnnotation,\r\n    sx: textX + 39,\r\n    sy: textY + 25,\r\n    tx: leftX - 10,\r\n    ty: textY + nodeLength / 2 - 2,\r\n    dr: 80,\r\n    hFlip: true,\r\n    marker: 'marker-alt'\r\n  });\r\n\r\n\r\n  // Add annotation for the output neuron\r\n  let outputAnnotation = intermediateLayerAnnotation.append('g')\r\n    .attr('class', 'output-annotation');\r\n  \r\n  outputAnnotation.append('text')\r\n    .attr('x', nodeCoordinate[layerIndexDict['output']][i].x)\r\n    .attr('y', nodeCoordinate[layerIndexDict['output']][i].y + 10)\r\n    .attr('class', 'annotation-text')\r\n    .text(`(${d3.format('.4f')(cnn[layerIndexDict['output']][i].output)})`);\r\n\r\n\r\n  /* Prototype of using arc to represent the flatten layer (future)\r\n  let pie = d3.pie()\r\n    .padAngle(0)\r\n    .sort(null)\r\n    .value(d => d.output)\r\n    .startAngle(0)\r\n    .endAngle(-Math.PI);\r\n\r\n  let radius = 490 / 2;\r\n  let arc = d3.arc()\r\n    .innerRadius(radius - 20)\r\n    .outerRadius(radius);\r\n\r\n  let arcs = pie(cnn.flatten);\r\n  console.log(arcs);\r\n\r\n  let test = svg.append('g')\r\n    .attr('class', 'test')\r\n    .attr('transform', 'translate(500, 250)');\r\n\r\n  test.selectAll(\"path\")\r\n    .data(arcs)\r\n    .join(\"path\")\r\n      .attr('class', 'arc')\r\n      .attr(\"fill\", d => colorScale((d.value + range/2) / range))\r\n      .attr(\"d\", arc);\r\n  */\r\n\r\n  // Show everything\r\n  svg.selectAll('g.intermediate-layer, g.intermediate-layer-annotation')\r\n    .transition()\r\n    .delay(500)\r\n    .duration(500)\r\n    .ease(d3.easeCubicInOut)\r\n    .style('opacity', 1);\r\n}","<script>\r\n  // Svelte functions\r\n  import { onMount } from 'svelte';\r\n  import {\r\n    cnnStore, svgStore, vSpaceAroundGapStore, hSpaceAroundGapStore,\r\n    nodeCoordinateStore, selectedScaleLevelStore, cnnLayerRangesStore,\r\n    needRedrawStore, cnnLayerMinMaxStore, detailedModeStore,\r\n    shouldIntermediateAnimateStore, isInSoftmaxStore, softmaxDetailViewStore,\r\n    hoverInfoStore, allowsSoftmaxAnimationStore, modalStore,\r\n    intermediateLayerPositionStore\r\n  } from '../stores.js';\r\n\r\n  // Svelte views\r\n  import ConvolutionView from '../detail-view/Convolutionview.svelte';\r\n  import ActivationView from '../detail-view/Activationview.svelte';\r\n  import PoolView from '../detail-view/Poolview.svelte';\r\n  import SoftmaxView from '../detail-view/Softmaxview.svelte';\r\n  import Modal from './Modal.svelte'\r\n  import Article from '../article/Article.svelte';\r\n\r\n  // Overview functions\r\n  import { loadTrainedModel, constructCNN } from '../utils/cnn-tf.js';\r\n  import { overviewConfig } from '../config.js';\r\n\r\n  import {\r\n    addOverlayRect, drawConv1, drawConv2, drawConv3, drawConv4\r\n  } from './intermediate-draw.js';\r\n\r\n  import {\r\n    moveLayerX, addOverlayGradient\r\n  } from './intermediate-utils.js';\r\n\r\n  import {\r\n    drawFlatten, softmaxDetailViewMouseOverHandler, softmaxDetailViewMouseLeaveHandler\r\n  } from './flatten-draw.js';\r\n\r\n  import {\r\n    drawOutput, drawCNN, updateCNN, updateCNNLayerRanges, drawCustomImage\r\n  } from './overview-draw.js';\r\n\r\n\r\n  // View bindings\r\n  let overviewComponent;\r\n  let scaleLevelSet = new Set(['local', 'module', 'global']);\r\n  let selectedScaleLevel = 'local';\r\n  selectedScaleLevelStore.set(selectedScaleLevel);\r\n  let previousSelectedScaleLevel = selectedScaleLevel;\r\n  let wholeSvg = undefined;\r\n  let svg = undefined;\r\n\r\n  $: selectedScaleLevel, selectedScaleLevelChanged();\r\n\r\n  // Configs\r\n  const layerColorScales = overviewConfig.layerColorScales;\r\n  const nodeLength = overviewConfig.nodeLength;\r\n  const plusSymbolRadius = overviewConfig.plusSymbolRadius;\r\n  const numLayers = overviewConfig.numLayers;\r\n  const edgeOpacity = overviewConfig.edgeOpacity;\r\n  const edgeInitColor = overviewConfig.edgeInitColor;\r\n  const edgeHoverColor = overviewConfig.edgeHoverColor;\r\n  const edgeHoverOuting = overviewConfig.edgeHoverOuting;\r\n  const edgeStrokeWidth = overviewConfig.edgeStrokeWidth;\r\n  const intermediateColor = overviewConfig.intermediateColor;\r\n  const kernelRectLength = overviewConfig.kernelRectLength;\r\n  const svgPaddings = overviewConfig.svgPaddings;\r\n  const gapRatio = overviewConfig.gapRatio;\r\n  const overlayRectOffset = overviewConfig.overlayRectOffset;\r\n  const classLists = overviewConfig.classLists;\r\n\r\n  // Shared properties\r\n  let needRedraw = [undefined, undefined];\r\n  needRedrawStore.subscribe( value => {needRedraw = value;} );\r\n\r\n  let nodeCoordinate = undefined;\r\n  nodeCoordinateStore.subscribe( value => {nodeCoordinate = value;} )\r\n\r\n  let cnnLayerRanges = undefined;\r\n  cnnLayerRangesStore.subscribe( value => {cnnLayerRanges = value;} )\r\n\r\n  let cnnLayerMinMax = undefined;\r\n  cnnLayerMinMaxStore.subscribe( value => {cnnLayerMinMax = value;} )\r\n\r\n  let detailedMode = undefined;\r\n  detailedModeStore.subscribe( value => {detailedMode = value;} )\r\n\r\n  let shouldIntermediateAnimate = undefined;\r\n  shouldIntermediateAnimateStore.subscribe(value => {\r\n    shouldIntermediateAnimate = value;\r\n  })\r\n\r\n  let vSpaceAroundGap = undefined;\r\n  vSpaceAroundGapStore.subscribe( value => {vSpaceAroundGap = value;} )\r\n\r\n  let hSpaceAroundGap = undefined;\r\n  hSpaceAroundGapStore.subscribe( value => {hSpaceAroundGap = value;} )\r\n\r\n  let isInSoftmax = undefined;\r\n  isInSoftmaxStore.subscribe( value => {isInSoftmax = value;} )\r\n\r\n  let softmaxDetailViewInfo = undefined;\r\n  softmaxDetailViewStore.subscribe( value => {\r\n    softmaxDetailViewInfo = value;\r\n  } )\r\n\r\n  let modalInfo = undefined;\r\n  modalStore.subscribe( value => {modalInfo = value;} )\r\n\r\n  let hoverInfo = undefined;\r\n  hoverInfoStore.subscribe( value => {hoverInfo = value;} )\r\n\r\n  let intermediateLayerPosition = undefined;\r\n  intermediateLayerPositionStore.subscribe ( value => {intermediateLayerPosition = value;} )\r\n\r\n  let width = undefined;\r\n  let height = undefined;\r\n  let model = undefined;\r\n  let selectedNode = {layerName: '', index: -1, data: null};\r\n  let isInIntermediateView = false;\r\n  let isInActPoolDetailView = false;\r\n  let actPoolDetailViewNodeIndex = -1;\r\n  let actPoolDetailViewLayerIndex = -1;\r\n  let detailedViewNum = undefined;\r\n  let disableControl = false;\r\n\r\n  // Wait to load\r\n  let cnn = undefined;\r\n\r\n  let detailedViewAbsCoords = {\r\n    1 : [600, 270, 490, 290],\r\n    2: [500, 270, 490, 290],\r\n    3 : [700, 270, 490, 290],\r\n    4: [600, 270, 490, 290],\r\n    5: [650, 270, 490, 290],\r\n    6 : [775, 270, 490, 290],\r\n    7 : [100, 270, 490, 290],\r\n    8 : [60, 270, 490, 290],\r\n    9 : [200, 270, 490, 290],\r\n    10 : [300, 270, 490, 290],\r\n  }\r\n\r\n  const layerIndexDict = {\r\n    'input': 0,\r\n    'conv_1_1': 1,\r\n    'relu_1_1': 2,\r\n    'conv_1_2': 3,\r\n    'relu_1_2': 4,\r\n    'max_pool_1': 5,\r\n    'conv_2_1': 6,\r\n    'relu_2_1': 7,\r\n    'conv_2_2': 8,\r\n    'relu_2_2': 9,\r\n    'max_pool_2': 10,\r\n    'output': 11\r\n  }\r\n\r\n  const layerLegendDict = {\r\n    0: {local: 'input-legend', module: 'input-legend', global: 'input-legend'},\r\n    1: {local: 'local-legend-0-1', module: 'module-legend-0', global: 'global-legend'},\r\n    2: {local: 'local-legend-0-1', module: 'module-legend-0', global: 'global-legend'},\r\n    3: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\r\n    4: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\r\n    5: {local: 'local-legend-0-2', module: 'module-legend-0', global: 'global-legend'},\r\n    6: {local: 'local-legend-1-1', module: 'module-legend-1', global: 'global-legend'},\r\n    7: {local: 'local-legend-1-1', module: 'module-legend-1', global: 'global-legend'},\r\n    8: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\r\n    9: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\r\n    10: {local: 'local-legend-1-2', module: 'module-legend-1', global: 'global-legend'},\r\n    11: {local: 'output-legend', module: 'output-legend', global: 'output-legend'}\r\n  }\r\n\r\n  let imageOptions = [\r\n    {file: 'boat_1.jpeg', class: 'lifeboat'},\r\n    {file: 'bug_1.jpeg', class: 'ladybug'},\r\n    {file: 'pizza_1.jpeg', class: 'pizza'},\r\n    {file: 'pepper_1.jpeg', class: 'bell pepper'},\r\n    {file: 'bus_1.jpeg', class: 'bus'},\r\n    {file: 'koala_1.jpeg', class: 'koala'},\r\n    {file: 'espresso_1.jpeg', class: 'espresso'},\r\n    {file: 'panda_1.jpeg', class: 'red panda'},\r\n    {file: 'orange_1.jpeg', class: 'orange'},\r\n    {file: 'car_1.jpeg', class: 'sport car'}\r\n  ];\r\n  let selectedImage = imageOptions[9].file;\r\n\r\n  let nodeData;\r\n  let selectedNodeIndex = -1;\r\n  let isExitedFromDetailedView = true;\r\n  let isExitedFromCollapse = true;\r\n  let customImageURL = null;\r\n\r\n  // Helper functions\r\n  const selectedScaleLevelChanged = () => {\r\n    if (svg !== undefined) {\r\n      if (!scaleLevelSet.add(selectedScaleLevel)) {\r\n        console.error('Encounter unknown scale level!');\r\n      }\r\n\r\n      // Update nodes and legends\r\n      if (selectedScaleLevel != previousSelectedScaleLevel){\r\n        // We can simply redraw all nodes using the new color scale, or we can\r\n        // make it faster by only redraw certian nodes\r\n        let updatingLayerIndexDict = {\r\n          local: {\r\n            module: [1, 2, 8, 9, 10],\r\n            global: [1, 2, 3, 4, 5, 8, 9, 10]\r\n          },\r\n          module: {\r\n            local: [1, 2, 8, 9, 10],\r\n            global: [1, 2, 3, 4, 5, 8, 9, 10]\r\n          },\r\n          global: {\r\n            local: [1, 2, 3, 4, 5, 8, 9, 10],\r\n            module: [1, 2, 3, 4, 5]\r\n          }\r\n        };\r\n\r\n        let updatingLayerIndex = updatingLayerIndexDict[\r\n          previousSelectedScaleLevel][selectedScaleLevel];\r\n\r\n        updatingLayerIndex.forEach(l => {\r\n          let range = cnnLayerRanges[selectedScaleLevel][l];\r\n          svg.select(`#cnn-layer-group-${l}`)\r\n            .selectAll('.node-image')\r\n            .each((d, i, g) => drawOutput(d, i, g, range));\r\n        });\r\n \r\n        // Hide previous legend\r\n        svg.selectAll(`.${previousSelectedScaleLevel}-legend`)\r\n          .classed('hidden', true);\r\n\r\n        // Show selected legends\r\n        svg.selectAll(`.${selectedScaleLevel}-legend`)\r\n          .classed('hidden', !detailedMode);\r\n      }\r\n      previousSelectedScaleLevel = selectedScaleLevel;\r\n      selectedScaleLevelStore.set(selectedScaleLevel);\r\n    }\r\n  }\r\n\r\n  const intermediateNodeMouseOverHandler = (d, i, g) => {\r\n    if (detailedViewNum !== undefined) { return; }\r\n    svg.select(`rect#underneath-gateway-${d.index}`)\r\n      .style('opacity', 1);\r\n  }\r\n\r\n  const intermediateNodeMouseLeaveHandler = (d, i, g) => {\r\n    // screenshot\r\n    // return;\r\n    if (detailedViewNum !== undefined) { return; }\r\n    svg.select(`rect#underneath-gateway-${d.index}`)\r\n      .style('opacity', 0);\r\n  }\r\n\r\n  const intermediateNodeClicked = (d, i, g, selectedI, curLayerIndex) => {\r\n    d3.event.stopPropagation();\r\n    isExitedFromCollapse = false;\r\n    // Use this event to trigger the detailed view\r\n    if (detailedViewNum === d.index) {\r\n      // Setting this for testing purposes currently.\r\n      selectedNodeIndex = -1; \r\n      // User clicks this node again -> rewind\r\n      detailedViewNum = undefined;\r\n      svg.select(`rect#underneath-gateway-${d.index}`)\r\n        .style('opacity', 0);\r\n    } \r\n    // We need to show a new detailed view (two cases: if we need to close the\r\n    // old detailed view or not)\r\n    else {\r\n      // Setting this for testing purposes currently.\r\n      selectedNodeIndex = d.index;\r\n      let inputMatrix = d.output;\r\n      let kernelMatrix = d.outputLinks[selectedI].weight;\r\n      // let interMatrix = singleConv(inputMatrix, kernelMatrix);\r\n      let colorScale = layerColorScales.conv;\r\n\r\n      // Compute the color range\r\n      let rangePre = cnnLayerRanges[selectedScaleLevel][curLayerIndex - 1];\r\n      let rangeCur = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\r\n      let range = Math.max(rangePre, rangeCur);\r\n\r\n      // User triggers a different detailed view\r\n      if (detailedViewNum !== undefined) {\r\n        // Change the underneath highlight\r\n        svg.select(`rect#underneath-gateway-${detailedViewNum}`)\r\n          .style('opacity', 0);\r\n        svg.select(`rect#underneath-gateway-${d.index}`)\r\n          .style('opacity', 1);\r\n      }\r\n      \r\n      // Dynamically position the detail view\r\n      let wholeSvg = d3.select('#cnn-svg');\r\n      let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\r\n      let svgWidth = +wholeSvg.style('width').replace('px', '');\r\n      let detailViewTop = 100 + svgYMid - 250 / 2;\r\n      let positionX = intermediateLayerPosition[Object.keys(layerIndexDict)[curLayerIndex]];\r\n\r\n      let posX = 0;\r\n      if (curLayerIndex > 6) {\r\n        posX = (positionX - svgPaddings.left) / 2;\r\n        posX = svgPaddings.left + posX - 486 / 2;\r\n      } else {\r\n        posX = (svgWidth + svgPaddings.right - positionX) / 2;\r\n        posX = positionX + posX - 486 / 2;\r\n      }\r\n\r\n      const detailview = document.getElementById('detailview');\r\n      detailview.style.top = `${detailViewTop}px`;\r\n      detailview.style.left = `${posX}px`;\r\n      detailview.style.position = 'absolute';\r\n\r\n      detailedViewNum = d.index;\r\n\r\n      // Send the currently used color range to detailed view\r\n      nodeData.colorRange = range;\r\n      nodeData.inputIsInputLayer = curLayerIndex <= 1;\r\n    }\r\n  }\r\n\r\n  // The order of the if/else statements in this function is very critical\r\n  const emptySpaceClicked = () => {\r\n    // If detail view -> rewind to intermediate view\r\n    if (detailedViewNum !== undefined) {\r\n          // Setting this for testing purposes currently.\r\n      selectedNodeIndex = -1; \r\n      // User clicks this node again -> rewind\r\n      svg.select(`rect#underneath-gateway-${detailedViewNum}`)\r\n        .style('opacity', 0);\r\n      detailedViewNum = undefined;\r\n    }\r\n\r\n    // If softmax view -> rewind to flatten layer view\r\n    else if (isInSoftmax) {\r\n      svg.select('.softmax-symbol')\r\n        .dispatch('click');\r\n    }\r\n\r\n    // If intermediate view -> rewind to overview\r\n    else if (isInIntermediateView) {\r\n      let curLayerIndex = layerIndexDict[selectedNode.layerName];\r\n      quitIntermediateView(curLayerIndex, selectedNode.domG, selectedNode.domI);\r\n      d3.select(selectedNode.domG[selectedNode.domI])\r\n        .dispatch('mouseleave');\r\n    }\r\n\r\n    // If pool/act detail view -> rewind to overview\r\n    else if (isInActPoolDetailView) {\r\n      quitActPoolDetailView();\r\n    }\r\n  }\r\n\r\n  const prepareToEnterIntermediateView = (d, g, i, curLayerIndex) => {\r\n    isInIntermediateView = true;\r\n    // Hide all legends\r\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\r\n      .classed('hidden', true);\r\n    svg.selectAll('.input-legend').classed('hidden', true);\r\n    svg.selectAll('.output-legend').classed('hidden', true);\r\n\r\n    // Hide the input annotation\r\n    svg.select('.input-annotation')\r\n      .classed('hidden', true);\r\n\r\n    // Highlight the previous layer and this node\r\n    svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\r\n      .selectAll('rect.bounding')\r\n      .style('stroke-width', 2);\r\n    \r\n    d3.select(g[i])\r\n      .select('rect.bounding')\r\n      .style('stroke-width', 2);\r\n    \r\n    // Disable control panel UI\r\n    // d3.select('#level-select').property('disabled', true);\r\n    // d3.selectAll('.image-container')\r\n    //   .style('cursor', 'not-allowed')\r\n    //   .on('mouseclick', () => {});\r\n    disableControl = true;\r\n    \r\n    // Allow infinite animation loop\r\n    shouldIntermediateAnimateStore.set(true);\r\n\r\n    // Highlight the labels\r\n    svg.selectAll(`g#layer-label-${curLayerIndex - 1},\r\n      g#layer-detailed-label-${curLayerIndex - 1},\r\n      g#layer-label-${curLayerIndex},\r\n      g#layer-detailed-label-${curLayerIndex}`)\r\n      .style('font-weight', '800');\r\n    \r\n    // Register a handler on the svg element so user can click empty space to quit\r\n    // the intermediate view\r\n    d3.select('#cnn-svg')\r\n      .on('click', emptySpaceClicked);\r\n  }\r\n\r\n  const quitActPoolDetailView = () => {\r\n    isInActPoolDetailView = false;\r\n    actPoolDetailViewNodeIndex = -1;\r\n\r\n    let layerIndex = layerIndexDict[selectedNode.layerName];\r\n    let nodeIndex = selectedNode.index;\r\n    svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\r\n      .select('rect.bounding')\r\n      .classed('hidden', true);\r\n\r\n    selectedNode.data.inputLinks.forEach(link => {\r\n      let layerIndex = layerIndexDict[link.source.layerName];\r\n      let nodeIndex = link.source.index;\r\n      svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\r\n        .select('rect.bounding')\r\n        .classed('hidden', true);\r\n    })\r\n\r\n    // Clean up the underneath rects\r\n    svg.select('g.underneath')\r\n      .selectAll('rect')\r\n      .remove();\r\n\r\n    // Show all edges\r\n    let unimportantEdges = svg.select('g.edge-group')\r\n      .selectAll('.edge')\r\n      .filter(d => {\r\n        return d.targetLayerIndex !== actPoolDetailViewLayerIndex;\r\n      })\r\n      .style('visibility', null);\r\n    \r\n    // Recover control UI\r\n    disableControl = false;\r\n\r\n    // Show legends if in detailed mode\r\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\r\n      .classed('hidden', !detailedMode);\r\n    svg.selectAll('.input-legend').classed('hidden', !detailedMode);\r\n    svg.selectAll('.output-legend').classed('hidden', !detailedMode);\r\n\r\n    // Also dehighlight the edge\r\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\r\n    edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\r\n      .transition()\r\n      .ease(d3.easeCubicOut)\r\n      .duration(200)\r\n      .style('stroke', edgeInitColor)\r\n      .style('stroke-width', edgeStrokeWidth)\r\n      .style('opacity', edgeOpacity);\r\n\r\n    // Remove the overlay rect\r\n    svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation')\r\n      .transition('remove')\r\n      .duration(500)\r\n      .ease(d3.easeCubicInOut)\r\n      .style('opacity', 0)\r\n      .on('end', (d, i, g) => {\r\n        svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation').remove();\r\n        svg.selectAll('defs.overlay-gradient').remove();\r\n        svg.select('.input-annotation').classed('hidden', false);\r\n      });\r\n\r\n    // Turn the fade out nodes back\r\n    svg.select(`g#cnn-layer-group-${layerIndex}`)\r\n      .selectAll('g.node-group')\r\n      .each((sd, si, sg) => {\r\n        d3.select(sg[si])\r\n          .style('pointer-events', 'all');\r\n    });\r\n\r\n    svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\r\n      .selectAll('g.node-group')\r\n      .each((sd, si, sg) => {\r\n        // Recover the old events\r\n        d3.select(sg[si])\r\n          .style('pointer-events', 'all')\r\n          .on('mouseover', nodeMouseOverHandler)\r\n          .on('mouseleave', nodeMouseLeaveHandler)\r\n          .on('click', nodeClickHandler);\r\n    });\r\n\r\n    // Deselect the node\r\n    selectedNode.layerName = '';\r\n    selectedNode.index = -1;\r\n    selectedNode.data = null;\r\n\r\n    actPoolDetailViewLayerIndex = -1;\r\n  }\r\n\r\n  const actPoolDetailViewPreNodeMouseOverHandler = (d, i, g) => {\r\n    // Highlight the edges\r\n    let layerIndex = layerIndexDict[d.layerName];\r\n    let nodeIndex = d.index;\r\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\r\n    \r\n    edgeGroup.selectAll(`path.edge-${actPoolDetailViewLayerIndex}-${nodeIndex}`)\r\n      .raise()\r\n      .transition()\r\n      .ease(d3.easeCubicInOut)\r\n      .duration(400)\r\n      .style('stroke', edgeHoverColor)\r\n      .style('stroke-width', '1')\r\n      .style('opacity', 1);\r\n    \r\n    // Highlight its border\r\n    d3.select(g[i]).select('rect.bounding')\r\n      .classed('hidden', false);\r\n    \r\n    // Highlight node's pair\r\n    let associatedLayerIndex = layerIndex - 1;\r\n    if (layerIndex === actPoolDetailViewLayerIndex - 1) {\r\n      associatedLayerIndex = layerIndex + 1;\r\n    }\r\n\r\n    svg.select(`g#layer-${associatedLayerIndex}-node-${nodeIndex}`)\r\n      .select('rect.bounding')\r\n      .classed('hidden', false);\r\n  }\r\n\r\n  const actPoolDetailViewPreNodeMouseLeaveHandler = (d, i, g) => {\r\n    // De-highlight the edges\r\n    let layerIndex = layerIndexDict[d.layerName];\r\n    let nodeIndex = d.index;\r\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\r\n\r\n    edgeGroup.selectAll(`path.edge-${actPoolDetailViewLayerIndex}-${nodeIndex}`)\r\n      .transition()\r\n      .ease(d3.easeCubicOut)\r\n      .duration(200)\r\n      .style('stroke', edgeInitColor)\r\n      .style('stroke-width', edgeStrokeWidth)\r\n      .style('opacity', edgeOpacity);\r\n    \r\n    // De-highlight its border\r\n    d3.select(g[i]).select('rect.bounding')\r\n      .classed('hidden', true);\r\n    \r\n    // De-highlight node's pair\r\n    let associatedLayerIndex = layerIndex - 1;\r\n    if (layerIndex === actPoolDetailViewLayerIndex - 1) {\r\n      associatedLayerIndex = layerIndex + 1;\r\n    }\r\n\r\n    svg.select(`g#layer-${associatedLayerIndex}-node-${nodeIndex}`)\r\n      .select('rect.bounding')\r\n      .classed('hidden', true);\r\n  }\r\n\r\n  const actPoolDetailViewPreNodeClickHandler = (d, i, g) => {\r\n    let layerIndex = layerIndexDict[d.layerName];\r\n    let nodeIndex = d.index;\r\n\r\n    // Click the pre-layer node in detail view has the same effect as clicking\r\n    // the cur-layer node, which is to open a new detail view window\r\n    svg.select(`g#layer-${layerIndex + 1}-node-${nodeIndex}`)\r\n      .node()\r\n      .dispatchEvent(new Event('click'));\r\n  }\r\n\r\n  const enterDetailView = (curLayerIndex, i) => {\r\n    isInActPoolDetailView = true;\r\n    actPoolDetailViewNodeIndex = i;\r\n    actPoolDetailViewLayerIndex = curLayerIndex;\r\n\r\n    // Dynamically position the detail view\r\n    let wholeSvg = d3.select('#cnn-svg');\r\n    let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\r\n    let svgWidth = +wholeSvg.style('width').replace('px', '');\r\n    let detailViewTop = 100 + svgYMid - 260 / 2;\r\n\r\n    let posX = 0;\r\n    if (curLayerIndex > 5) {\r\n      posX = nodeCoordinate[curLayerIndex - 1][0].x + 50;\r\n      posX = posX / 2 - 500 / 2;\r\n    } else {\r\n      posX = (svgWidth - nodeCoordinate[curLayerIndex][0].x - nodeLength) / 2;\r\n      posX = nodeCoordinate[curLayerIndex][0].x + nodeLength + posX - 500 / 2;\r\n\r\n    }\r\n\r\n    const detailview = document.getElementById('detailview');\r\n    detailview.style.top = `${detailViewTop}px`;\r\n    detailview.style.left = `${posX}px`;\r\n    detailview.style.position = 'absolute';\r\n\r\n    // Hide all edges\r\n    let unimportantEdges = svg.select('g.edge-group')\r\n      .selectAll('.edge')\r\n      .filter(d => {\r\n        return d.targetLayerIndex !== curLayerIndex;\r\n      })\r\n      .style('visibility', 'hidden');\r\n    \r\n    // Disable UI\r\n    disableControl = true;\r\n    \r\n    // Hide input annotaitons\r\n    svg.select('.input-annotation')\r\n      .classed('hidden', true);\r\n\r\n    // Hide legends\r\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\r\n      .classed('hidden', true);\r\n    svg.selectAll('.input-legend').classed('hidden', true);\r\n    svg.selectAll('.output-legend').classed('hidden', true);\r\n    svg.select(`#${layerLegendDict[curLayerIndex][selectedScaleLevel]}`)\r\n      .classed('hidden', false);\r\n\r\n    // Add overlay rects\r\n    let leftX = nodeCoordinate[curLayerIndex - 1][i].x;\r\n    // +5 to cover the detailed mode long label\r\n    let rightStart = nodeCoordinate[curLayerIndex][i].x + nodeLength + 5;\r\n\r\n    // Compute the left and right overlay rect width\r\n    let rightWidth = width - rightStart - overlayRectOffset / 2;\r\n    let leftWidth = leftX - nodeCoordinate[0][0].x;\r\n\r\n    // The overlay rects should be symmetric\r\n    if (rightWidth > leftWidth) {\r\n      let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\r\n        {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\r\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 1}];\r\n      addOverlayGradient('overlay-gradient-right', stops);\r\n      \r\n      let leftEndOpacity = 0.85 + (0.95 - 0.85) * (leftWidth / rightWidth);\r\n      stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: leftEndOpacity},\r\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\r\n      addOverlayGradient('overlay-gradient-left', stops);\r\n    } else {\r\n      let stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 1},\r\n        {offset: '50%', color: 'rgb(250, 250, 250)', opacity: 0.9},\r\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: 0.85}];\r\n      addOverlayGradient('overlay-gradient-left', stops);\r\n\r\n      let rightEndOpacity = 0.85 + (0.95 - 0.85) * (rightWidth / leftWidth);\r\n      stops = [{offset: '0%', color: 'rgb(250, 250, 250)', opacity: 0.85},\r\n        {offset: '100%', color: 'rgb(250, 250, 250)', opacity: rightEndOpacity}];\r\n      addOverlayGradient('overlay-gradient-right', stops);\r\n    }\r\n    \r\n    addOverlayRect('overlay-gradient-right',\r\n      rightStart + overlayRectOffset / 2 + 0.5,\r\n      0, rightWidth, height + svgPaddings.top);\r\n    \r\n    addOverlayRect('overlay-gradient-left',\r\n      nodeCoordinate[0][0].x - overlayRectOffset / 2,\r\n      0, leftWidth, height + svgPaddings.top);\r\n\r\n    svg.selectAll('rect.overlay')\r\n      .on('click', emptySpaceClicked);\r\n    \r\n    // Add underneath rectangles\r\n    let underGroup = svg.select('g.underneath');\r\n    let padding = 7;\r\n    for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\r\n      underGroup.append('rect')\r\n        .attr('class', 'underneath-gateway')\r\n        .attr('id', `underneath-gateway-${n}`)\r\n        .attr('x', nodeCoordinate[curLayerIndex - 1][n].x - padding)\r\n        .attr('y', nodeCoordinate[curLayerIndex - 1][n].y - padding)\r\n        .attr('width', (2 * nodeLength + hSpaceAroundGap) + 2 * padding)\r\n        .attr('height', nodeLength + 2 * padding)\r\n        .attr('rx', 10)\r\n        .style('fill', 'rgba(160, 160, 160, 0.3)')\r\n        .style('opacity', 0);\r\n      \r\n      // Update the event functions for these two layers\r\n      svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\r\n        .style('pointer-events', 'all')\r\n        .style('cursor', 'pointer')\r\n        .on('mouseover', actPoolDetailViewPreNodeMouseOverHandler)\r\n        .on('mouseleave', actPoolDetailViewPreNodeMouseLeaveHandler)\r\n        .on('click', actPoolDetailViewPreNodeClickHandler);\r\n    }\r\n    underGroup.lower();\r\n\r\n    // Highlight the selcted pair\r\n    underGroup.select(`#underneath-gateway-${i}`)\r\n      .style('opacity', 1);\r\n  }\r\n\r\n  const quitIntermediateView = (curLayerIndex, g, i) => {\r\n    // If it is the softmax detail view, quit that view first\r\n    if (isInSoftmax) {\r\n      svg.select('.logit-layer').remove();\r\n      svg.select('.logit-layer-lower').remove();\r\n      svg.selectAll('.plus-symbol-clone').remove();\r\n\r\n      // Instead of removing the paths, we hide them, so it is faster to load in\r\n      // the future\r\n      svg.select('.underneath')\r\n        .selectAll('.logit-lower')\r\n        .style('opacity', 0);\r\n\r\n      softmaxDetailViewStore.set({\r\n          show: false,\r\n          logits: []\r\n      })\r\n\r\n      allowsSoftmaxAnimationStore.set(false);\r\n    }\r\n    isInSoftmaxStore.set(false);\r\n    isInIntermediateView = false;\r\n\r\n    // Show the legend\r\n    svg.selectAll(`.${selectedScaleLevel}-legend`)\r\n      .classed('hidden', !detailedMode);\r\n    svg.selectAll('.input-legend').classed('hidden', !detailedMode);\r\n    svg.selectAll('.output-legend').classed('hidden', !detailedMode);\r\n\r\n    // Recover control panel UI\r\n    disableControl = false;\r\n\r\n    // Recover the input layer node's event\r\n    for (let n = 0; n < cnn[curLayerIndex - 1].length; n++) {\r\n      svg.select(`g#layer-${curLayerIndex - 1}-node-${n}`)\r\n        .on('mouseover', nodeMouseOverHandler)\r\n        .on('mouseleave', nodeMouseLeaveHandler)\r\n        .on('click', nodeClickHandler);\r\n    }\r\n\r\n    // Clean up the underneath rects\r\n    svg.select('g.underneath')\r\n      .selectAll('rect')\r\n      .remove();\r\n    detailedViewNum = undefined;\r\n\r\n    // Highlight the previous layer and this node\r\n    svg.select(`g#cnn-layer-group-${curLayerIndex - 1}`)\r\n      .selectAll('rect.bounding')\r\n      .style('stroke-width', 1);\r\n    \r\n    d3.select(g[i])\r\n      .select('rect.bounding')\r\n      .style('stroke-width', 1);\r\n\r\n    // Highlight the labels\r\n    svg.selectAll(`g#layer-label-${curLayerIndex - 1},\r\n      g#layer-detailed-label-${curLayerIndex - 1},\r\n      g#layer-label-${curLayerIndex},\r\n      g#layer-detailed-label-${curLayerIndex}`)\r\n      .style('font-weight', 'normal');\r\n\r\n    // Also unclick the node\r\n    // Record the current clicked node\r\n    selectedNode.layerName = '';\r\n    selectedNode.index = -1;\r\n    selectedNode.data = null;\r\n    isExitedFromCollapse = true;\r\n\r\n    // Remove the intermediate layer\r\n    let intermediateLayer = svg.select('g.intermediate-layer');\r\n\r\n    // Kill the infinite animation loop\r\n    shouldIntermediateAnimateStore.set(false);\r\n\r\n    intermediateLayer.transition('remove')\r\n      .duration(500)\r\n      .ease(d3.easeCubicInOut)\r\n      .style('opacity', 0)\r\n      .on('end', (d, i, g) => { d3.select(g[i]).remove()});\r\n    \r\n    // Remove the output node overlay mask\r\n    svg.selectAll('.overlay-group').remove();\r\n    \r\n    // Remove the overlay rect\r\n    svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation')\r\n      .transition('remove')\r\n      .duration(500)\r\n      .ease(d3.easeCubicInOut)\r\n      .style('opacity', 0)\r\n      .on('end', (d, i, g) => {\r\n        svg.selectAll('g.intermediate-layer-overlay, g.intermediate-layer-annotation').remove();\r\n        svg.selectAll('defs.overlay-gradient').remove();\r\n      });\r\n    \r\n    // Recover the layer if we have drdrawn it\r\n    if (needRedraw[0] !== undefined) {\r\n      let redrawRange = cnnLayerRanges[selectedScaleLevel][needRedraw[0]];\r\n      if (needRedraw[1] !== undefined) {\r\n        svg.select(`g#layer-${needRedraw[0]}-node-${needRedraw[1]}`)\r\n          .select('image.node-image')\r\n          .each((d, i, g) => drawOutput(d, i, g, redrawRange));\r\n      } else {\r\n        svg.select(`g#cnn-layer-group-${needRedraw[0]}`)\r\n          .selectAll('image.node-image')\r\n          .each((d, i, g) => drawOutput(d, i, g, redrawRange));\r\n      }\r\n    }\r\n    \r\n    // Move all layers to their original place\r\n    for (let i = 0; i < numLayers; i++) {\r\n      moveLayerX({layerIndex: i, targetX: nodeCoordinate[i][0].x,\r\n        disable:false, delay:500, opacity: 1});\r\n    }\r\n\r\n    moveLayerX({layerIndex: numLayers - 2,\r\n      targetX: nodeCoordinate[numLayers - 2][0].x, opacity: 1,\r\n      disable:false, delay:500, onEndFunc: () => {\r\n        // Show all edges on the last moving animation end\r\n        svg.select('g.edge-group')\r\n          .style('visibility', 'visible');\r\n\r\n        // Recover the input annotation\r\n        svg.select('.input-annotation')\r\n          .classed('hidden', false);\r\n      }});\r\n  }\r\n\r\n  const nodeClickHandler = (d, i, g) => {\r\n    d3.event.stopPropagation();\r\n    let nodeIndex = d.index;\r\n\r\n    // Record the current clicked node\r\n    selectedNode.layerName = d.layerName;\r\n    selectedNode.index = d.index;\r\n    selectedNode.data = d;\r\n    selectedNode.domI = i;\r\n    selectedNode.domG = g;\r\n\r\n    // Record data for detailed view.\r\n    if (d.type === 'conv' || d.type === 'relu' || d.type === 'pool') {\r\n      let data = [];\r\n      for (let j = 0; j < d.inputLinks.length; j++) {\r\n        data.push({\r\n          input: d.inputLinks[j].source.output,\r\n          kernel: d.inputLinks[j].weight,\r\n          output: d.inputLinks[j].dest.output,\r\n        })\r\n      }\r\n      let curLayerIndex = layerIndexDict[d.layerName];\r\n      data.colorRange = cnnLayerRanges[selectedScaleLevel][curLayerIndex];\r\n      data.isInputInputLayer = curLayerIndex <= 1;\r\n      nodeData = data;\r\n    }\r\n\r\n    let curLayerIndex = layerIndexDict[d.layerName];\r\n\r\n    if (d.type == 'relu' || d.type == 'pool') {\r\n      isExitedFromDetailedView = false;\r\n      if (!isInActPoolDetailView) {\r\n        // Enter the act pool detail view\r\n        enterDetailView(curLayerIndex, d.index);\r\n      } else {\r\n        if (d.index === actPoolDetailViewNodeIndex) {\r\n          // Quit the act pool detail view\r\n          quitActPoolDetailView();\r\n        } else {\r\n          // Switch the detail view input to the new clicked pair\r\n\r\n          // Remove the previous selection effect\r\n          svg.select(`g#layer-${curLayerIndex}-node-${actPoolDetailViewNodeIndex}`)\r\n            .select('rect.bounding')\r\n            .classed('hidden', true);\r\n\r\n          svg.select(`g#layer-${curLayerIndex - 1}-node-${actPoolDetailViewNodeIndex}`)\r\n            .select('rect.bounding')\r\n            .classed('hidden', true);\r\n          \r\n          let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\r\n      \r\n          edgeGroup.selectAll(`path.edge-${curLayerIndex}-${actPoolDetailViewNodeIndex}`)\r\n            .transition()\r\n            .ease(d3.easeCubicOut)\r\n            .duration(200)\r\n            .style('stroke', edgeInitColor)\r\n            .style('stroke-width', edgeStrokeWidth)\r\n            .style('opacity', edgeOpacity);\r\n          \r\n          let underGroup = svg.select('g.underneath');\r\n          underGroup.select(`#underneath-gateway-${actPoolDetailViewNodeIndex}`)\r\n            .style('opacity', 0);\r\n        \r\n          // Add selection effect on the new selected pair\r\n          svg.select(`g#layer-${curLayerIndex}-node-${nodeIndex}`)\r\n            .select('rect.bounding')\r\n            .classed('hidden', false);\r\n\r\n          svg.select(`g#layer-${curLayerIndex - 1}-node-${nodeIndex}`)\r\n            .select('rect.bounding')\r\n            .classed('hidden', false);\r\n\r\n          edgeGroup.selectAll(`path.edge-${curLayerIndex}-${nodeIndex}`)\r\n            .raise()\r\n            .transition()\r\n            .ease(d3.easeCubicInOut)\r\n            .duration(400)\r\n            .style('stroke', edgeHoverColor)\r\n            .style('stroke-width', '1')\r\n            .style('opacity', 1);\r\n\r\n          underGroup.select(`#underneath-gateway-${nodeIndex}`)\r\n            .style('opacity', 1);\r\n\r\n          actPoolDetailViewNodeIndex = nodeIndex;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Enter the second view (layer-view) when user clicks a conv node\r\n    if ((d.type === 'conv' || d.layerName === 'output') && !isInIntermediateView) {\r\n      prepareToEnterIntermediateView(d, g, nodeIndex, curLayerIndex);\r\n\r\n      if (d.layerName === 'conv_1_1') {\r\n        drawConv1(curLayerIndex, d, nodeIndex, width, height,\r\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n          intermediateNodeClicked);\r\n      }\r\n\r\n      else if (d.layerName === 'conv_1_2') {\r\n        drawConv2(curLayerIndex, d, nodeIndex, width, height,\r\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n          intermediateNodeClicked);\r\n      }\r\n\r\n      else if (d.layerName === 'conv_2_1') {\r\n        drawConv3(curLayerIndex, d, nodeIndex, width, height,\r\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n          intermediateNodeClicked);\r\n      }\r\n      \r\n      else if (d.layerName === 'conv_2_2') {\r\n        drawConv4(curLayerIndex, d, nodeIndex, width, height,\r\n          intermediateNodeMouseOverHandler, intermediateNodeMouseLeaveHandler,\r\n          intermediateNodeClicked);\r\n      }\r\n    \r\n      else if (d.layerName === 'output') {\r\n        drawFlatten(curLayerIndex, d, nodeIndex, width, height);\r\n      }\r\n    }\r\n    // Quit the layerview\r\n    else if ((d.type === 'conv' || d.layerName === 'output') && isInIntermediateView) {\r\n      quitIntermediateView(curLayerIndex, g, i);\r\n    }\r\n  }\r\n\r\n  const nodeMouseOverHandler = (d, i, g) => {\r\n    // if (isInIntermediateView || isInActPoolDetailView) { return; }\r\n    if (isInIntermediateView) { return; }\r\n\r\n    // Highlight the edges\r\n    let layerIndex = layerIndexDict[d.layerName];\r\n    let nodeIndex = d.index;\r\n    let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\r\n    \r\n    edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\r\n      .raise()\r\n      .transition()\r\n      .ease(d3.easeCubicInOut)\r\n      .duration(400)\r\n      .style('stroke', edgeHoverColor)\r\n      .style('stroke-width', '1')\r\n      .style('opacity', 1);\r\n    \r\n    // Highlight its border\r\n    d3.select(g[i]).select('rect.bounding')\r\n      .classed('hidden', false);\r\n    \r\n    // Highlight source's border\r\n    if (d.inputLinks.length === 1) {\r\n      let link = d.inputLinks[0];\r\n      let layerIndex = layerIndexDict[link.source.layerName];\r\n      let nodeIndex = link.source.index;\r\n      svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\r\n        .select('rect.bounding')\r\n        .classed('hidden', false);\r\n    } else {\r\n      svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\r\n        .selectAll('g.node-group')\r\n        .selectAll('rect.bounding')\r\n        .classed('hidden', false);\r\n    }\r\n\r\n    // Highlight the output text\r\n    if (d.layerName === 'output') {\r\n      d3.select(g[i])\r\n        .select('.output-text')\r\n        .style('opacity', 0.8)\r\n        .style('text-decoration', 'underline');\r\n    }\r\n\r\n    /* Use the following commented code if we have non-linear model\r\n    d.inputLinks.forEach(link => {\r\n      let layerIndex = layerIndexDict[link.source.layerName];\r\n      let nodeIndex = link.source.index;\r\n      svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\r\n        .select('rect.bounding')\r\n        .classed('hidden', false);\r\n    });\r\n    */\r\n  }\r\n\r\n  const nodeMouseLeaveHandler = (d, i, g) => {\r\n    // Screenshot\r\n    // return;\r\n\r\n    if (isInIntermediateView) { return; }\r\n    \r\n    // Keep the highlight if user has clicked\r\n    if (isInActPoolDetailView || (\r\n      d.layerName !== selectedNode.layerName ||\r\n      d.index !== selectedNode.index)){\r\n      let layerIndex = layerIndexDict[d.layerName];\r\n      let nodeIndex = d.index;\r\n      let edgeGroup = svg.select('g.cnn-group').select('g.edge-group');\r\n      \r\n      edgeGroup.selectAll(`path.edge-${layerIndex}-${nodeIndex}`)\r\n        .transition()\r\n        .ease(d3.easeCubicOut)\r\n        .duration(200)\r\n        .style('stroke', edgeInitColor)\r\n        .style('stroke-width', edgeStrokeWidth)\r\n        .style('opacity', edgeOpacity);\r\n\r\n      d3.select(g[i]).select('rect.bounding').classed('hidden', true);\r\n\r\n      if (d.inputLinks.length === 1) {\r\n        let link = d.inputLinks[0];\r\n        let layerIndex = layerIndexDict[link.source.layerName];\r\n        let nodeIndex = link.source.index;\r\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\r\n          .select('rect.bounding')\r\n          .classed('hidden', true);\r\n      } else {\r\n        svg.select(`g#cnn-layer-group-${layerIndex - 1}`)\r\n          .selectAll('g.node-group')\r\n          .selectAll('rect.bounding')\r\n          .classed('hidden', d => d.layerName !== selectedNode.layerName ||\r\n            d.index !== selectedNode.index);\r\n      }\r\n\r\n      // Dehighlight the output text\r\n      if (d.layerName === 'output') {\r\n        d3.select(g[i])\r\n          .select('.output-text')\r\n          .style('fill', 'black')\r\n          .style('opacity', 0.5)\r\n          .style('text-decoration', 'none');\r\n      }\r\n\r\n      /* Use the following commented code if we have non-linear model\r\n      d.inputLinks.forEach(link => {\r\n        let layerIndex = layerIndexDict[link.source.layerName];\r\n        let nodeIndex = link.source.index;\r\n        svg.select(`g#layer-${layerIndex}-node-${nodeIndex}`)\r\n          .select('rect.bounding')\r\n          .classed('hidden', true);\r\n      });\r\n      */\r\n    }\r\n  }\r\n  let logits = [-4.28, 2.96, -0.38, 5.24, -7.56, -3.43, 8.63, 2.63, 6.30, 0.68];\r\n  let selectedI = 4;\r\n\r\n  onMount(async () => {\r\n    // Create SVG\r\n    wholeSvg = d3.select(overviewComponent)\r\n      .select('#cnn-svg');\r\n    svg = wholeSvg.append('g')\r\n      .attr('class', 'main-svg')\r\n      .attr('transform', `translate(${svgPaddings.left}, 0)`);\r\n    svgStore.set(svg);\r\n\r\n    width = Number(wholeSvg.style('width').replace('px', '')) -\r\n      svgPaddings.left - svgPaddings.right;\r\n    height = Number(wholeSvg.style('height').replace('px', '')) -\r\n      svgPaddings.top - svgPaddings.bottom;\r\n\r\n    let cnnGroup = svg.append('g')\r\n      .attr('class', 'cnn-group');\r\n    \r\n    let underGroup = svg.append('g')\r\n      .attr('class', 'underneath');\r\n\r\n    let svgYMid = +wholeSvg.style('height').replace('px', '') / 2;\r\n    detailedViewAbsCoords = {\r\n      1 : [600, 100 + svgYMid - 220 / 2, 490, 290],\r\n      2: [500, 100 + svgYMid - 220 / 2, 490, 290],\r\n      3 : [700, 100 + svgYMid - 220 / 2, 490, 290],\r\n      4: [600, 100 + svgYMid - 220 / 2, 490, 290],\r\n      5: [650, 100 + svgYMid - 220 / 2, 490, 290],\r\n      6 : [850, 100 + svgYMid - 220 / 2, 490, 290],\r\n      7 : [100, 100 + svgYMid - 220 / 2, 490, 290],\r\n      8 : [60, 100 + svgYMid - 220 / 2, 490, 290],\r\n      9 : [200, 100 + svgYMid - 220 / 2, 490, 290],\r\n      10 : [300, 100 + svgYMid - 220 / 2, 490, 290],\r\n    }\r\n    \r\n    // Define global arrow marker end\r\n    svg.append(\"defs\")\r\n      .append(\"marker\")\r\n      .attr(\"id\", 'marker')\r\n      .attr(\"viewBox\", \"0 -5 10 10\")\r\n      .attr(\"refX\", 6)\r\n      .attr(\"refY\", 0)\r\n      .attr(\"markerWidth\", 6)\r\n      .attr(\"markerHeight\", 6)\r\n      .attr(\"orient\", \"auto\")\r\n      .append(\"path\")\r\n      .style('stroke-width', 1.2)\r\n      .style('fill', 'gray')\r\n      .style('stroke', 'gray')\r\n      .attr(\"d\", \"M0,-5L10,0L0,5\");\r\n\r\n    // Alternative arrow head style for non-interactive annotation\r\n    svg.append(\"defs\")\r\n      .append(\"marker\")\r\n      .attr(\"id\", 'marker-alt')\r\n      .attr(\"viewBox\", \"0 -5 10 10\")\r\n      .attr(\"refX\", 6)\r\n      .attr(\"refY\", 0)\r\n      .attr(\"markerWidth\", 6)\r\n      .attr(\"markerHeight\", 6)\r\n      .attr(\"orient\", \"auto\")\r\n      .append(\"path\")\r\n      .style('fill', 'none')\r\n      .style('stroke', 'gray')\r\n      .style('stroke-width', 2)\r\n      .attr(\"d\", \"M-5,-10L10,0L-5,10\");\r\n    \r\n    console.time('Construct cnn');\r\n    model = await loadTrainedModel('PUBLIC_URL/assets/data/model.json');\r\n    cnn = await constructCNN(`PUBLIC_URL/assets/img/${selectedImage}`, model);\r\n    console.timeEnd('Construct cnn');\r\n    cnnStore.set(cnn);\r\n\r\n    // Ignore the flatten layer for now\r\n    let flatten = cnn[cnn.length - 2];\r\n    cnn.splice(cnn.length - 2, 1);\r\n    cnn.flatten = flatten;\r\n    console.log(cnn);\r\n\r\n    updateCNNLayerRanges();\r\n\r\n    // Create and draw the CNN view\r\n    drawCNN(width, height, cnnGroup, nodeMouseOverHandler,\r\n      nodeMouseLeaveHandler, nodeClickHandler);\r\n  })\r\n\r\n  const detailedButtonClicked = () => {\r\n    detailedMode = !detailedMode;\r\n    detailedModeStore.set(detailedMode);\r\n\r\n    if (!isInIntermediateView){\r\n      // Show the legend\r\n      svg.selectAll(`.${selectedScaleLevel}-legend`)\r\n        .classed('hidden', !detailedMode);\r\n      \r\n      svg.selectAll('.input-legend').classed('hidden', !detailedMode);\r\n      svg.selectAll('.output-legend').classed('hidden', !detailedMode);\r\n    }\r\n    \r\n    // Switch the layer name\r\n    svg.selectAll('.layer-detailed-label')\r\n      .classed('hidden', !detailedMode);\r\n    \r\n    svg.selectAll('.layer-label')\r\n      .classed('hidden', detailedMode);\r\n  }\r\n\r\n  const imageOptionClicked = async (e) => {\r\n    let newImageName = d3.select(e.target).attr('data-imageName');\r\n\r\n    if (newImageName !== selectedImage) {\r\n      selectedImage = newImageName;\r\n\r\n      // Re-compute the CNN using the new input image\r\n      cnn = await constructCNN(`PUBLIC_URL/assets/img/${selectedImage}`, model);\r\n\r\n      // Ignore the flatten layer for now\r\n      let flatten = cnn[cnn.length - 2];\r\n      cnn.splice(cnn.length - 2, 1);\r\n      cnn.flatten = flatten;\r\n      cnnStore.set(cnn);\r\n\r\n      // Update all scales used in the CNN view\r\n      updateCNNLayerRanges();\r\n      updateCNN();\r\n    }\r\n  }\r\n\r\n  const customImageClicked = () => {\r\n\r\n    // Case 1: there is no custom image -> show the modal to get user input\r\n    if (customImageURL === null) {\r\n      modalInfo.show = true;\r\n      modalInfo.preImage = selectedImage;\r\n      modalStore.set(modalInfo);\r\n    }\r\n\r\n    // Case 2: there is an existing custom image, not the focus -> switch to this image\r\n    else if (selectedImage !== 'custom') {\r\n      let fakeEvent = {detail: {url: customImageURL}};\r\n      handleCustomImage(fakeEvent);\r\n    }\r\n\r\n    // Case 3: there is an existing custom image, and its the focus -> let user\r\n    // upload a new image\r\n    else {\r\n      modalInfo.show = true;\r\n      modalInfo.preImage = selectedImage;\r\n      modalStore.set(modalInfo);\r\n    }\r\n\r\n    if (selectedImage !== 'custom') {\r\n      selectedImage = 'custom';\r\n    }\r\n\r\n  }\r\n\r\n  const handleModalCanceled = (event) => {\r\n    // User cancels the modal without a successful image, so we restore the\r\n    // previous selected image as input\r\n    selectedImage = event.detail.preImage;\r\n  }\r\n\r\n  const handleCustomImage = async (event) => {\r\n    // User gives a valid image URL\r\n    customImageURL = event.detail.url;\r\n\r\n    // Re-compute the CNN using the new input image\r\n    cnn = await constructCNN(customImageURL, model);\r\n\r\n    // Ignore the flatten layer for now\r\n    let flatten = cnn[cnn.length - 2];\r\n    cnn.splice(cnn.length - 2, 1);\r\n    cnn.flatten = flatten;\r\n    cnnStore.set(cnn);\r\n\r\n    // Update the UI\r\n    let customImageSlot = d3.select(overviewComponent)\r\n      .select('.custom-image').node();\r\n    drawCustomImage(customImageSlot, cnn[0]);\r\n\r\n    // Update all scales used in the CNN view\r\n    updateCNNLayerRanges();\r\n    updateCNN();\r\n  }\r\n\r\n  function handleExitFromDetiledConvView(event) {\r\n    if (event.detail.text) {\r\n      detailedViewNum = undefined;\r\n      svg.select(`rect#underneath-gateway-${selectedNodeIndex}`)\r\n        .style('opacity', 0);\r\n      selectedNodeIndex = -1; \r\n    }\r\n  }\r\n\r\n  function handleExitFromDetiledPoolView(event) {\r\n    if (event.detail.text) {\r\n      quitActPoolDetailView();\r\n      isExitedFromDetailedView = true;\r\n    }\r\n  }\r\n\r\n  function handleExitFromDetiledActivationView(event) {\r\n    if (event.detail.text) {\r\n      quitActPoolDetailView();\r\n      isExitedFromDetailedView = true;\r\n    }\r\n  }\r\n\r\n  function handleExitFromDetiledSoftmaxView(event) {\r\n    softmaxDetailViewInfo.show = false;\r\n    softmaxDetailViewStore.set(softmaxDetailViewInfo);\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n  .overview {\r\n    padding: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .control-container {\r\n    padding: 5px 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n  }\r\n\r\n  .right-control {\r\n    display: flex;\r\n  }\r\n\r\n  .left-control {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .control > .select > #level-select {\r\n    padding-left: 2em;\r\n    padding-right: 2em;\r\n  }\r\n\r\n  .cnn {\r\n    width: 100%;\r\n    padding: 0;\r\n    background: var(--light-gray);\r\n    display: flex;\r\n  }\r\n\r\n  svg {\r\n    margin: 0 auto;\r\n    min-height: 490px;\r\n    max-height: 700px;\r\n    height: calc(100vh - 100px);\r\n    width: 100vw;\r\n  }\r\n\r\n  .is-very-small {\r\n    font-size: 12px;\r\n  }\r\n\r\n  #detailed-button {\r\n    margin-right: 10px;\r\n    color: #dbdbdb;\r\n    transition: border-color 300ms ease-in-out, color 200ms ease-in-out;\r\n  }\r\n\r\n  #detailed-button.is-activated, #detailed-button.is-activated:hover {\r\n    color: #3273dc;\r\n    border-color: #3273dc;\r\n  }\r\n\r\n  #detailed-button:hover {\r\n    color: #b5b5b5;\r\n  }\r\n\r\n  #hover-label {\r\n    transition: opacity 300ms ease-in-out;\r\n    text-overflow: ellipsis;\r\n    pointer-events: none;\r\n    margin-left: 5px;\r\n  }\r\n\r\n  .image-container {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    display: inline-block;\r\n    position: relative;\r\n    border: 2.5px solid #1E1E1E;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n    pointer-events: all;\r\n    transition: border 300ms ease-in-out;\r\n  }\r\n\r\n  .image-container img {\r\n    object-fit: cover;\r\n    max-width: 100%;\r\n    max-height: 100%;\r\n    z-index: -1;\r\n    transition: opacity 300ms ease-in-out;\r\n  }\r\n\r\n  .image-container.inactive {\r\n    border: 2.5px solid rgb(220, 220, 220);\r\n  }\r\n\r\n  .image-container.inactive > img {\r\n    opacity: 0.3;\r\n  }\r\n\r\n  .image-container.inactive:hover > img {\r\n    opacity: 0.6;\r\n  }\r\n\r\n  .image-container.inactive.disabled {\r\n    border: 2.5px solid rgb(220, 220, 220);\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  .image-container.inactive.disabled:hover {\r\n    border: 2.5px solid rgb(220, 220, 220);\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  .image-container.inactive.disabled > img {\r\n    opacity: 0.3;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  .image-container.inactive.disabled:hover > img {\r\n    opacity: 0.3;\r\n    cursor: not-allowed;\r\n  }\r\n\r\n  .image-container.inactive > .edit-icon {\r\n    color: #BABABA;\r\n  }\r\n\r\n  .image-container.inactive:hover > .edit-icon {\r\n    color: #777777;\r\n  }\r\n\r\n  .image-container.inactive:hover {\r\n    border: 2.5px solid #1E1E1E;\r\n  }\r\n\r\n  .edit-icon {\r\n    position: absolute;\r\n    bottom: -6px;\r\n    right: -7px;\r\n    font-size: 7px;\r\n    color: #1E1E1E;\r\n    transition: color 300ms ease-in-out;\r\n  }\r\n\r\n  :global(canvas) {\r\n    image-rendering: crisp-edges;\r\n  }\r\n\r\n  :global(.layer-label), :global(.layer-detailed-label), :global(.layer-intermediate-label) {\r\n    font-size: 12px;\r\n    opacity: 0.8;\r\n    text-anchor: middle;\r\n  }\r\n\r\n  :global(.colorLegend) {\r\n    font-size: 10px;\r\n  }\r\n\r\n  :global(.legend) {\r\n    transition: opacity 400ms ease-in-out;\r\n  }\r\n\r\n  :global(.legend > rect) {\r\n    opacity: 1;\r\n  }\r\n\r\n  :global(.legend text), :global(.legend line), :global(.legend path) {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  :global(.legend#output-legend > rect) {\r\n    opacity: 1;\r\n  }\r\n\r\n  :global(.hidden) {\r\n    opacity: 0;\r\n    pointer-events: none;\r\n  }\r\n\r\n  :global(.very-strong) {\r\n    stroke-width: 3px;\r\n  }\r\n\r\n  :global(.bounding), :global(.edge), :global(.edge-group),\r\n  :global(foreignObject), :global(.bounding-flatten),\r\n  :global(.underneath-gateway), :global(.input-annotation) {\r\n    transition: opacity 300ms ease-in-out;\r\n  }\r\n\r\n  :global(rect.bounding) {\r\n    transition: stroke-width 800ms ease-in-out, opacity 300ms ease-in-out;\r\n  }\r\n\r\n  :global(.annotation-text) {\r\n    pointer-events: none;\r\n    font-size: 10px;\r\n    font-style: italic;\r\n    fill: gray;\r\n  }\r\n\r\n  /* Change the cursor style on the detailed view input and output matrices */\r\n  :global(rect.square) {\r\n    cursor: crosshair;\r\n  }\r\n\r\n  :global(.animation-control-button) {\r\n    font-family: FontAwesome;\r\n    opacity: 0.8;\r\n    cursor: pointer;\r\n  }\r\n\r\n</style>\r\n\r\n<div class=\"overview\"\r\n  bind:this={overviewComponent}>\r\n\r\n  <div class=\"control-container\">\r\n\r\n    <div class=\"left-control\">\r\n      {#each imageOptions as image, i}\r\n        <div class=\"image-container\"\r\n          on:click={disableControl ? () => {} : imageOptionClicked}\r\n          class:inactive={selectedImage !== image.file}\r\n          class:disabled={disableControl}\r\n          data-imageName={image.file}>\r\n          <img src=\"PUBLIC_URL/assets/img/{image.file}\"\r\n            alt=\"image option\"\r\n            title=\"{image.class}\"\r\n            data-imageName={image.file}/>\r\n        </div>\r\n      {/each}\r\n\r\n      <!-- The plus button -->\r\n        <div class=\"image-container\"\r\n          class:inactive={selectedImage !== 'custom'}\r\n          class:disabled={disableControl}\r\n          data-imageName={'custom'}\r\n          on:click={disableControl ? () => {} : customImageClicked}>\r\n\r\n          <img class=\"custom-image\"\r\n            src=\"PUBLIC_URL/assets/img/plus.svg\"\r\n            alt=\"plus button\"\r\n            title=\"Add new input image\"\r\n            data-imageName=\"custom\"/>\r\n\r\n          <span class=\"fa-stack edit-icon\"\r\n            class:hidden={customImageURL === null}>\r\n            <i class=\"fas fa-circle fa-stack-2x\"></i>\r\n            <i class=\"fas fa-pen fa-stack-1x fa-inverse\"></i>\r\n          </span>\r\n\r\n        </div>\r\n\r\n      <button class=\"button is-very-small is-link is-light\"\r\n        id=\"hover-label\"\r\n        style=\"opacity:{hoverInfo.show ? 1 : 0}\">\r\n        <span class=\"icon\" style=\"margin-right: 5px;\">\r\n          <i class=\"fas fa-crosshairs \"></i>\r\n        </span>\r\n        <span id=\"hover-label-text\">\r\n          {hoverInfo.text}\r\n        </span>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"right-control\">\r\n\r\n      <button class=\"button is-very-small\"\r\n        id=\"detailed-button\"\r\n        disabled={disableControl}\r\n        class:is-activated={detailedMode}\r\n        on:click={detailedButtonClicked}>\r\n        <span class=\"icon\">\r\n          <i class=\"fas fa-eye\"></i>\r\n        </span>\r\n        <span id=\"hover-label-text\">\r\n          Show detail\r\n        </span>\r\n      </button>\r\n\r\n      <div class=\"control is-very-small has-icons-left\"\r\n        title=\"Change color scale range\">\r\n        <span class=\"icon is-left\">\r\n          <i class=\"fas fa-palette\"></i>\r\n        </span>\r\n\r\n        <div class=\"select\">\r\n          <select bind:value={selectedScaleLevel} id=\"level-select\"\r\n            disabled={disableControl}>\r\n            <option value=\"local\">Unit</option>\r\n            <option value=\"module\">Module</option>\r\n            <option value=\"global\">Global</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    \r\n  </div>\r\n\r\n  <div class=\"cnn\">\r\n    <svg id=\"cnn-svg\"></svg>\r\n  </div>\r\n</div>\r\n\r\n<!--<Article/>-->\r\n\r\n<div id='detailview'>\r\n  {#if selectedNode.data && selectedNode.data.type === 'conv' && selectedNodeIndex != -1}\r\n    <ConvolutionView on:message={handleExitFromDetiledConvView} input={nodeData[selectedNodeIndex].input} \r\n                      kernel={nodeData[selectedNodeIndex].kernel}\r\n                      dataRange={nodeData.colorRange}\r\n                      colorScale={nodeData.inputIsInputLayer ?\r\n                        layerColorScales.input[0] : layerColorScales.conv}\r\n                      isInputInputLayer={nodeData.inputIsInputLayer}\r\n                      isExited={isExitedFromCollapse}/>\r\n  {:else if selectedNode.data && selectedNode.data.type === 'relu'}\r\n    <ActivationView on:message={handleExitFromDetiledActivationView} input={nodeData[0].input} \r\n                    output={nodeData[0].output}\r\n                    dataRange={nodeData.colorRange}\r\n                    isExited={isExitedFromDetailedView}/>\r\n  {:else if selectedNode.data && selectedNode.data.type === 'pool'}\r\n    <PoolView on:message={handleExitFromDetiledPoolView} input={nodeData[0].input} \r\n              kernelLength={2}\r\n              dataRange={nodeData.colorRange}\r\n              isExited={isExitedFromDetailedView}/>\r\n  {:else if softmaxDetailViewInfo.show}\r\n    <SoftmaxView logits={softmaxDetailViewInfo.logits}\r\n                 logitColors={softmaxDetailViewInfo.logitColors}\r\n                 selectedI={softmaxDetailViewInfo.selectedI}\r\n                 highlightI={softmaxDetailViewInfo.highlightI}\r\n                 outputName={softmaxDetailViewInfo.outputName}\r\n                 outputValue={softmaxDetailViewInfo.outputValue}\r\n                 startAnimation={softmaxDetailViewInfo.startAnimation}\r\n                 on:xClicked={handleExitFromDetiledSoftmaxView}\r\n                 on:mouseOver={softmaxDetailViewMouseOverHandler}\r\n                 on:mouseLeave={softmaxDetailViewMouseLeaveHandler}/>\r\n  {/if}\r\n</div>\r\n\r\n<Modal on:xClicked={handleModalCanceled}\r\n  on:urlTyped={handleCustomImage}/>","<script>\r\n  import Overview from './overview/Overview.svelte';\r\n  import { cnnStore } from './stores.js';\r\n\r\n  // Enum to control the displaying view\r\n  const View = {\r\n    OVERVIEW: 'overview',\r\n    LAYERVIEW: 'layerview',\r\n    DETAILVIEW: 'detailview'\r\n  };\r\n\r\n  let mainView = View.OVERVIEW;\r\n\r\n  /* Example to read loaded cnn in other components:\r\n  $: if ( $cnnStore.length != 0) {\r\n    console.log($cnnStore);\r\n  }\r\n  */\r\n\r\n</script>\r\n\r\n<style>\r\n#explainer {\r\n  width: 100%;\r\n  padding: 0;\r\n  margin: auto;\r\n  /* outline: 1px solid var(--g-dark-gray); */\r\n}\r\n</style>\r\n\r\n<div id='explainer'>\r\n    <Overview />\r\n<!--    <Overview />-->\r\n</div>","<script>\r\n</script>\r\n\r\n<style>\r\n\t#header {\r\n\t\theight: 50px;\r\n\t\tdisplay: flex;\r\n\t\tpadding: 0 20px;\r\n\t\talign-items: center;\r\n\t\tbackground: rgb(30, 30, 30);\r\n    justify-content: space-between;\r\n\t}\r\n\r\n\t#logo {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t#logo-text {\r\n\t\tfont-size: 30px;\r\n\t\tcolor: var(--light-gray);\r\n\t\tfont-family: 'Courier New';\r\n\t\tmargin-right: 10px;\r\n\t}\r\n\r\n\t#svg-logo-tagline {\r\n\t\tfont-size: 23px;\r\n\t\tfill: rgb(255, 255, 255);\r\n\t\tdominant-baseline: baseline;\r\n\t\tfont-family: 'Neucha';\r\n\t}\r\n\r\n\t.icons {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-start;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.icon {\r\n\t\twidth: 27px;\r\n\t\theight: 27px;\r\n\t\tmargin-left: 15px;\r\n\t}\r\n\r\n\t.icon a{\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t}\r\n\r\n\t.icon img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain;\r\n\t}\r\n</style>\r\n\r\n<div id=\"header\">\r\n\r\n  <div id=\"logo\">\r\n    <div id=\"logo-text\">\r\n      Transfer Learning Common Knowledge Extractor\r\n    </div>\r\n\r\n\t\t<svg width=\"510px\" height=\"50px\">\r\n\t\t\t<defs>\r\n\t\t\t\t<filter x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\" filterUnits=\"objectBoundingBox\" id=\"chalk-texture\">\r\n\t\t\t\t\t<feTurbulence type=\"fractalNoise\" baseFrequency=\"2\" numOctaves=\"5\" stitchTiles=\"stitch\" result=\"f1\">\r\n\t\t\t\t\t</feTurbulence>\r\n\t\t\t\t\t<feColorMatrix type=\"matrix\" values=\"0 0 0 0 0, 0 0 0 0 0, 0 0 0 0 0, 0 0 0 -1.5 1.5\" result=\"f2\">\r\n\t\t\t\t\t</feColorMatrix>\r\n\t\t\t\t\t<feComposite operator=\"in\" in2=\"f2\" in=\"SourceGraphic\" result=\"f3\">\r\n\t\t\t\t\t</feComposite>\r\n\t\t\t\t</filter>\r\n\t\t\t</defs>\r\n\r\n\t\t</svg>\r\n  </div>\r\n\r\n<!--\t<div class=\"icons\">-->\r\n<!--\t-->\r\n<!--\t\t<div class=\"icon\" title=\"Research paper\">-->\r\n<!--\t\t\t<a target=\"_blank\" href=\"https://arxiv.org/abs/2004.15004\">-->\r\n<!--\t\t\t\t<img src=\"PUBLIC_URL/assets/img/pdf.png\" alt=\"pdf icon\"/>-->\r\n<!--\t\t\t</a>-->\r\n<!--\t\t</div>-->\r\n\r\n<!--\t\t<div class=\"icon\" title=\"Demo video\">-->\r\n<!--\t\t\t<a target=\"_blank\" href=\"https://youtu.be/HnWIHWFbuUQ\">-->\r\n<!--\t\t\t\t<img src=\"PUBLIC_URL/assets/img/youtube.png\" alt=\"youtube icon\"/>-->\r\n<!--\t\t\t</a>-->\r\n<!--\t\t</div>-->\r\n\r\n<!--\t\t<div class=\"icon\" title=\"Open-source code\">-->\r\n<!--\t\t\t<a target=\"_blank\" href=\"https://github.com/poloclub/cnn-explainer\">-->\r\n<!--\t\t\t\t<img src=\"PUBLIC_URL/assets/img/github.png\" alt=\"github icon\"/>-->\r\n<!--\t\t\t</a>-->\r\n<!--\t\t</div>-->\r\n\r\n<!--\t</div>-->\r\n</div>","<script>\r\n  import Explainer from './Explainer.svelte';\r\n  import Header from './Header.svelte';\r\n</script>\r\n\r\n<style>\r\n</style>\r\n\r\n<div id=\"app-page\">\r\n  <recommender-overlay\r\n    my-brand=\"Transfer Learning Common Knowledge Extractor\"\r\n    brands-to-ignore=\"CNN 101\"\r\n    recommendation-count=\"10\"\r\n    similar-candidate-count=\"15\"\r\n    position-left=\"30\"\r\n    display-delay=\"30000\"\r\n    homepage-url=\"https://parthganeriwala.github.io/\"\r\n  />\r\n  <Header />\r\n  <Explainer />\r\n</div>\r\n<!--    homepage-url=\"https://poloclub.github.io/\"-->\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {}\r\n});\r\n\r\n\r\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_custom_element_data","prop","set_data","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","mounting","i","length","option","__value","selected","undefined","selectedIndex","toggle_class","toggle","classList","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","afterUpdate","after_update","createEventDispatcher","type","detail","cancelable","callbacks","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","customElement","m","new_on_destroy","map","filter","on_destroy","destroy_component","detaching","filtered","targets","indexOf","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","subscribe","invalidate","size","cnnStore","svgStore","vSpaceAroundGapStore","hSpaceAroundGapStore","nodeCoordinateStore","selectedScaleLevelStore","cnnLayerRangesStore","cnnLayerMinMaxStore","needRedrawStore","detailedModeStore","shouldIntermediateAnimateStore","isInSoftmaxStore","softmaxDetailViewStore","allowsSoftmaxAnimationStore","hoverInfoStore","modalStore","intermediateLayerPositionStore","init2DArray","height","width","array","row","matrixDot","mat1","mat2","console","assert","result","j","matrixSlice","mat","xs","xe","ys","ye","s","matrixMax","curMax","Infinity","singleConv","kernel","stride","padding","stepSize","curWindow","dot","singleMaxPooling","kernelWidth","array1d","f","v","array2d","w","generateOutputMappings","output","kernelLength","padded_input_size","dilation","outputMapping","h_out","w_out","h_kern","w_kern","h_im","w_im","compute_input_multiplies_with_weight","hoverH","hoverW","weight_dims","outputMappings","input_multiplies_with_weight","h_weight","w_weight","flat_input","getMatrixSliceFromInputHighlights","matrix","highlights","indices","reduce","total","Math","floor","getMatrixSliceFromOutputHighlights","getVisualizationSizeConstraint","imageLength","getDataRange","image","maxRow","max","apply","minRow","min","range","abs","gridData","constraint","xpos","ypos","column","round","col","x","y","grid_final","isKernelMath","dataRange","outputLength","colorScale","d3","interpolateRdBu","isInputLayer","dispatch","oldHighlight","oldData","redraw","selectAll","remove","constrainedSvgSize","enter","normalizedValue","on","toString","replace","gridFinal","legendFinal","kernelRange","kernelColorScale","interpolateBrBG","multiplicationSymbolPadding","columns","texts","normalizedValueWithGap","isPaused","isInputInputLayer","testInputMatrixSlice","interval","counter","testOutputMatrixSlice","inputHighlights","outputHighlights","startConvolution","clearInterval","setInterval","flat_animated","animatedH","animatedW","inputMatrixSlice","outputMatrixSlice","testImage","testOutput","testKernel","handleScroll","svgHeight","Number","scroll","SmoothScroll","offset","querySelector","animateScroll","isExited","outputFinal","log","gridInputMatrixSlice","gridOutputMatrixSlice","startRelu","gridImage","gridOutput","startMaxPool","createElementNS","softmaxViewComponent","logits","logitColors","selectedI","highlightI","outputName","outputValue","startAnimation","svg","formater","n","format","mouseOverHandler","g","curI","mouseLeaveHandler","formulaRightGroup","denominatorGroup","curX","curText","hasInitialized","curBBox","getBBox","denominatorGroupBBox","numeratorText","formulaLeftGroup","transition","duration","error","show","modalComponent","valiImg","files","inputValue","showLoading","usingURL","errorInfo","modalInfo","canvas","getContext","drawImage","getImageData","src","err","reader","FileReader","onload","readAsDataURL","preImage","crossOrigin","tag","firstScriptTag","getElementsByTagName","window","onYouTubeIframeAPIReady","dispatchEvent","Event","nodeType","Node","layerName","bias","inputLinks","outputLinks","Link","source","dest","weight","constructCNN","async","inputImageFile","model","inputImageTensor","getInputImageArray","preTensor","tf","stack","outputs","layers","curTensor","squeeze","shape","transpose","allOutputs","cnn","inputLayer","inputShape","batchInputShape","inputImageArray","arraySync","curLayerIndex","layer","curLayerType","curLayerNodes","includes","biases","val","weights","preNode","curLink","curLogit","logit","sort","realIndex","link","preNodeWidth","preNodeNum","preNodeIndex","preNodeRow","preNodeCol","curNodeRealIndex","constructCNNFromOutputs","imageDataTo3DTensor","imageData","normalize","imageArray","pixelIndex","channelIndex","curEntry","arr","croppedArray","cropDimensions","startXIdx","startYIdx","networkInputSize","cropCentralSquare","tensor3d","imgFile","cssText","reject","canvasImage","inputImage","Image","resizeCanvas","resizeContext","resizeFactor","translate","scale","rotate","PI","imageWidth","imageHeight","onerror","overviewConfig","nodeLength","plusSymbolRadius","numLayers","edgeOpacity","edgeInitColor","edgeHoverColor","edgeHoverOuting","edgeStrokeWidth","intermediateColor","layerColorScales","interpolateGreys","conv","relu","pool","fc","interpolateOranges","svgPaddings","top","bottom","left","right","kernelRectLength","gapRatio","overlayRectOffset","classLists","getExtent","getOutputKnot","point","getInputKnot","gappedColorScale","gap","vSpaceAroundGap","hSpaceAroundGap","nodeCoordinate","selectedScaleLevel","cnnLayerRanges","cnnLayerMinMax","detailedMode","drawOutput","bufferCanvas","bufferContext","imageSingle","imageSingleArray","pixeIndex","color","rgb","largeCanvas","largeCanvasContext","putImageData","imageDataURL","toDataURL","drawOutputScore","delay","ease","easeCubicIn","getLegendGradient","gradientName","gradient","curProgress","curColor","drawCNN","cnnGroup","nodeMouseOverHandler","nodeMouseLeaveHandler","nodeClickHandler","leftAccuumulatedSpace","curLayer","isOutput","layerGroup","nodeGroups","classed","outputRectScale","scaleLinear","domain","each","layerNames","dimension","detailedLabels","labels","legends","legendHeight","range1","range2","localLegendScale1","localLegendScale2","localLegendAxis1","axisBottom","tickFormat","tickValues","localLegendAxis2","localLegend1","localLegend2","module","moduleLegendScale","moduleLegendAxis","moduleLegend","global","globalLegendScale","globalLegendAxis","globalLegend","outputLegendAxis","outputLegend","inputScale","inputLegendAxis","inputLegend","drawLegends","linkGen","linkHorizontal","linkData","curTarget","inputNodeIndex","flattenDimension","curSource","curWeight","targetLayerIndex","targetNodeIndex","sourceNodeIndex","getLinkData","inputAnnotation","redChannel","updateCNN","easeCubicOut","updateCNNLayerRanges","cnnLayerRangesLocal","curRange","aggregatedExtent","acc","cur","cnnLayerRangesComponent","numOfComponent","curArray","maxRange","cnnLayerRangesGlobal","moveLayerX","arg","layerIndex","targetX","disable","opacity","specialIndex","onEndFunc","transitionName","easeCubicInOut","addOverlayGradient","gradientID","stops","group","drawIntermediateLayerLegend","minMax","isInput","gradientAppendingName","gradientGap","normalizedColor","leftValue","zeroValue","rightValue","totalRange","zeroLocation","leftMidValue","rightMidValue","legendScale","legendAxis","intermediateLegend","legendGroup","drawArrow","sx","sy","tx","ty","dr","hFlip","marker","isEndOfAnimation","needRedraw","shouldIntermediateAnimate","intermediateLayerPosition","startOutputAnimation","kernelGroup","tickTime1D","slidingAnimation","originX","originY","oldTick","newTick","animationButtonClicked","startIntermediateAnimation","kernelGroupInput","kernelGroupResult","originXResult","xResult","stopPropagation","animateEdge","interrupt","dashoffset","easeLinear","drawIntermediateLayer","leftX","rightX","rightStart","intermediateGap","intermediateNodeMouseOverHandler","intermediateNodeMouseLeaveHandler","intermediateNodeClicked","intermediateLayer","intermediateX1","intermediateX2","intermediateMinMax","kernelExtent","outputY","curNode","outputOverlayGroup","strideTime","raise","ni","inputMatrix","kernelMatrix","interMatrix","dataMatrix","drawIntermidiateImage","groupLayer","nodeIndex","interaction","newNode","datum","overlayGroup","createIntermediateNode","kernelRectX","weightText","f2","sep","concat","clone","aggregatedMinMax","symbolY","symbolGroup","edgeGroup","lower","kernelMinMax","drawIntermediateLayerAnnotation","sliderX","sliderY","arrowSX","arrowSY","sliderX2","sliderY2","arrowSX2","arrowSY2","dr2","arrowTX2","arrowTY2","isFirstConv","kernelAnnotation","slideText","slideText2","plusAnnotation","textX","textY","plusText","biasTextY","addUnderneathRect","underGroup","addOverlayRect","redrawLayerIfNeeded","rangePre","rangeCur","drawConv1","rightGap","finalMinMax","intermediateLayerAnnotation","drawConv2","drawConv3","leftEnd","leftGap","drawConv4","isInSoftmax","allowsSoftmaxAnimation","softmaxDetailViewInfo","hoverInfo","layerIndexDict","flattenFactoredFDict","moveLegend","moveX","restore","legend","previousLegendX","previousLegendY","previousTransform","logitCircleMouseOverHandler","logitLayer","logitLayerLower","logitCircleMouseLeaveHandler","softmaxDetailViewMouseOverHandler","softmaxDetailViewMouseLeaveHandler","softmaxClicked","symbolX","outputX","softmaxLeftMid","pixelWidth","pixelHeight","topY","bottomY","middleGap","middleRectHeight","softmaxX","softmaxTextY","softmaxWidth","flattenRange","centerX","previousX","softmaxAnnotation","softmaxDetailAnnotation","scrollIntoView","behavior","arrowTX","arrowTY","hoverTextGroup","hoverText","flattenLeftPart","tempClone","tempPlusSymbol","logitColorScale","extent","flattenLength","flatten","underneathIs","curIIndex","drawOneEdgeGroup","curEdgeGroup","factoredF","class","vi","curNodeGroup","symbolClone","outputEdgeD1","outputEdgeD2","outputEdge1","outputEdge2","outputEdgeLength1","getTotalLength","outputEdgeLength2","totalLength","totalDuration","opacityDuration","anchorElement","pos","elem","targetel","getScreenCTM","ownerSVGElement","createSVGPoint","bbox","matrixTransform","getMidCoords","detailViewTop","detailview","getElementById","position","drawLogitLayer","drawFlatten","curLeftBound","intermediateLayerOverlay","flattenLayerLeftPart","preLayerDimension","preLayerGap","boundingBoxLength","flattenExtent","flattenMouseOverHandler","da","flattenMouseLeaveHandler","loc","meanValues","emptySpace","symbolEndX","softmaxArg","softmaxSymbol","detailedLabelGroup","detailedLabelText","flattenAnnotation","flattenText","middleText","file","colorRange","inputIsInputLayer","iterations","overviewComponent","scaleLevelSet","previousSelectedScaleLevel","wholeSvg","selectedNode","isInIntermediateView","isInActPoolDetailView","actPoolDetailViewNodeIndex","actPoolDetailViewLayerIndex","detailedViewNum","disableControl","conv_1_1","relu_1_1","conv_1_2","relu_1_2","max_pool_1","conv_2_1","relu_2_1","conv_2_2","relu_2_2","max_pool_2","layerLegendDict","0","1","2","3","4","5","6","7","8","9","10","11","nodeData","imageOptions","selectedImage","selectedNodeIndex","isExitedFromDetailedView","isExitedFromCollapse","customImageURL","svgYMid","svgWidth","positionX","posX","emptySpaceClicked","quitIntermediateView","domG","domI","quitActPoolDetailView","sd","si","sg","actPoolDetailViewPreNodeMouseOverHandler","associatedLayerIndex","actPoolDetailViewPreNodeMouseLeaveHandler","actPoolDetailViewPreNodeClickHandler","redrawRange","rightWidth","leftWidth","enterDetailView","prepareToEnterIntermediateView","modelFile","time","loadLayersModel","timeEnd","handleCustomImage","red","green","blue","drawCustomImage","newImageName","selected_option","body"],"mappings":"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"}